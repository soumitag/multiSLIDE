{"ast":null,"code":"import { Observable } from '../Observable';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function fromIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n\n  if (!scheduler) {\n    return new Observable(subscribeToIterable(input));\n  } else {\n    return scheduleIterable(input, scheduler);\n  }\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromIterable.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,mBAAT,QAAoC,6BAApC;AACA,SAAS,gBAAT,QAAiC,+BAAjC;AAEA,OAAM,SAAU,YAAV,CAA0B,KAA1B,EAA8C,SAA9C,EAAuE;AAC3E,MAAI,CAAC,KAAL,EAAY;AACV,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO,IAAI,UAAJ,CAAkB,mBAAmB,CAAC,KAAD,CAArC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,gBAAgB,CAAC,KAAD,EAAQ,SAAR,CAAvB;AACD;AACF","sourcesContent":["import { Observable } from '../Observable';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return scheduleIterable(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromIterable.js.map"]},"metadata":{},"sourceType":"module"}