{"ast":null,"code":"import _classCallCheck from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\", [[\"mat-card-footer\"]]];\nvar _c1 = [\"*\", \"mat-card-footer\"];\nvar _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nvar _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nvar _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nvar _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\n\nvar MatCardContent = function MatCardContent() {\n  _classCallCheck(this, MatCardContent);\n};\n\nMatCardContent.ɵfac = function MatCardContent_Factory(t) {\n  return new (t || MatCardContent)();\n};\n\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardContent,\n  selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]],\n  hostAttrs: [1, \"mat-card-content\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n      host: {\n        'class': 'mat-card-content'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardTitle = function MatCardTitle() {\n  _classCallCheck(this, MatCardTitle);\n};\n\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) {\n  return new (t || MatCardTitle)();\n};\n\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardTitle,\n  selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n  hostAttrs: [1, \"mat-card-title\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n    type: Directive,\n    args: [{\n      selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n      host: {\n        'class': 'mat-card-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardSubtitle = function MatCardSubtitle() {\n  _classCallCheck(this, MatCardSubtitle);\n};\n\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) {\n  return new (t || MatCardSubtitle)();\n};\n\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardSubtitle,\n  selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n  hostAttrs: [1, \"mat-card-subtitle\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n    type: Directive,\n    args: [{\n      selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n      host: {\n        'class': 'mat-card-subtitle'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardActions = function MatCardActions() {\n  _classCallCheck(this, MatCardActions);\n\n  /**\n   * Position of the actions inside the card.\n   */\n  this.align = 'start';\n};\n\nMatCardActions.ɵfac = function MatCardActions_Factory(t) {\n  return new (t || MatCardActions)();\n};\n\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardActions,\n  selectors: [[\"mat-card-actions\"]],\n  hostAttrs: [1, \"mat-card-actions\"],\n  hostVars: 2,\n  hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    }\n  },\n  inputs: {\n    align: \"align\"\n  },\n  exportAs: [\"matCardActions\"]\n});\nMatCardActions.propDecorators = {\n  align: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-actions',\n      exportAs: 'matCardActions',\n      host: {\n        'class': 'mat-card-actions',\n        '[class.mat-card-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Position of the actions inside the card.\n   * @type {?}\n   */\n  MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardFooter = function MatCardFooter() {\n  _classCallCheck(this, MatCardFooter);\n};\n\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) {\n  return new (t || MatCardFooter)();\n};\n\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardFooter,\n  selectors: [[\"mat-card-footer\"]],\n  hostAttrs: [1, \"mat-card-footer\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-footer',\n      host: {\n        'class': 'mat-card-footer'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardImage = function MatCardImage() {\n  _classCallCheck(this, MatCardImage);\n};\n\nMatCardImage.ɵfac = function MatCardImage_Factory(t) {\n  return new (t || MatCardImage)();\n};\n\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardImage,\n  selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n  hostAttrs: [1, \"mat-card-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-image], [matCardImage]',\n      host: {\n        'class': 'mat-card-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardSmImage = function MatCardSmImage() {\n  _classCallCheck(this, MatCardSmImage);\n};\n\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) {\n  return new (t || MatCardSmImage)();\n};\n\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardSmImage,\n  selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n  hostAttrs: [1, \"mat-card-sm-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-sm-image], [matCardImageSmall]',\n      host: {\n        'class': 'mat-card-sm-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardMdImage = function MatCardMdImage() {\n  _classCallCheck(this, MatCardMdImage);\n};\n\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) {\n  return new (t || MatCardMdImage)();\n};\n\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardMdImage,\n  selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n  hostAttrs: [1, \"mat-card-md-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-md-image], [matCardImageMedium]',\n      host: {\n        'class': 'mat-card-md-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardLgImage = function MatCardLgImage() {\n  _classCallCheck(this, MatCardLgImage);\n};\n\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) {\n  return new (t || MatCardLgImage)();\n};\n\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardLgImage,\n  selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n  hostAttrs: [1, \"mat-card-lg-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-lg-image], [matCardImageLarge]',\n      host: {\n        'class': 'mat-card-lg-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardXlImage = function MatCardXlImage() {\n  _classCallCheck(this, MatCardXlImage);\n};\n\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) {\n  return new (t || MatCardXlImage)();\n};\n\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardXlImage,\n  selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n  hostAttrs: [1, \"mat-card-xl-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-xl-image], [matCardImageXLarge]',\n      host: {\n        'class': 'mat-card-xl-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardAvatar = function MatCardAvatar() {\n  _classCallCheck(this, MatCardAvatar);\n};\n\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) {\n  return new (t || MatCardAvatar)();\n};\n\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardAvatar,\n  selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n  hostAttrs: [1, \"mat-card-avatar\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-avatar], [matCardAvatar]',\n      host: {\n        'class': 'mat-card-avatar'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n\n\nvar MatCard = // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n\n/**\n * @param {?=} _animationMode\n */\nfunction MatCard(_animationMode) {\n  _classCallCheck(this, MatCard);\n\n  this._animationMode = _animationMode;\n};\n\nMatCard.ɵfac = function MatCard_Factory(t) {\n  return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCard,\n  selectors: [[\"mat-card\"]],\n  hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"],\n  hostVars: 2,\n  hostBindings: function MatCard_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  exportAs: [\"matCard\"],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 0,\n  template: function MatCard_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵprojection(1, 1);\n    }\n  },\n  styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatCard.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCard, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card',\n      exportAs: 'matCard',\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-card mat-focus-indicator',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\n\n\nvar MatCardHeader = function MatCardHeader() {\n  _classCallCheck(this, MatCardHeader);\n};\n\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) {\n  return new (t || MatCardHeader)();\n};\n\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCardHeader,\n  selectors: [[\"mat-card-header\"]],\n  hostAttrs: [1, \"mat-card-header\"],\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 0,\n  consts: [[1, \"mat-card-header-text\"]],\n  template: function MatCardHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c2);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 2);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-header',\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-card-header'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\n\n\nvar MatCardTitleGroup = function MatCardTitleGroup() {\n  _classCallCheck(this, MatCardTitleGroup);\n};\n\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) {\n  return new (t || MatCardTitleGroup)();\n};\n\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCardTitleGroup,\n  selectors: [[\"mat-card-title-group\"]],\n  hostAttrs: [1, \"mat-card-title-group\"],\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 0,\n  template: function MatCardTitleGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c4);\n      ɵngcc0.ɵɵelementStart(0, \"div\");\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-title-group',\n      template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-card-title-group'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatCardModule = function MatCardModule() {\n  _classCallCheck(this, MatCardModule);\n};\n\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCardModule\n});\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatCardModule_Factory(t) {\n    return new (t || MatCardModule)();\n  },\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, {\n    declarations: function declarations() {\n      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar];\n    },\n    imports: function imports() {\n      return [MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule],\n      declarations: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };","map":{"version":3,"sources":["../../../../../material/card/card.ts","../../../../../material/card/card-module.ts","../../../../../material/card/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IA4Ba,c;;;;+BAJZ,sB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,cAAA,GAAD;AACE,C;;6BAAwD,iB,CAAA;AAAA,EAAA,IAAA,EAAA,cAAA;AAC5D,EAAA,SAAQ,EAAE,CAAA,CAAA,kBAAA,CAAA,EAAmB,CAAA,EAAA,EAAA,kBAAA,EACpC,EADoC,CAAnB,EACjB,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,CADiB,CADkD;AAEnE,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,kBAAA;AAFmE,C;;;;;;;;;;;;;AAG/D,C;AAAC;;;;;;IAYO,Y;;;;6BANZ,oB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,YAAA,GAAD;AACE,C;;2BAAkD,iB,CAAA;AAAA,EAAA,IAAA,EAAA,YAAA;AACxD,EAAA,SAAE,EAAA,CAAA,CAAA,gBAAA,CAAA,EACK,CAAA,EAAA,EAAA,gBAAA,EAAgB,EAAhB,CADL,EACqB,CAAA,EAAA,EAAA,cAAA,EAE5B,EAF4B,CADrB,CADsD;AAI7D,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,gBAAA;AAJ6D,C;;;;;;;;;;;;;AAKzD,C;AAAC;;;;;;IAYO,e;;;;gCANZ,uB,CAAS,C,EAAA;AAAC,SAAA,KAAA,CAAA,IAAA,eAAA,GAAA;AACC,C;;8BAA2D,iB,CAAA;AAAA,EAAA,IAAA,EAAA,eAAA;AAC/D,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,EACK,CAAA,EAAA,EAAA,mBAAA,EAAmB,EAAnB,CADL,EAEL,CAAA,EAAA,EAAA,iBAAA,EACF,EADE,CAFK,CAD+D;AAItE,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,mBAAA;AAJsE,C;;;;;;;;;;;;;AAKlE,C;AAAC;;;;;;IAcO,c,GARb,0BAAA;AAAA;;AACG;;;AASQ,OAAA,KAAA,GAAyB,OAAzB;AACV,C;;+BAXA,sB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,cAAA,GAAD;AACE,C;;AAAkB,cAAA,CAAA,IAAA,GAAA,MAC5B,CAAA,iBAD4B,CAClB;AAAA,EAAA,IAAgB,EAAA,cAAhB;AACV,EAAA,SAAM,EAAA,CAAA,CAAA,kBAAA,CAAA,CADI;AAED,EAAA,SAAE,EAAA,CAAA,CAAA,EAAA,kBAAA,CAFD;AAEmB,EAAA,QAC3B,EAAA,CAHQ;AAGR,EAAA,YAAA,EAAA,SAAA,2BAAA,CAAuD,EAAvD,EAAuD,GAAvD,EAAuD;AAAA,QACxD,EAAA,GAAA,CADwD,EACxD;AACF,MAAA,MAAA,CAAA,WAAA,CAAA,4BAAA,EAAA,GAAA,CAAA,KAAA,KAAA,KAAA;;GALW;;;GAAA;aAMP,gB;AANO,CADkB,CAAA;AAOxB,cAAA,CAAA,cAAA,GAAA;AACI,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACP;AADO,GAAA;AADJ,CAAA;;;;;;;;;;;;;;;;;;;;;AAEQ,C;;AAAC,IAAA,KAAA,EAAA;AAAa;;;;AAA1B,EAAA,cAAA,CAAA,SAAA,CAAA,KAAA;AACF;AACA;;;;;;IASa,a;;;;8BAJZ,qB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,aAAA,GAAD;AACE,C;;AAAiB,aAAA,CAAA,IAAA,GAAA,MAC3B,CAAA,iBAD2B,CACX;AAAA,EAAA,IAAA,EAAA,aAAA;AAAkB,EAAA,SACnC,EAAA,CAAA,CAAA,iBAAA,CAAA,CADiB;AACjB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,iBAAA;AADiB,CADW,CAAA;;;;;;;;;;;;;AAGxB,C;AAAC;;;;;;IAUO,Y;;;;6BAJZ,oB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,YAAA,GAAD;AACE,C;;2BAAkC,iB,CAAA;AAC5C,EAAA,IAAI,EAAE,YADsC;AAC5B,EAAA,SAAA,EAAA,CAAgB,CAAA,EAAA,EAAC,gBAAD,EACjC,EADiC,CAAhB,EACjB,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CADiB,CAD4B;AAE7C,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,gBAAA;AAF6C,C;;;;;;;;;;;;;AAGzC,C;AAAC;;;;;;IAUO,c;;;;+BAJZ,sB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,cAAA,GAAD;AACE,C;;6BAA0C,iB,CAAA;AAAA,EAAA,IACpD,EAAI,cADgD;AACpC,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAoB,mBAApB,EACjB,EADiB,CAAA,EACjB,CAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,CADiB,CADoC;AAErD,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,mBAAA;AAFqD,C;;;;;;;;;;;;;AAGjD,C;AAAC;;;;;;IAUO,c;;;;+BAJZ,sB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,cAAA,GAAD;AACE,C;;6BAA2C,iB,CAAA;AAAA,EAAA,IACrD,EAAI,cADiD;AACrC,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAmB,mBAAnB,EACjB,EADiB,CAAA,EACjB,CAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,CADiB,CADqC;AAEtD,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,mBAAA;AAFsD,C;;;;;;;;;;;;;AAGlD,C;AAAC;;;;;;IAUO,c;;;;+BAJZ,sB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,cAAA,GAAD;AACE,C;;6BAA0C,iB,CAAA;AAAA,EAAA,IACpD,EAAI,cADgD;AACpC,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAoB,mBAApB,EACjB,EADiB,CAAA,EACjB,CAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,CADiB,CADoC;AAErD,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,mBAAA;AAFqD,C;;;;;;;;;;;;;AAGjD,C;AAAC;;;;;;IAUO,c;;;;+BAJZ,sB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,cAAA,GAAD;AACE,C;;6BAA2C,iB,CAAA;AAAA,EAAA,IACrD,EAAI,cADiD;AACrC,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAmB,mBAAnB,EACjB,EADiB,CAAA,EACjB,CAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,CADiB,CADqC;AAEtD,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,mBAAA;AAFsD,C;;;;;;;;;;;;;AAGlD,C;AAAC;;;;;;IAUO,a;;;;8BAJZ,qB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,aAAA,GAAD;AACE,C;;4BAAoC,iB,CAC9C;AAAA,EAAA,IAAM,EAAC,aAAP;AAAgB,EAAA,SAAA,EAAiB,CAAA,CAAC,EAAD,EAAC,iBAAD,EAClC,EADkC,CAAA,EAClC,CAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CADkC,CAAjC;AACD,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,iBAAA;AADC,C;;;;;;;;;;;;;AAEG,C;AAAC;;;;;;;;;;;;;IA0BO,O,GACb;;AACE;;;AAAA,iBAA8D,cAA9D,EAAqF;AAAA;;AAAvB,OAAA,cAAA,GAAA,cAAA;AAA2B,C;;wBAd1F,e,CAAA,C,EAAA;AAAS,SAAA,KAAC,CAAA,IAAA,OAAD,EACR,MAAA,CAAA,iBAAA,CAAoB,qBAApB,EACU,CADV,CADQ,CAAA;AAEE,C;;AAAS,OAAA,CAAA,IAAA,GAAA,MACnB,CAAA,iBADmB,CACnB;AAAA,EAAA,IAAA,EAAA,OAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,UAAA,CAAA,CAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,qBAAA,CAAA;AAEA,EAAA,QAAa,EAAE,CAFf;AAEe,EAAA,YAAA,EAAiB,SAAK,oBAAL,CAChC,EADgC,EAChC,GADgC,EACjB;AAAE,QAAA,EAAA,GAAA,CAAA,EAAA;AAAuB,MAAA,MAAC,CAAM,WAAP,CAAO,yBAAP,EAClC,GAAA,CAAA,cAAA,KACK,gBAF6B;AAEC;AAAA,GALzC;AAKyC,EAAA,QAAA,EAAA,CAAA,SAAA,CALzC;AAME,EAAA,kBAAA,EAAA,GANF;AAME,EAAA,KAAmC,EAAA,CANrC;AAMqC,EAAA,IAAA,EAAA,CANrC;AAMqC,EAAA,QAAA,EAAA,SAAA,gBAAA,CAAqC,EAArC,EAAqC,GAArC,EACpC;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;GAPD;WAQD,g8E,CARC;AAQD,EAAA,aAAA,EAAA,CARC;AAQD,EAAA,eAAA,EAAA;AARC,CADmB,CAAA;AAUhB;;AACJ,OAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAiC;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACnB;AADmB,KAAA,EACX;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KADW;AAAA,GAAjC,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACgE,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAAjE,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA;AAA0E;AAAE;;;;;;;IAgB7E,a;;;;8BAPZ,qB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,aAAA,GAAD;AACE,C;;AAAiB,aAAA,CAAA,IAAA,GAAA,MAC3B,CAAA,iBAD2B,CAC3B;AAAA,EAAA,IAAA,EAAA,aAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,iBAAA,CAAA;AAAA,EAAA,kBAAA,EAAA,GAAA;AAAA,EAAA,KAAA,EAAA,CAAA;AAAA,EAAA,IAAA,EAAA,CAAA;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,sBAAA,CAAA,CAAA;AAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;0BAA+B,C;aAC/B,c,CAAe,C,EAAA,K,EAAA,C;AAAsB,MAAA,MAAA,CAAA,YAAA,CACrC,CADqC,EACrC,CADqC;AACpB,MAAA,MAAA,CAAA,YAAA;AAA8B,MAAA,MAAA,CAAA,YAAA,CAC/C,CAD+C,EACzC,CADyC;AACjC;AAAE,GAHhB;AAGgB,EAAA,aAAA,EAAiB,CAHjC;AAGkC,EAAA,eACnC,EAAA;AAJC,CAD2B,CAAA;;;;;;;;;;;;;;;;AAMzB,C;AAAC;;;;;;;IAeQ,iB;;;;kCAPZ,yB,CAAS,C,EAAC;AAAA,SAAA,KAAA,CAAA,IACT,iBADS,GAAA;AACC,C;;AAAsB,iBAAA,CAAA,IAAA,GAChC,MAAA,CAAA,iBAAA,CAAA;AAAA,EAAA,IAAA,EAAA,iBAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,sBAAA,CAAA;AAAA,EAAA,kBAAA,EAAA,GAAA;AAAA,EAAA,KAAA,EAAA,CAAA;AAAA,EAAA,IAAA,EAAA,CAAA;AAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;aAAoC,e,CAAA,G;AACvB,MAAA,MAAE,CAAA,cAAF,CAAE,CAAF,EAAoB,KAApB;AACb,MAAA,MAAA,CAAA,YAAA,CAAe,CAAf;aAAwC,Y;aACxC,Y,CAAO,C,EAAO,C;aAAwB,Y,CAAC,C,EAAA,C;AACxC;AAAA,GAJC;AAID,EAAA,aAAA,EAAA,CAJC;AAID,EAAA,eAAA,EAAA;AAJC,CAAA,CADgC;;;;;;;;;;;;;;;;AAM9B,C;AAAE;;;;;;;ICjJO,a;;;;4BAzBZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,aAAO,CAAE,IAAT,GAAU,MAAA,CAAA,gBAAA,CAAgB;AAAA,EAAA,OAC1B,EAAO,SAAE,qBAAF,CACE,CADF,EACE;AAAA,WAAA,KAAA,CAAA,IACP,aADO,GAAA;AACM,GAHW;AAGX,EAAA,OAAA,EAAA,CAAA,CAAA,eAAA,CAAA,EACI,eADJ;AAHW,CAAhB,CAAV;;CAKgB,YAAA;AAAA,GAAA,OAAA,SAAA,KACd,WADc,IACF,SADE,KAEd,MAAA,CAAA,kBAAA,CAAe,aAAf,EACA;AAAA,IAAA,YAAc,EAAA,wBAAA;AAAA,aACd,CAAA,OAAA,EACA,aADA,EACc,iBADd,EAEA,cAFA,EAGA,YAHA,EAGc,eAHd,EAIA,cAJA,EAKA,aALA,EAKc,cALd,EAMA,cANA,EAOA,cAPA,EAOe,YAPf,EAQD,cARC,EASU,aATV,CADc;AAUF,KAVZ;AAUY,IAAA,OACZ,EAAA,mBAAS;AAAA,aAAa,CAAE,eAAF,CAAb;AAAkC,KAX3C;AAW2C,IAAA,OAAA,EAAA,mBAAgB;AAAA,aAAc,CAAA,OAAA,EAAe,aAAf,EACzE,iBADyE,EAC1C,cAD0C,EACZ,YADY,EACM,eADN,EAEzE,cAFyE,EAE3D,aAF2D,EAG1E,cAH0E,EAI5E,cAJ4E,E,cAAA,E,YAAA,E,cAAA,E,aAAA,E,eAAA,CAAd;;AAX3D,GADA,CAFc;;;;;;;;;;;;;;AAmBb,C;AAAE;;;;;;ACrDP;;;;;AAIA,SAAA,OAAA,EAAA,cAAA,EAAA,aAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,aAAA,EAAA,cAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,cAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-card mat-focus-indicator',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  }\n})\nexport class MatCard {\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}