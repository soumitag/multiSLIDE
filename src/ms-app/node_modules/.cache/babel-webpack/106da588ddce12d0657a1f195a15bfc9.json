{"ast":null,"code":"import _createClass from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n  }\n}\n\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n  }\n}\n\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n  }\n}\n\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n  }\n}\n\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n  }\n}\n\nfunction MatStepHeader_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n  }\n}\n\nfunction MatStepHeader_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n  }\n}\n\nfunction MatStepHeader_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n  }\n}\n\nfunction MatStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n  }\n}\n\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() {\n      var step_r2 = ctx.$implicit;\n      return step_r2.select();\n    })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7._onKeydown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var step_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    var isLast_r4 = ctx.last;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n  }\n}\n\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11._animationDone.next($event);\n    });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var step_r9 = ctx.$implicit;\n    var i_r10 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n  }\n}\n\nfunction MatVerticalStepper_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() {\n      var step_r1 = ctx.$implicit;\n      return step_r1.select();\n    })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5._onKeydown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7._animationDone.next($event);\n    });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var step_r1 = ctx.$implicit;\n    var i_r2 = ctx.index;\n    var isLast_r3 = ctx.last;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n  }\n}\n\nvar MatStepLabel = /*#__PURE__*/function (_CdkStepLabel) {\n  _inherits(MatStepLabel, _CdkStepLabel);\n\n  var _super = _createSuper(MatStepLabel);\n\n  function MatStepLabel() {\n    _classCallCheck(this, MatStepLabel);\n\n    return _super.apply(this, arguments);\n  }\n\n  return MatStepLabel;\n}(CdkStepLabel);\n\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) {\n  return ɵMatStepLabel_BaseFactory(t || MatStepLabel);\n};\n\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatStepLabel,\n  selectors: [[\"\", \"matStepLabel\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[matStepLabel]'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Stepper data that is required for internationalization.\n */\n\n\nvar MatStepperIntl = function MatStepperIntl() {\n  _classCallCheck(this, MatStepperIntl);\n\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  this.changes = new Subject();\n  /**\n   * Label that is rendered below optional steps.\n   */\n\n  this.optionalLabel = 'Optional';\n};\n\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) {\n  return new (t || MatStepperIntl)();\n};\n/** @nocollapse */\n\n\nMatStepperIntl.ɵprov = ɵɵdefineInjectable({\n  factory: function MatStepperIntl_Factory() {\n    return new MatStepperIntl();\n  },\n  token: MatStepperIntl,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   * @type {?}\n   */\n  MatStepperIntl.prototype.changes;\n  /**\n   * Label that is rendered below optional steps.\n   * @type {?}\n   */\n\n  MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\n\n\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\n\n\nvar MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar MatStepHeader = /*#__PURE__*/function (_CdkStepHeader) {\n  _inherits(MatStepHeader, _CdkStepHeader);\n\n  var _super2 = _createSuper(MatStepHeader);\n\n  /**\n   * @param {?} _intl\n   * @param {?} _focusMonitor\n   * @param {?} _elementRef\n   * @param {?} changeDetectorRef\n   */\n  function MatStepHeader(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n    var _this;\n\n    _classCallCheck(this, MatStepHeader);\n\n    _this = _super2.call(this, _elementRef);\n    _this._intl = _intl;\n    _this._focusMonitor = _focusMonitor;\n\n    _focusMonitor.monitor(_elementRef, true);\n\n    _this._intlSubscription = _intl.changes.subscribe(\n    /**\n    * @return {?}\n    */\n    function () {\n      return changeDetectorRef.markForCheck();\n    });\n    return _this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatStepHeader, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._intlSubscription.unsubscribe();\n\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_stringLabel\",\n    value: function _stringLabel() {\n      return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_templateLabel\",\n    value: function _templateLabel() {\n      return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getIconContext\",\n    value: function _getIconContext() {\n      return {\n        index: this.index,\n        active: this.active,\n        optional: this.optional\n      };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getDefaultTextForState\",\n    value: function _getDefaultTextForState(state) {\n      if (state == 'number') {\n        return \"\".concat(this.index + 1);\n      }\n\n      if (state == 'edit') {\n        return 'create';\n      }\n\n      if (state == 'error') {\n        return 'warning';\n      }\n\n      return state;\n    }\n  }]);\n\n  return MatStepHeader;\n}(CdkStepHeader);\n\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) {\n  return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatStepHeader,\n  selectors: [[\"mat-step-header\"]],\n  hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"],\n  inputs: {\n    state: \"state\",\n    label: \"label\",\n    errorMessage: \"errorMessage\",\n    iconOverrides: \"iconOverrides\",\n    index: \"index\",\n    selected: \"selected\",\n    active: \"active\",\n    optional: \"optional\",\n    disableRipple: \"disableRipple\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]],\n  template: function MatStepHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\");\n      ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n      ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n      ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n      ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n      ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n      ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    }\n  },\n  directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon],\n  styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatStepHeader.ctorParameters = function () {\n  return [{\n    type: MatStepperIntl\n  }, {\n    type: FocusMonitor\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatStepHeader.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  errorMessage: [{\n    type: Input\n  }],\n  iconOverrides: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  active: [{\n    type: Input\n  }],\n  optional: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-step-header',\n      template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n      host: {\n        'class': 'mat-step-header mat-focus-indicator',\n        'role': 'tab'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatStepperIntl\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    iconOverrides: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  MatStepHeader.prototype._intlSubscription;\n  /**\n   * State of the given step.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.state;\n  /**\n   * Label of the given step.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.label;\n  /**\n   * Error message to display when there's an error.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.errorMessage;\n  /**\n   * Overrides for the header icons, passed in via the stepper.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.iconOverrides;\n  /**\n   * Index of the given step.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.index;\n  /**\n   * Whether the given step is selected.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.selected;\n  /**\n   * Whether the given step label is active.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.active;\n  /**\n   * Whether the given step is optional.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.optional;\n  /**\n   * Whether the ripple should be disabled.\n   * @type {?}\n   */\n\n  MatStepHeader.prototype.disableRipple;\n  /** @type {?} */\n\n  MatStepHeader.prototype._intl;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatStepHeader.prototype._focusMonitor;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\n\n\nvar matStepperAnimations = {\n  /**\n   * Animation that transitions the step along the X axis in a horizontal stepper.\n   */\n  horizontalStepTransition: trigger('stepTransition', [state('previous', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    visibility: 'hidden'\n  })), state('current', style({\n    transform: 'none',\n    visibility: 'visible'\n  })), state('next', style({\n    transform: 'translate3d(100%, 0, 0)',\n    visibility: 'hidden'\n  })), transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))]),\n\n  /**\n   * Animation that transitions the step along the Y axis in a vertical stepper.\n   */\n  verticalStepTransition: trigger('stepTransition', [state('previous', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('next', style({\n    height: '0px',\n    visibility: 'hidden'\n  })), state('current', style({\n    height: '*',\n    visibility: 'visible'\n  })), transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))])\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\n\nfunction MatStepperIconContext() {}\n\nif (false) {\n  /**\n   * Index of the step.\n   * @type {?}\n   */\n  MatStepperIconContext.prototype.index;\n  /**\n   * Whether the step is currently active.\n   * @type {?}\n   */\n\n  MatStepperIconContext.prototype.active;\n  /**\n   * Whether the step is optional.\n   * @type {?}\n   */\n\n  MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\n\n\nvar MatStepperIcon =\n/**\n * @param {?} templateRef\n */\nfunction MatStepperIcon(templateRef) {\n  _classCallCheck(this, MatStepperIcon);\n\n  this.templateRef = templateRef;\n};\n\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) {\n  return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatStepperIcon,\n  selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]],\n  inputs: {\n    name: [\"matStepperIcon\", \"name\"]\n  }\n});\n/** @nocollapse */\n\nMatStepperIcon.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nMatStepperIcon.propDecorators = {\n  name: [{\n    type: Input,\n    args: ['matStepperIcon']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matStepperIcon]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, {\n    name: [{\n      type: Input,\n      args: ['matStepperIcon']\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Name of the icon to be overridden.\n   * @type {?}\n   */\n  MatStepperIcon.prototype.name;\n  /** @type {?} */\n\n  MatStepperIcon.prototype.templateRef;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatStep = /*#__PURE__*/function (_CdkStep) {\n  _inherits(MatStep, _CdkStep);\n\n  var _super3 = _createSuper(MatStep);\n\n  /**\n   * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n   * @param {?} stepper\n   * @param {?} _errorStateMatcher\n   * @param {?=} stepperOptions\n   */\n  function MatStep(stepper, _errorStateMatcher, stepperOptions) {\n    var _this2;\n\n    _classCallCheck(this, MatStep);\n\n    _this2 = _super3.call(this, stepper, stepperOptions);\n    _this2._errorStateMatcher = _errorStateMatcher;\n    return _this2;\n  }\n  /**\n   * Custom error state matcher that additionally checks for validity of interacted form.\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n\n\n  _createClass(MatStep, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      /** @type {?} */\n      var originalErrorState = this._errorStateMatcher.isErrorState(control, form); // Custom error state checks for the validity of form that is not submitted or touched\n      // since user can trigger a form change by calling for another step without directly\n      // interacting with the current form.\n\n      /** @type {?} */\n\n\n      var customErrorState = !!(control && control.invalid && this.interacted);\n      return originalErrorState || customErrorState;\n    }\n  }]);\n\n  return MatStep;\n}(CdkStep);\n\nMatStep.ɵfac = function MatStep_Factory(t) {\n  return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(\n  /**\n  * @return {?}\n  */\n  function () {\n    return MatStepper;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8));\n};\n\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatStep,\n  selectors: [[\"mat-step\"]],\n  contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    }\n  },\n  exportAs: [\"matStep\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ErrorStateMatcher,\n    useExisting: MatStep\n  }, {\n    provide: CdkStep,\n    useExisting: MatStep\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatStep_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatStep.ctorParameters = function () {\n  return [{\n    type: MatStepper,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(\n      /**\n      * @return {?}\n      */\n      function () {\n        return MatStepper;\n      })]\n    }]\n  }, {\n    type: ErrorStateMatcher,\n    decorators: [{\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [STEPPER_GLOBAL_OPTIONS]\n    }]\n  }];\n};\n\nMatStep.propDecorators = {\n  stepLabel: [{\n    type: ContentChild,\n    args: [MatStepLabel]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStep, [{\n    type: Component,\n    args: [{\n      selector: 'mat-step',\n      template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n      providers: [{\n        provide: ErrorStateMatcher,\n        useExisting: MatStep\n      }, {\n        provide: CdkStep,\n        useExisting: MatStep\n      }],\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matStep',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatStepper,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(\n        /**\n         * @return {?}\n         */\n        function () {\n          return MatStepper;\n        })]\n      }]\n    }, {\n      type: ɵngcc2.ErrorStateMatcher,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [STEPPER_GLOBAL_OPTIONS]\n      }]\n    }];\n  }, {\n    stepLabel: [{\n      type: ContentChild,\n      args: [MatStepLabel]\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Content for step label given by `<ng-template matStepLabel>`.\n   * @type {?}\n   */\n  MatStep.prototype.stepLabel;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatStep.prototype._errorStateMatcher;\n}\n\nvar MatStepper = /*#__PURE__*/function (_CdkStepper) {\n  _inherits(MatStepper, _CdkStepper);\n\n  var _super4 = _createSuper(MatStepper);\n\n  function MatStepper() {\n    var _this3;\n\n    _classCallCheck(this, MatStepper);\n\n    _this3 = _super4.apply(this, arguments);\n    /**\n     * Event emitted when the current step is done transitioning in.\n     */\n\n    _this3.animationDone = new EventEmitter();\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     */\n\n    _this3._iconOverrides = {};\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     */\n\n    _this3._animationDone = new Subject();\n    return _this3;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatStepper, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this4 = this;\n\n      this._icons.forEach(\n      /**\n      * @param {?} __0\n      * @return {?}\n      */\n      function (_ref) {\n        var name = _ref.name,\n            templateRef = _ref.templateRef;\n        return _this4._iconOverrides[name] = templateRef;\n      }); // Mark the component for change detection whenever the content children query changes\n\n\n      this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this4._stateChanged();\n      });\n\n      this._animationDone.pipe( // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged(\n      /**\n      * @param {?} x\n      * @param {?} y\n      * @return {?}\n      */\n      function (x, y) {\n        return x.fromState === y.fromState && x.toState === y.toState;\n      }), takeUntil(this._destroyed)).subscribe(\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      function (event) {\n        if (\n        /** @type {?} */\n        event.toState === 'current') {\n          _this4.animationDone.emit();\n        }\n      });\n    }\n  }]);\n\n  return MatStepper;\n}(CdkStepper);\n\nMatStepper.ɵfac = function MatStepper_Factory(t) {\n  return ɵMatStepper_BaseFactory(t || MatStepper);\n};\n\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatStepper,\n  selectors: [[\"\", \"matStepper\", \"\"]],\n  contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    }\n  },\n  viewQuery: function MatStepper_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  outputs: {\n    animationDone: \"animationDone\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkStepper,\n    useExisting: MatStepper\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatStepper.propDecorators = {\n  _stepHeader: [{\n    type: ViewChildren,\n    args: [MatStepHeader]\n  }],\n  _steps: [{\n    type: ContentChildren,\n    args: [MatStep, {\n      descendants: true\n    }]\n  }],\n  _icons: [{\n    type: ContentChildren,\n    args: [MatStepperIcon, {\n      descendants: true\n    }]\n  }],\n  animationDone: [{\n    type: Output\n  }],\n  disableRipple: [{\n    type: Input\n  }]\n};\nvar ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[matStepper]',\n      providers: [{\n        provide: CdkStepper,\n        useExisting: MatStepper\n      }]\n    }]\n  }], null, {\n    animationDone: [{\n      type: Output\n    }],\n    _stepHeader: [{\n      type: ViewChildren,\n      args: [MatStepHeader]\n    }],\n    _steps: [{\n      type: ContentChildren,\n      args: [MatStep, {\n        descendants: true\n      }]\n    }],\n    _icons: [{\n      type: ContentChildren,\n      args: [MatStepperIcon, {\n        descendants: true\n      }]\n    }],\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatStepper.ngAcceptInputType_editable;\n  /** @type {?} */\n\n  MatStepper.ngAcceptInputType_optional;\n  /** @type {?} */\n\n  MatStepper.ngAcceptInputType_completed;\n  /** @type {?} */\n\n  MatStepper.ngAcceptInputType_hasError;\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @type {?}\n   */\n\n  MatStepper.prototype._stepHeader;\n  /**\n   * Steps that the stepper holds.\n   * @type {?}\n   */\n\n  MatStepper.prototype._steps;\n  /**\n   * Custom icon overrides passed in by the consumer.\n   * @type {?}\n   */\n\n  MatStepper.prototype._icons;\n  /**\n   * Event emitted when the current step is done transitioning in.\n   * @type {?}\n   */\n\n  MatStepper.prototype.animationDone;\n  /**\n   * Whether ripples should be disabled for the step headers.\n   * @type {?}\n   */\n\n  MatStepper.prototype.disableRipple;\n  /**\n   * Consumer-specified template-refs to be used to override the header icons.\n   * @type {?}\n   */\n\n  MatStepper.prototype._iconOverrides;\n  /**\n   * Stream of animation `done` events when the body expands/collapses.\n   * @type {?}\n   */\n\n  MatStepper.prototype._animationDone;\n}\n\nvar MatHorizontalStepper = /*#__PURE__*/function (_MatStepper) {\n  _inherits(MatHorizontalStepper, _MatStepper);\n\n  var _super5 = _createSuper(MatHorizontalStepper);\n\n  function MatHorizontalStepper() {\n    var _this5;\n\n    _classCallCheck(this, MatHorizontalStepper);\n\n    _this5 = _super5.apply(this, arguments);\n    /**\n     * Whether the label should display in bottom or end position.\n     */\n\n    _this5.labelPosition = 'end';\n    return _this5;\n  }\n\n  return MatHorizontalStepper;\n}(MatStepper);\n\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) {\n  return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper);\n};\n\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatHorizontalStepper,\n  selectors: [[\"mat-horizontal-stepper\"]],\n  hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"],\n  hostVars: 4,\n  hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    }\n  },\n  inputs: {\n    selectedIndex: \"selectedIndex\",\n    labelPosition: \"labelPosition\"\n  },\n  exportAs: [\"matHorizontalStepper\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MatStepper,\n    useExisting: MatHorizontalStepper\n  }, {\n    provide: CdkStepper,\n    useExisting: MatHorizontalStepper\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]],\n  template: function MatHorizontalStepper_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    }\n  },\n  directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet],\n  styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matStepperAnimations.horizontalStepTransition]\n  },\n  changeDetection: 0\n});\nMatHorizontalStepper.propDecorators = {\n  labelPosition: [{\n    type: Input\n  }]\n};\nvar ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n    type: Component,\n    args: [{\n      selector: 'mat-horizontal-stepper',\n      exportAs: 'matHorizontalStepper',\n      template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n      inputs: ['selectedIndex'],\n      host: {\n        'class': 'mat-stepper-horizontal',\n        '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n        '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n        'aria-orientation': 'horizontal',\n        'role': 'tablist'\n      },\n      animations: [matStepperAnimations.horizontalStepTransition],\n      providers: [{\n        provide: MatStepper,\n        useExisting: MatHorizontalStepper\n      }, {\n        provide: CdkStepper,\n        useExisting: MatHorizontalStepper\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n    }]\n  }], null, {\n    labelPosition: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatHorizontalStepper.ngAcceptInputType_editable;\n  /** @type {?} */\n\n  MatHorizontalStepper.ngAcceptInputType_optional;\n  /** @type {?} */\n\n  MatHorizontalStepper.ngAcceptInputType_completed;\n  /** @type {?} */\n\n  MatHorizontalStepper.ngAcceptInputType_hasError;\n  /**\n   * Whether the label should display in bottom or end position.\n   * @type {?}\n   */\n\n  MatHorizontalStepper.prototype.labelPosition;\n}\n\nvar MatVerticalStepper = /*#__PURE__*/function (_MatStepper2) {\n  _inherits(MatVerticalStepper, _MatStepper2);\n\n  var _super6 = _createSuper(MatVerticalStepper);\n\n  /**\n   * @param {?} dir\n   * @param {?} changeDetectorRef\n   * @param {?=} elementRef\n   * @param {?=} _document\n   */\n  function MatVerticalStepper(dir, changeDetectorRef, // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n  elementRef, _document) {\n    var _this6;\n\n    _classCallCheck(this, MatVerticalStepper);\n\n    _this6 = _super6.call(this, dir, changeDetectorRef, elementRef, _document);\n    _this6._orientation = 'vertical';\n    return _this6;\n  }\n\n  return MatVerticalStepper;\n}(MatStepper);\n\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) {\n  return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatVerticalStepper,\n  selectors: [[\"mat-vertical-stepper\"]],\n  hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"],\n  inputs: {\n    selectedIndex: \"selectedIndex\"\n  },\n  exportAs: [\"matVerticalStepper\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MatStepper,\n    useExisting: MatVerticalStepper\n  }, {\n    provide: CdkStepper,\n    useExisting: MatVerticalStepper\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]],\n  template: function MatVerticalStepper_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    }\n  },\n  directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet],\n  styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matStepperAnimations.verticalStepTransition]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatVerticalStepper.ctorParameters = function () {\n  return [{\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n    type: Component,\n    args: [{\n      selector: 'mat-vertical-stepper',\n      exportAs: 'matVerticalStepper',\n      template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n      inputs: ['selectedIndex'],\n      host: {\n        'class': 'mat-stepper-vertical',\n        'aria-orientation': 'vertical',\n        'role': 'tablist'\n      },\n      animations: [matStepperAnimations.verticalStepTransition],\n      providers: [{\n        provide: MatStepper,\n        useExisting: MatVerticalStepper\n      }, {\n        provide: CdkStepper,\n        useExisting: MatVerticalStepper\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  MatVerticalStepper.ngAcceptInputType_editable;\n  /** @type {?} */\n\n  MatVerticalStepper.ngAcceptInputType_optional;\n  /** @type {?} */\n\n  MatVerticalStepper.ngAcceptInputType_completed;\n  /** @type {?} */\n\n  MatVerticalStepper.ngAcceptInputType_hasError;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Button that moves to the next step in a stepper workflow.\n */\n\n\nvar MatStepperNext = /*#__PURE__*/function (_CdkStepperNext) {\n  _inherits(MatStepperNext, _CdkStepperNext);\n\n  var _super7 = _createSuper(MatStepperNext);\n\n  function MatStepperNext() {\n    _classCallCheck(this, MatStepperNext);\n\n    return _super7.apply(this, arguments);\n  }\n\n  return MatStepperNext;\n}(CdkStepperNext);\n\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) {\n  return ɵMatStepperNext_BaseFactory(t || MatStepperNext);\n};\n\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatStepperNext,\n  selectors: [[\"button\", \"matStepperNext\", \"\"]],\n  hostVars: 1,\n  hostBindings: function MatStepperNext_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[matStepperNext]',\n      host: {\n        '[type]': 'type'\n      },\n      inputs: ['type']\n    }]\n  }], null, null);\n})();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\n\n\nvar MatStepperPrevious = /*#__PURE__*/function (_CdkStepperPrevious) {\n  _inherits(MatStepperPrevious, _CdkStepperPrevious);\n\n  var _super8 = _createSuper(MatStepperPrevious);\n\n  function MatStepperPrevious() {\n    _classCallCheck(this, MatStepperPrevious);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return MatStepperPrevious;\n}(CdkStepperPrevious);\n\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) {\n  return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious);\n};\n\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatStepperPrevious,\n  selectors: [[\"button\", \"matStepperPrevious\", \"\"]],\n  hostVars: 1,\n  hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[matStepperPrevious]',\n      host: {\n        '[type]': 'type'\n      },\n      inputs: ['type']\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatStepperModule = function MatStepperModule() {\n  _classCallCheck(this, MatStepperModule);\n};\n\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatStepperModule\n});\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatStepperModule_Factory(t) {\n    return new (t || MatStepperModule)();\n  },\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n  imports: [[MatCommonModule, CommonModule, PortalModule, MatButtonModule, CdkStepperModule, MatIconModule, MatRippleModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, {\n    declarations: function declarations() {\n      return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon];\n    },\n    imports: function imports() {\n      return [MatCommonModule, CommonModule, PortalModule, MatButtonModule, CdkStepperModule, MatIconModule, MatRippleModule];\n    },\n    exports: function exports() {\n      return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, PortalModule, MatButtonModule, CdkStepperModule, MatIconModule, MatRippleModule],\n      exports: [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon],\n      declarations: [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon],\n      providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };","map":{"version":3,"sources":["../../../../../material/stepper/step-label.ts","../../../../../material/stepper/stepper-intl.ts","../../../../../material/stepper/step-header.ts","../../../../../material/stepper/stepper-animations.ts","../../../../../material/stepper/stepper-icon.ts","../../../../../material/stepper/stepper.ts","../../../../../material/stepper/stepper-button.ts","../../../../../material/stepper/stepper-module.ts","../../../../../material/stepper/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header mat-focus-indicator',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus() {\n    this._focusMonitor.focusVia(this._elementRef, 'program');\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [\n    {provide: ErrorStateMatcher, useExisting: MatStep},\n    {provide: CdkStep, useExisting: MatStep},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep, {descendants: true}) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon, {descendants: true}) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._stateChanged();\n    });\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}