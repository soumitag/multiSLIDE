{"ast":null,"code":"import _assertThisInitialized from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _get from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nvar _c2 = function _c2(a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nvar _c3 = [\"tabBodyWrapper\"];\nvar _c4 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var tab_r4 = ctx.$implicit;\n      var i_r5 = ctx.index;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r11._handleClick(tab_r4, _r0, i_r5);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r4 = ctx.$implicit;\n    var i_r5 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15._removeTabBodyWrapperHeight();\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17._setTabBodyWrapperHeight($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r13 = ctx.$implicit;\n    var i_r14 = ctx.index;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n  }\n}\n\nvar _c5 = [\"tabListContainer\"];\nvar _c6 = [\"tabList\"];\nvar _c7 = [\"nextPaginator\"];\nvar _c8 = [\"previousPaginator\"];\nvar _c9 = [\"mat-tab-nav-bar\", \"\"];\n\nfunction _MatInkBarPositioner() {}\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\n\n\nvar _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  /** @type {?} */\n  var method =\n  /**\n  * @param {?} element\n  * @return {?}\n  */\n  function method(element) {\n    return {\n      left: element ? (element.offsetLeft || 0) + 'px' : '0',\n      width: element ? (element.offsetWidth || 0) + 'px' : '0'\n    };\n  };\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\n\n\nvar MatInkBar = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?} _inkBarPositioner\n   * @param {?=} _animationMode\n   */\n  function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    _classCallCheck(this, MatInkBar);\n\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  _createClass(MatInkBar, [{\n    key: \"alignToElement\",\n    value: function alignToElement(element) {\n      var _this = this;\n\n      this.show();\n\n      if (typeof requestAnimationFrame !== 'undefined') {\n        this._ngZone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          requestAnimationFrame(\n          /**\n          * @return {?}\n          */\n          function () {\n            return _this._setStyles(element);\n          });\n        });\n      } else {\n        this._setStyles(element);\n      }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setStyles\",\n    value: function _setStyles(element) {\n      /** @type {?} */\n      var positions = this._inkBarPositioner(element);\n      /** @type {?} */\n\n\n      var inkBar = this._elementRef.nativeElement;\n      inkBar.style.left = positions.left;\n      inkBar.style.width = positions.width;\n    }\n  }]);\n\n  return MatInkBar;\n}();\n\nMatInkBar.ɵfac = function MatInkBar_Factory(t) {\n  return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatInkBar,\n  selectors: [[\"mat-ink-bar\"]],\n  hostAttrs: [1, \"mat-ink-bar\"],\n  hostVars: 2,\n  hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  }\n});\n/** @nocollapse */\n\nMatInkBar.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [_MAT_INK_BAR_POSITIONER]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-ink-bar',\n      host: {\n        'class': 'mat-ink-bar',\n        '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_MAT_INK_BAR_POSITIONER]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  MatInkBar.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatInkBar.prototype._ngZone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatInkBar.prototype._inkBarPositioner;\n  /** @type {?} */\n\n  MatInkBar.prototype._animationMode;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\n\n\nvar MatTabContent =\n/**\n * @param {?} template\n */\nfunction MatTabContent(template) {\n  _classCallCheck(this, MatTabContent);\n\n  this.template = template;\n};\n\nMatTabContent.ɵfac = function MatTabContent_Factory(t) {\n  return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatTabContent,\n  selectors: [[\"\", \"matTabContent\", \"\"]]\n});\n/** @nocollapse */\n\nMatTabContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTabContent.prototype.template;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Used to flag tab labels for use with the portal directive\n */\n\n\nvar MatTabLabel = /*#__PURE__*/function (_CdkPortal) {\n  _inherits(MatTabLabel, _CdkPortal);\n\n  var _super = _createSuper(MatTabLabel);\n\n  function MatTabLabel() {\n    _classCallCheck(this, MatTabLabel);\n\n    return _super.apply(this, arguments);\n  }\n\n  return MatTabLabel;\n}(CdkPortal);\n\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) {\n  return ɵMatTabLabel_BaseFactory(t || MatTabLabel);\n};\n\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatTabLabel,\n  selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n\n/**\n * \\@docs-private\n */\n\n\nvar MatTabBase = function MatTabBase() {\n  _classCallCheck(this, MatTabBase);\n};\n/** @type {?} */\n\n\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\n\n\nvar MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\n\nvar MatTab = /*#__PURE__*/function (_MatTabMixinBase2) {\n  _inherits(MatTab, _MatTabMixinBase2);\n\n  var _super2 = _createSuper(MatTab);\n\n  /**\n   * @param {?} _viewContainerRef\n   * @param {?=} _closestTabGroup\n   */\n  function MatTab(_viewContainerRef, _closestTabGroup) {\n    var _this2;\n\n    _classCallCheck(this, MatTab);\n\n    _this2 = _super2.call(this);\n    _this2._viewContainerRef = _viewContainerRef;\n    _this2._closestTabGroup = _closestTabGroup;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     */\n\n    _this2.textLabel = '';\n    /**\n     * Portal that will be the hosted content of the tab\n     */\n\n    _this2._contentPortal = null;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     */\n\n    _this2._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n\n    _this2.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n\n    _this2.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n\n    _this2.isActive = false;\n    return _this2;\n  }\n  /**\n   * Content for the tab label given by `<ng-template mat-tab-label>`.\n   * @return {?}\n   */\n\n\n  _createClass(MatTab, [{\n    key: \"ngOnChanges\",\n\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    value: function ngOnChanges(changes) {\n      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n        this._stateChanges.next();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n  }, {\n    key: \"templateLabel\",\n    get: function get() {\n      return this._templateLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      // Only update the templateLabel via query if there is actually\n      // a MatTabLabel found. This works around an issue where a user may have\n      // manually set `templateLabel` during creation mode, which would then get clobbered\n      // by `undefined` when this query resolves.\n      if (value) {\n        this._templateLabel = value;\n      }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this._contentPortal;\n    }\n  }]);\n\n  return MatTab;\n}(_MatTabMixinBase);\n\nMatTab.ɵfac = function MatTab_Factory(t) {\n  return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n};\n\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatTab,\n  selectors: [[\"mat-tab\"]],\n  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    }\n  },\n  viewQuery: function MatTab_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    textLabel: [\"label\", \"textLabel\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"]\n  },\n  exportAs: [\"matTab\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTab_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nMatTab.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_TAB_GROUP]\n    }]\n  }];\n};\n\nMatTab.propDecorators = {\n  templateLabel: [{\n    type: ContentChild,\n    args: [MatTabLabel]\n  }],\n  _explicitContent: [{\n    type: ContentChild,\n    args: [MatTabContent, {\n      read: TemplateRef,\n      static: true\n    }]\n  }],\n  _implicitContent: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }],\n  textLabel: [{\n    type: Input,\n    args: ['label']\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n      inputs: ['disabled'],\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_TAB_GROUP]\n      }]\n    }];\n  }, {\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    templateLabel: [{\n      type: ContentChild,\n      args: [MatTabLabel]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MatTabContent, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTab.ngAcceptInputType_disabled;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatTab.prototype._templateLabel;\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   * @type {?}\n   */\n\n  MatTab.prototype._explicitContent;\n  /**\n   * Template inside the MatTab view that contains an `<ng-content>`.\n   * @type {?}\n   */\n\n  MatTab.prototype._implicitContent;\n  /**\n   * Plain text label for the tab, used when there is no template label.\n   * @type {?}\n   */\n\n  MatTab.prototype.textLabel;\n  /**\n   * Aria label for the tab.\n   * @type {?}\n   */\n\n  MatTab.prototype.ariaLabel;\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   * @type {?}\n   */\n\n  MatTab.prototype.ariaLabelledby;\n  /**\n   * Portal that will be the hosted content of the tab\n   * @type {?}\n   * @private\n   */\n\n  MatTab.prototype._contentPortal;\n  /**\n   * Emits whenever the internal state of the tab changes.\n   * @type {?}\n   */\n\n  MatTab.prototype._stateChanges;\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   * @type {?}\n   */\n\n  MatTab.prototype.position;\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   * @type {?}\n   */\n\n  MatTab.prototype.origin;\n  /**\n   * Whether the tab is currently active.\n   * @type {?}\n   */\n\n  MatTab.prototype.isActive;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatTab.prototype._viewContainerRef;\n  /**\n   * @deprecated `_closestTabGroup` parameter to become required.\n   * \\@breaking-change 10.0.0\n   * @type {?}\n   */\n\n  MatTab.prototype._closestTabGroup;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\n\n\nvar matTabsAnimations = {\n  /**\n   * Animation translates a tab along the X axis.\n   */\n  translateTab: trigger('translateTab', [// Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })), // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\n\nvar MatTabBodyPortal = /*#__PURE__*/function (_CdkPortalOutlet) {\n  _inherits(MatTabBodyPortal, _CdkPortalOutlet);\n\n  var _super3 = _createSuper(MatTabBodyPortal);\n\n  /**\n   * @param {?} componentFactoryResolver\n   * @param {?} viewContainerRef\n   * @param {?} _host\n   * @param {?=} _document\n   */\n  function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host,\n  /**\n   * @deprecated `_document` parameter to be made required.\n   * @breaking-change 9.0.0\n   */\n  _document) {\n    var _this3;\n\n    _classCallCheck(this, MatTabBodyPortal);\n\n    _this3 = _super3.call(this, componentFactoryResolver, viewContainerRef, _document);\n    _this3._host = _host;\n    /**\n     * Subscription to events for when the tab body begins centering.\n     */\n\n    _this3._centeringSub = Subscription.EMPTY;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     */\n\n    _this3._leavingSub = Subscription.EMPTY;\n    return _this3;\n  }\n  /**\n   * Set initial visibility or set up subscription for changing visibility.\n   * @return {?}\n   */\n\n\n  _createClass(MatTabBodyPortal, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this4 = this;\n\n      _get(_getPrototypeOf(MatTabBodyPortal.prototype), \"ngOnInit\", this).call(this);\n\n      this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(\n      /**\n      * @param {?} isCentering\n      * @return {?}\n      */\n      function (isCentering) {\n        if (isCentering && !_this4.hasAttached()) {\n          _this4.attach(_this4._host._content);\n        }\n      });\n      this._leavingSub = this._host._afterLeavingCenter.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this4.detach();\n      });\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatTabBodyPortal.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._centeringSub.unsubscribe();\n\n      this._leavingSub.unsubscribe();\n    }\n  }]);\n\n  return MatTabBodyPortal;\n}(CdkPortalOutlet);\n\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n  return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(\n  /**\n  * @return {?}\n  */\n  function () {\n    return MatTabBody;\n  })), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatTabBodyPortal,\n  selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatTabBodyPortal.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: MatTabBody,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(\n      /**\n      * @return {?}\n      */\n      function () {\n        return MatTabBody;\n      })]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: MatTabBody,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(\n        /**\n         * @return {?}\n         */\n        function () {\n          return MatTabBody;\n        })]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * Subscription to events for when the tab body begins centering.\n   * @type {?}\n   * @private\n   */\n  MatTabBodyPortal.prototype._centeringSub;\n  /**\n   * Subscription to events for when the tab body finishes leaving from center position.\n   * @type {?}\n   * @private\n   */\n\n  MatTabBodyPortal.prototype._leavingSub;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\n\n\nvar _MatTabBodyBase = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _dir\n   * @param {?} changeDetectorRef\n   */\n  function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {\n    var _this5 = this;\n\n    _classCallCheck(this, _MatTabBodyBase);\n\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /**\n     * Subscription to the directionality change observable.\n     */\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /**\n     * Emits when an animation on the tab is complete.\n     */\n\n    this._translateTabComplete = new Subject();\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     */\n\n    this._onCentering = new EventEmitter();\n    /**\n     * Event emitted before the centering of the tab begins.\n     */\n\n    this._beforeCentering = new EventEmitter();\n    /**\n     * Event emitted before the centering of the tab begins.\n     */\n\n    this._afterLeavingCenter = new EventEmitter();\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     */\n\n    this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n    /**\n     * Duration for the tab's animation.\n     */\n\n    this.animationDuration = '500ms';\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(\n      /**\n      * @param {?} dir\n      * @return {?}\n      */\n      function (dir) {\n        _this5._computePositionAnimationState(dir);\n\n        changeDetectorRef.markForCheck();\n      });\n    } // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n    this._translateTabComplete.pipe(distinctUntilChanged(\n    /**\n    * @param {?} x\n    * @param {?} y\n    * @return {?}\n    */\n    function (x, y) {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    function (event) {\n      // If the transition to the center is complete, emit an event.\n      if (_this5._isCenterPosition(event.toState) && _this5._isCenterPosition(_this5._position)) {\n        _this5._onCentered.emit();\n      }\n\n      if (_this5._isCenterPosition(event.fromState) && !_this5._isCenterPosition(_this5._position)) {\n        _this5._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /**\n   * The shifted index position of the tab body, where zero represents the active center tab.\n   * @param {?} position\n   * @return {?}\n   */\n\n\n  _createClass(_MatTabBodyBase, [{\n    key: \"ngOnInit\",\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    value: function ngOnInit() {\n      if (this._position == 'center' && this.origin != null) {\n        this._position = this._computePositionFromOrigin(this.origin);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n\n      this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onTranslateTabStarted\",\n    value: function _onTranslateTabStarted(event) {\n      /** @type {?} */\n      var isCentering = this._isCenterPosition(event.toState);\n\n      this._beforeCentering.emit(isCentering);\n\n      if (isCentering) {\n        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n      }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getLayoutDirection\",\n    value: function _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isCenterPosition\",\n    value: function _isCenterPosition(position) {\n      return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n\n  }, {\n    key: \"_computePositionAnimationState\",\n    value: function _computePositionAnimationState() {\n      var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._getLayoutDirection();\n\n      if (this._positionIndex < 0) {\n        this._position = dir == 'ltr' ? 'left' : 'right';\n      } else if (this._positionIndex > 0) {\n        this._position = dir == 'ltr' ? 'right' : 'left';\n      } else {\n        this._position = 'center';\n      }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n\n  }, {\n    key: \"_computePositionFromOrigin\",\n    value: function _computePositionFromOrigin(origin) {\n      /** @type {?} */\n      var dir = this._getLayoutDirection();\n\n      if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n        return 'left-origin-center';\n      }\n\n      return 'right-origin-center';\n    }\n  }, {\n    key: \"position\",\n    set: function set(position) {\n      this._positionIndex = position;\n\n      this._computePositionAnimationState();\n    }\n  }]);\n\n  return _MatTabBodyBase;\n}();\n\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n  return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatTabBodyBase,\n  inputs: {\n    animationDuration: \"animationDuration\",\n    position: \"position\",\n    _content: [\"content\", \"_content\"],\n    origin: \"origin\"\n  },\n  outputs: {\n    _onCentering: \"_onCentering\",\n    _beforeCentering: \"_beforeCentering\",\n    _afterLeavingCenter: \"_afterLeavingCenter\",\n    _onCentered: \"_onCentered\"\n  }\n});\n/** @nocollapse */\n\n_MatTabBodyBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n_MatTabBodyBase.propDecorators = {\n  _onCentering: [{\n    type: Output\n  }],\n  _beforeCentering: [{\n    type: Output\n  }],\n  _afterLeavingCenter: [{\n    type: Output\n  }],\n  _onCentered: [{\n    type: Output\n  }],\n  _content: [{\n    type: Input,\n    args: ['content']\n  }],\n  origin: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n   * @type {?}\n   * @private\n   */\n  _MatTabBodyBase.prototype._positionIndex;\n  /**\n   * Subscription to the directionality change observable.\n   * @type {?}\n   * @private\n   */\n\n  _MatTabBodyBase.prototype._dirChangeSubscription;\n  /**\n   * Tab body position state. Used by the animation trigger for the current state.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._position;\n  /**\n   * Emits when an animation on the tab is complete.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._translateTabComplete;\n  /**\n   * Event emitted when the tab begins to animate towards the center as the active tab.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._onCentering;\n  /**\n   * Event emitted before the centering of the tab begins.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._beforeCentering;\n  /**\n   * Event emitted before the centering of the tab begins.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._afterLeavingCenter;\n  /**\n   * Event emitted when the tab completes its animation towards the center.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._onCentered;\n  /**\n   * The portal host inside of this container into which the tab body content will be loaded.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._portalHost;\n  /**\n   * The tab body content to display.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype._content;\n  /**\n   * Position that will be used when the tab is immediately becoming visible after creation.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype.origin;\n  /**\n   * Duration for the tab's animation.\n   * @type {?}\n   */\n\n  _MatTabBodyBase.prototype.animationDuration;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabBodyBase.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\n\n\nvar MatTabBody = /*#__PURE__*/function (_MatTabBodyBase2) {\n  _inherits(MatTabBody, _MatTabBodyBase2);\n\n  var _super4 = _createSuper(MatTabBody);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} dir\n   * @param {?} changeDetectorRef\n   */\n  function MatTabBody(elementRef, dir, changeDetectorRef) {\n    _classCallCheck(this, MatTabBody);\n\n    return _super4.call(this, elementRef, dir, changeDetectorRef);\n  }\n\n  return MatTabBody;\n}(_MatTabBodyBase);\n\nMatTabBody.ɵfac = function MatTabBody_Factory(t) {\n  return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatTabBody,\n  selectors: [[\"mat-tab-body\"]],\n  viewQuery: function MatTabBody_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-body\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n  template: function MatTabBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n        return ctx._onTranslateTabStarted($event);\n      })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n        return ctx._translateTabComplete.next($event);\n      });\n      ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    }\n  },\n  directives: [MatTabBodyPortal],\n  styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matTabsAnimations.translateTab]\n  }\n});\n/** @nocollapse */\n\nMatTabBody.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatTabBody.propDecorators = {\n  _portalHost: [{\n    type: ViewChild,\n    args: [PortalHostDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-tab-body'\n      },\n      styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    _portalHost: [{\n      type: ViewChild,\n      args: [PortalHostDirective]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTabBody.prototype._portalHost;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\n\n\nfunction MatTabsConfig() {}\n\nif (false) {\n  /**\n   * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n   * @type {?|undefined}\n   */\n  MatTabsConfig.prototype.animationDuration;\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   * @type {?|undefined}\n   */\n\n  MatTabsConfig.prototype.disablePagination;\n  /**\n   * Whether the ink bar should fit its width to the size of the tab label content.\n   * This only applies to the MDC-based tabs.\n   * @type {?|undefined}\n   */\n\n  MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\n\n\nvar MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\n\nvar nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\n\nvar MatTabChangeEvent = function MatTabChangeEvent() {\n  _classCallCheck(this, MatTabChangeEvent);\n};\n\nif (false) {\n  /**\n   * Index of the currently-selected tab.\n   * @type {?}\n   */\n  MatTabChangeEvent.prototype.index;\n  /**\n   * Reference to the currently-selected tab.\n   * @type {?}\n   */\n\n  MatTabChangeEvent.prototype.tab;\n} // Boilerplate for applying mixins to MatTabGroup.\n\n/**\n * \\@docs-private\n */\n\n\nvar MatTabGroupMixinBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatTabGroupMixinBase(_elementRef) {\n  _classCallCheck(this, MatTabGroupMixinBase);\n\n  this._elementRef = _elementRef;\n};\n\nif (false) {\n  /** @type {?} */\n  MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\n\n\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\n\n\nfunction MatTabGroupBaseHeader() {}\n\nif (false) {\n  /** @type {?} */\n  MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n  /** @type {?} */\n\n  MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\n\n\nvar _MatTabGroupBase = /*#__PURE__*/function (_MatTabGroupMixinBase2) {\n  _inherits(_MatTabGroupBase, _MatTabGroupMixinBase2);\n\n  var _super5 = _createSuper(_MatTabGroupBase);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?=} defaultConfig\n   * @param {?=} _animationMode\n   */\n  function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    var _this6;\n\n    _classCallCheck(this, _MatTabGroupBase);\n\n    _this6 = _super5.call(this, elementRef);\n    _this6._changeDetectorRef = _changeDetectorRef;\n    _this6._animationMode = _animationMode;\n    /**\n     * All of the tabs that belong to the group.\n     */\n\n    _this6._tabs = new QueryList();\n    /**\n     * The tab index that should be selected after the content has been checked.\n     */\n\n    _this6._indexToSelect = 0;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     */\n\n    _this6._tabBodyWrapperHeight = 0;\n    /**\n     * Subscription to tabs being added/removed.\n     */\n\n    _this6._tabsSubscription = Subscription.EMPTY;\n    /**\n     * Subscription to changes in the tab labels.\n     */\n\n    _this6._tabLabelSubscription = Subscription.EMPTY;\n    _this6._dynamicHeight = false;\n    _this6._selectedIndex = null;\n    /**\n     * Position of the tab header.\n     */\n\n    _this6.headerPosition = 'above';\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     */\n\n    _this6.selectedIndexChange = new EventEmitter();\n    /**\n     * Event emitted when focus has changed within a tab group.\n     */\n\n    _this6.focusChange = new EventEmitter();\n    /**\n     * Event emitted when the body animation has completed\n     */\n\n    _this6.animationDone = new EventEmitter();\n    /**\n     * Event emitted when the tab selection has changed.\n     */\n\n    _this6.selectedTabChange = new EventEmitter(true);\n    _this6._groupId = nextId++;\n    _this6.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    _this6.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    return _this6;\n  }\n  /**\n   * Whether the tab group should grow to the size of the active tab.\n   * @return {?}\n   */\n\n\n  _createClass(_MatTabGroupBase, [{\n    key: \"ngAfterContentChecked\",\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    value: function ngAfterContentChecked() {\n      var _this7 = this;\n\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n\n      /** @type {?} */\n      var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n\n\n      if (this._selectedIndex != indexToSelect) {\n        /** @type {?} */\n        var isFirstRun = this._selectedIndex == null;\n\n        if (!isFirstRun) {\n          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n        } // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n\n\n        Promise.resolve().then(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this7._tabs.forEach(\n          /**\n          * @param {?} tab\n          * @param {?} index\n          * @return {?}\n          */\n          function (tab, index) {\n            return tab.isActive = index === indexToSelect;\n          });\n\n          if (!isFirstRun) {\n            _this7.selectedIndexChange.emit(indexToSelect);\n          }\n        });\n      } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n      this._tabs.forEach(\n      /**\n      * @param {?} tab\n      * @param {?} index\n      * @return {?}\n      */\n      function (tab, index) {\n        tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n\n        if (_this7._selectedIndex != null && tab.position == 0 && !tab.origin) {\n          tab.origin = indexToSelect - _this7._selectedIndex;\n        }\n      });\n\n      if (this._selectedIndex !== indexToSelect) {\n        this._selectedIndex = indexToSelect;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this8 = this;\n\n      this._subscribeToAllTabChanges();\n\n      this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n\n\n      this._tabsSubscription = this._tabs.changes.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var indexToSelect = _this8._clampTabIndex(_this8._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n\n\n        if (indexToSelect === _this8._selectedIndex) {\n          /** @type {?} */\n          var tabs = _this8._tabs.toArray();\n\n          for (var i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `selectedIndexChange` event.\n              _this8._indexToSelect = _this8._selectedIndex = i;\n              break;\n            }\n          }\n        }\n\n        _this8._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_subscribeToAllTabChanges\",\n    value: function _subscribeToAllTabChanges() {\n      var _this9 = this;\n\n      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n      // some that are inside of nested tab groups. We filter them out manually by checking that\n      // the closest group to the tab is the current one.\n      this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(\n      /**\n      * @param {?} tabs\n      * @return {?}\n      */\n      function (tabs) {\n        _this9._tabs.reset(tabs.filter(\n        /**\n        * @param {?} tab\n        * @return {?}\n        */\n        function (tab) {\n          // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n          // once it becomes a required parameter in MatTab.\n          return !tab._closestTabGroup || tab._closestTabGroup === _this9;\n        }));\n\n        _this9._tabs.notifyOnChanges();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._tabs.destroy();\n\n      this._tabsSubscription.unsubscribe();\n\n      this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"realignInkBar\",\n    value: function realignInkBar() {\n      if (this._tabHeader) {\n        this._tabHeader._alignInkBarToSelectedTab();\n      }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_focusChanged\",\n    value: function _focusChanged(index) {\n      this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createChangeEvent\",\n    value: function _createChangeEvent(index) {\n      /** @type {?} */\n      var event = new MatTabChangeEvent();\n      event.index = index;\n\n      if (this._tabs && this._tabs.length) {\n        event.tab = this._tabs.toArray()[index];\n      }\n\n      return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_subscribeToTabLabels\",\n    value: function _subscribeToTabLabels() {\n      var _this10 = this;\n\n      if (this._tabLabelSubscription) {\n        this._tabLabelSubscription.unsubscribe();\n      }\n\n      this._tabLabelSubscription = merge.apply(void 0, _toConsumableArray(this._tabs.map(\n      /**\n      * @param {?} tab\n      * @return {?}\n      */\n      function (tab) {\n        return tab._stateChanges;\n      }))).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this10._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_clampTabIndex\",\n    value: function _clampTabIndex(index) {\n      // Note the `|| 0`, which ensures that values like NaN can't get through\n      // and which would otherwise throw the component into an infinite loop\n      // (since Math.max(NaN, 0) === NaN).\n      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTabLabelId\",\n    value: function _getTabLabelId(i) {\n      return \"mat-tab-label-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTabContentId\",\n    value: function _getTabContentId(i) {\n      return \"mat-tab-content-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setTabBodyWrapperHeight\",\n    value: function _setTabBodyWrapperHeight(tabHeight) {\n      if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var wrapper = this._tabBodyWrapper.nativeElement;\n      wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n      // the animation to the new height can have an origin.\n\n      if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n        wrapper.style.height = tabHeight + 'px';\n      }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_removeTabBodyWrapperHeight\",\n    value: function _removeTabBodyWrapperHeight() {\n      /** @type {?} */\n      var wrapper = this._tabBodyWrapper.nativeElement;\n      this._tabBodyWrapperHeight = wrapper.clientHeight;\n      wrapper.style.height = '';\n      this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleClick\",\n    value: function _handleClick(tab, tabHeader, index) {\n      if (!tab.disabled) {\n        this.selectedIndex = tabHeader.focusIndex = index;\n      }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex(tab, idx) {\n      if (tab.disabled) {\n        return null;\n      }\n\n      return this.selectedIndex === idx ? 0 : -1;\n    }\n  }, {\n    key: \"dynamicHeight\",\n    get: function get() {\n      return this._dynamicHeight;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selectedIndex\",\n    get: function get() {\n      return this._selectedIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n\n  }, {\n    key: \"animationDuration\",\n    get: function get() {\n      return this._animationDuration;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n\n  }, {\n    key: \"backgroundColor\",\n    get: function get() {\n      return this._backgroundColor;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      /** @type {?} */\n      var nativeElement = this._elementRef.nativeElement;\n      nativeElement.classList.remove(\"mat-background-\".concat(this.backgroundColor));\n\n      if (value) {\n        nativeElement.classList.add(\"mat-background-\".concat(value));\n      }\n\n      this._backgroundColor = value;\n    }\n  }]);\n\n  return _MatTabGroupBase;\n}(_MatTabGroupMixinBase);\n\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n  return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatTabGroupBase,\n  inputs: {\n    headerPosition: \"headerPosition\",\n    animationDuration: \"animationDuration\",\n    disablePagination: \"disablePagination\",\n    dynamicHeight: \"dynamicHeight\",\n    selectedIndex: \"selectedIndex\",\n    backgroundColor: \"backgroundColor\"\n  },\n  outputs: {\n    selectedIndexChange: \"selectedIndexChange\",\n    focusChange: \"focusChange\",\n    animationDone: \"animationDone\",\n    selectedTabChange: \"selectedTabChange\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\n_MatTabGroupBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TABS_CONFIG]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\n_MatTabGroupBase.propDecorators = {\n  dynamicHeight: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  headerPosition: [{\n    type: Input\n  }],\n  animationDuration: [{\n    type: Input\n  }],\n  disablePagination: [{\n    type: Input\n  }],\n  backgroundColor: [{\n    type: Input\n  }],\n  selectedIndexChange: [{\n    type: Output\n  }],\n  focusChange: [{\n    type: Output\n  }],\n  animationDone: [{\n    type: Output\n  }],\n  selectedTabChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    headerPosition: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    disablePagination: [{\n      type: Input\n    }],\n    dynamicHeight: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n  /** @type {?} */\n\n  _MatTabGroupBase.ngAcceptInputType_animationDuration;\n  /** @type {?} */\n\n  _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n  /** @type {?} */\n\n  _MatTabGroupBase.ngAcceptInputType_disableRipple;\n  /**\n   * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n   * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype._allTabs;\n  /** @type {?} */\n\n  _MatTabGroupBase.prototype._tabBodyWrapper;\n  /** @type {?} */\n\n  _MatTabGroupBase.prototype._tabHeader;\n  /**\n   * All of the tabs that belong to the group.\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype._tabs;\n  /**\n   * The tab index that should be selected after the content has been checked.\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._indexToSelect;\n  /**\n   * Snapshot of the height of the tab body wrapper before another tab is activated.\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n  /**\n   * Subscription to tabs being added/removed.\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._tabsSubscription;\n  /**\n   * Subscription to changes in the tab labels.\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._tabLabelSubscription;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._dynamicHeight;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._selectedIndex;\n  /**\n   * Position of the tab header.\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype.headerPosition;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._animationDuration;\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype.disablePagination;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._backgroundColor;\n  /**\n   * Output to enable support for two-way binding on `[(selectedIndex)]`\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype.selectedIndexChange;\n  /**\n   * Event emitted when focus has changed within a tab group.\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype.focusChange;\n  /**\n   * Event emitted when the body animation has completed\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype.animationDone;\n  /**\n   * Event emitted when the tab selection has changed.\n   * @type {?}\n   */\n\n  _MatTabGroupBase.prototype.selectedTabChange;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabGroupBase.prototype._groupId;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  _MatTabGroupBase.prototype._changeDetectorRef;\n  /** @type {?} */\n\n  _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nvar MatTabGroup = /*#__PURE__*/function (_MatTabGroupBase2) {\n  _inherits(MatTabGroup, _MatTabGroupBase2);\n\n  var _super6 = _createSuper(MatTabGroup);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} changeDetectorRef\n   * @param {?=} defaultConfig\n   * @param {?=} animationMode\n   */\n  function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    _classCallCheck(this, MatTabGroup);\n\n    return _super6.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n\n  return MatTabGroup;\n}(_MatTabGroupBase);\n\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n  return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatTabGroup,\n  selectors: [[\"mat-tab-group\"]],\n  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    }\n  },\n  viewQuery: function MatTabGroup_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n      ɵngcc0.ɵɵviewQuery(_c4, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-group\"],\n  hostVars: 4,\n  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matTabGroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 7,\n  consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n  template: function MatTabGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n        return ctx._focusChanged($event);\n      })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n        return ctx.selectedIndex = $event;\n      });\n      ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    }\n  },\n  directives: function directives() {\n    return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody];\n  },\n  styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nMatTabGroup.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TABS_CONFIG]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatTabGroup.propDecorators = {\n  _allTabs: [{\n    type: ContentChildren,\n    args: [MatTab, {\n      descendants: true\n    }]\n  }],\n  _tabBodyWrapper: [{\n    type: ViewChild,\n    args: ['tabBodyWrapper']\n  }],\n  _tabHeader: [{\n    type: ViewChild,\n    args: ['tabHeader']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-tab-group',\n        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n      },\n      styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTabGroup.prototype._allTabs;\n  /** @type {?} */\n\n  MatTabGroup.prototype._tabBodyWrapper;\n  /** @type {?} */\n\n  MatTabGroup.prototype._tabHeader;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/**\n * \\@docs-private\n */\n\n\nvar MatTabLabelWrapperBase = function MatTabLabelWrapperBase() {\n  _classCallCheck(this, MatTabLabelWrapperBase);\n};\n/** @type {?} */\n\n\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\n\n\nvar MatTabLabelWrapper = /*#__PURE__*/function (_MatTabLabelWrapperMi) {\n  _inherits(MatTabLabelWrapper, _MatTabLabelWrapperMi);\n\n  var _super7 = _createSuper(MatTabLabelWrapper);\n\n  /**\n   * @param {?} elementRef\n   */\n  function MatTabLabelWrapper(elementRef) {\n    var _this11;\n\n    _classCallCheck(this, MatTabLabelWrapper);\n\n    _this11 = _super7.call(this);\n    _this11.elementRef = elementRef;\n    return _this11;\n  }\n  /**\n   * Sets focus on the wrapper element\n   * @return {?}\n   */\n\n\n  _createClass(MatTabLabelWrapper, [{\n    key: \"focus\",\n    value: function focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getOffsetLeft\",\n    value: function getOffsetLeft() {\n      return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getOffsetWidth\",\n    value: function getOffsetWidth() {\n      return this.elementRef.nativeElement.offsetWidth;\n    }\n  }]);\n\n  return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase);\n\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n  return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatTabLabelWrapper,\n  selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n  hostVars: 3,\n  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatTabLabelWrapper.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      inputs: ['disabled'],\n      host: {\n        '[class.mat-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTabLabelWrapper.ngAcceptInputType_disabled;\n  /** @type {?} */\n\n  MatTabLabelWrapper.prototype.elementRef;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\n\n\nvar passiveEventListenerOptions =\n/** @type {?} */\nnormalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\n\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\n\nvar HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\n\nvar HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\n\nvar MatPaginatedTabHeader = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} _viewportRuler\n   * @param {?} _dir\n   * @param {?} _ngZone\n   * @param {?=} _platform\n   * @param {?=} _animationMode\n   */\n  function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    var _this12 = this;\n\n    _classCallCheck(this, MatPaginatedTabHeader);\n\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     */\n\n    this._scrollDistance = 0;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     */\n\n    this._selectedIndexChanged = false;\n    /**\n     * Emits when the component is destroyed.\n     */\n\n    this._destroyed = new Subject();\n    /**\n     * Whether the controls for pagination should be displayed\n     */\n\n    this._showPaginationControls = false;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     */\n\n    this._disableScrollAfter = true;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     */\n\n    this._disableScrollBefore = true;\n    /**\n     * Stream that will stop the automated scrolling.\n     */\n\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /**\n     * Event emitted when the option is selected.\n     */\n\n    this.selectFocusedIndex = new EventEmitter();\n    /**\n     * Event emitted when a label is focused.\n     */\n\n    this.indexFocused = new EventEmitter(); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\n    _ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    function () {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(_this12._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this12._stopInterval();\n      });\n    });\n  }\n  /**\n   * The index of the active tab.\n   * @return {?}\n   */\n\n\n  _createClass(MatPaginatedTabHeader, [{\n    key: \"ngAfterViewInit\",\n\n    /**\n     * @return {?}\n     */\n    value: function ngAfterViewInit() {\n      var _this13 = this;\n\n      // We need to handle these events manually, because we want to bind passive event listeners.\n      fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this13._handlePaginatorPress('before');\n      });\n      fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this13._handlePaginatorPress('after');\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this14 = this;\n\n      /** @type {?} */\n      var dirChange = this._dir ? this._dir.change : of(null);\n      /** @type {?} */\n\n      var resize = this._viewportRuler.change(150);\n      /** @type {?} */\n\n\n      var realign =\n      /**\n      * @return {?}\n      */\n      function realign() {\n        _this14.updatePagination();\n\n        _this14._alignInkBarToSelectedTab();\n      };\n\n      this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withWrap();\n\n      this._keyManager.updateActiveItem(0); // Defer the first call in order to allow for slower browsers to lay out the elements.\n      // This helps in cases where the user lands directly on a page with paginated tabs.\n\n\n      typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign(); // On dir change or window resize, realign the ink bar and update the orientation of\n      // the key manager if the direction has changed.\n\n      merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        // We need to defer this to give the browser some time to recalculate the element dimensions.\n        Promise.resolve().then(realign);\n\n        _this14._keyManager.withHorizontalOrientation(_this14._getLayoutDirection());\n      }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n      // event in order to provide a public event that notifies about focus changes. Also we realign\n      // the tabs container by scrolling the new focused tab into the visible section.\n\n      this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @param {?} newFocusIndex\n      * @return {?}\n      */\n      function (newFocusIndex) {\n        _this14.indexFocused.emit(newFocusIndex);\n\n        _this14._setTabFocus(newFocusIndex);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // If the number of tab labels have changed, check if scrolling should be enabled\n      if (this._tabLabelCount != this._items.length) {\n        this.updatePagination();\n        this._tabLabelCount = this._items.length;\n\n        this._changeDetectorRef.markForCheck();\n      } // If the selected index has changed, scroll to the label and check if the scrolling controls\n      // should be disabled.\n\n\n      if (this._selectedIndexChanged) {\n        this._scrollToLabel(this._selectedIndex);\n\n        this._checkScrollingControls();\n\n        this._alignInkBarToSelectedTab();\n\n        this._selectedIndexChanged = false;\n\n        this._changeDetectorRef.markForCheck();\n      } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n      // then translate the header to reflect this.\n\n\n      if (this._scrollDistanceChanged) {\n        this._updateTabScrollPosition();\n\n        this._scrollDistanceChanged = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      // We don't handle any key bindings with a modifier key.\n      if (hasModifierKey(event)) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case HOME:\n          this._keyManager.setFirstItemActive();\n\n          event.preventDefault();\n          break;\n\n        case END:\n          this._keyManager.setLastItemActive();\n\n          event.preventDefault();\n          break;\n\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            this.selectFocusedIndex.emit(this.focusIndex);\n\n            this._itemSelected(event);\n          }\n\n          break;\n\n        default:\n          this._keyManager.onKeydown(event);\n\n      }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onContentChanges\",\n    value: function _onContentChanges() {\n      var _this15 = this;\n\n      /** @type {?} */\n      var textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n      // will fire even if the text content didn't change which is inefficient and is prone\n      // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n      if (textContent !== this._currentTextContent) {\n        this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n\n        this._ngZone.run(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this15.updatePagination();\n\n          _this15._alignInkBarToSelectedTab();\n\n          _this15._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n\n  }, {\n    key: \"updatePagination\",\n    value: function updatePagination() {\n      this._checkPaginationEnabled();\n\n      this._checkScrollingControls();\n\n      this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isValidIndex\",\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    value: function _isValidIndex(index) {\n      if (!this._items) {\n        return true;\n      }\n      /** @type {?} */\n\n\n      var tab = this._items ? this._items.toArray()[index] : null;\n      return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setTabFocus\",\n    value: function _setTabFocus(tabIndex) {\n      if (this._showPaginationControls) {\n        this._scrollToLabel(tabIndex);\n      }\n\n      if (this._items && this._items.length) {\n        this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n        // should be the full width minus the offset width.\n\n        /** @type {?} */\n\n\n        var containerEl = this._tabListContainer.nativeElement;\n        /** @type {?} */\n\n        var dir = this._getLayoutDirection();\n\n        if (dir == 'ltr') {\n          containerEl.scrollLeft = 0;\n        } else {\n          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n        }\n      }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getLayoutDirection\",\n    value: function _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateTabScrollPosition\",\n    value: function _updateTabScrollPosition() {\n      if (this.disablePagination) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var scrollDistance = this.scrollDistance;\n      /** @type {?} */\n\n      var platform = this._platform;\n      /** @type {?} */\n\n      var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n      // and ripples will exceed the boundaries of the visible tab bar.\n      // See: https://github.com/angular/components/issues/10276\n      // We round the `transform` here, because transforms with sub-pixel precision cause some\n      // browsers to blur the content of the element.\n\n      this._tabList.nativeElement.style.transform = \"translateX(\".concat(Math.round(translateX), \"px)\"); // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n      // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n      // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n\n      if (platform && (platform.TRIDENT || platform.EDGE)) {\n        this._tabListContainer.nativeElement.scrollLeft = 0;\n      }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_scrollHeader\",\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    value: function _scrollHeader(direction) {\n      /** @type {?} */\n      var viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n      /** @type {?} */\n\n      var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n      return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handlePaginatorClick\",\n    value: function _handlePaginatorClick(direction) {\n      this._stopInterval();\n\n      this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"_scrollToLabel\",\n    value: function _scrollToLabel(labelIndex) {\n      if (this.disablePagination) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n      if (!selectedLabel) {\n        return;\n      } // The view length is the visible width of the tab labels.\n\n      /** @type {?} */\n\n\n      var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      var _selectedLabel$elemen = selectedLabel.elementRef.nativeElement,\n          offsetLeft = _selectedLabel$elemen.offsetLeft,\n          offsetWidth = _selectedLabel$elemen.offsetWidth;\n      /** @type {?} */\n\n      var labelBeforePos;\n      /** @type {?} */\n\n      var labelAfterPos;\n\n      if (this._getLayoutDirection() == 'ltr') {\n        labelBeforePos = offsetLeft;\n        labelAfterPos = labelBeforePos + offsetWidth;\n      } else {\n        labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n        labelBeforePos = labelAfterPos - offsetWidth;\n      }\n      /** @type {?} */\n\n\n      var beforeVisiblePos = this.scrollDistance;\n      /** @type {?} */\n\n      var afterVisiblePos = this.scrollDistance + viewLength;\n\n      if (labelBeforePos < beforeVisiblePos) {\n        // Scroll header to move label to the before direction\n        this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n      } else if (labelAfterPos > afterVisiblePos) {\n        // Scroll header to move label to the after direction\n        this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n      }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkPaginationEnabled\",\n    value: function _checkPaginationEnabled() {\n      if (this.disablePagination) {\n        this._showPaginationControls = false;\n      } else {\n        /** @type {?} */\n        var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n          this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this._showPaginationControls) {\n          this._changeDetectorRef.markForCheck();\n        }\n\n        this._showPaginationControls = isEnabled;\n      }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkScrollingControls\",\n    value: function _checkScrollingControls() {\n      if (this.disablePagination) {\n        this._disableScrollAfter = this._disableScrollBefore = true;\n      } else {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getMaxScrollDistance\",\n    value: function _getMaxScrollDistance() {\n      /** @type {?} */\n      var lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n      /** @type {?} */\n\n      var viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      return lengthOfTabList - viewLength || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n\n  }, {\n    key: \"_alignInkBarToSelectedTab\",\n    value: function _alignInkBarToSelectedTab() {\n      /** @type {?} */\n      var selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n      /** @type {?} */\n\n      var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n      if (selectedLabelWrapper) {\n        this._inkBar.alignToElement(selectedLabelWrapper);\n      } else {\n        this._inkBar.hide();\n      }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_stopInterval\",\n    value: function _stopInterval() {\n      this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handlePaginatorPress\",\n    value: function _handlePaginatorPress(direction, mouseEvent) {\n      var _this16 = this;\n\n      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n      // null check the `button`, but we do it so we don't break tests that use fake events.\n      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n        return;\n      } // Avoid overlapping timers.\n\n\n      this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n      timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        var _this16$_scrollHeader = _this16._scrollHeader(direction),\n            maxScrollDistance = _this16$_scrollHeader.maxScrollDistance,\n            distance = _this16$_scrollHeader.distance; // Stop the timer if we've reached the start or the end.\n\n\n        if (distance === 0 || distance >= maxScrollDistance) {\n          _this16._stopInterval();\n        }\n      });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n\n  }, {\n    key: \"_scrollTo\",\n    value: function _scrollTo(position) {\n      if (this.disablePagination) {\n        return {\n          maxScrollDistance: 0,\n          distance: 0\n        };\n      }\n      /** @type {?} */\n\n\n      var maxScrollDistance = this._getMaxScrollDistance();\n\n      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n      // transformation can move the header.\n\n      this._scrollDistanceChanged = true;\n\n      this._checkScrollingControls();\n\n      return {\n        maxScrollDistance: maxScrollDistance,\n        distance: this._scrollDistance\n      };\n    }\n  }, {\n    key: \"selectedIndex\",\n    get: function get() {\n      return this._selectedIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      value = coerceNumberProperty(value);\n\n      if (this._selectedIndex != value) {\n        this._selectedIndexChanged = true;\n        this._selectedIndex = value;\n\n        if (this._keyManager) {\n          this._keyManager.updateActiveItem(value);\n        }\n      }\n    }\n  }, {\n    key: \"focusIndex\",\n    get: function get() {\n      return this._keyManager ?\n      /** @type {?} */\n      this._keyManager.activeItemIndex : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n        return;\n      }\n\n      this._keyManager.setActiveItem(value);\n    }\n  }, {\n    key: \"scrollDistance\",\n    get: function get() {\n      return this._scrollDistance;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._scrollTo(value);\n    }\n  }]);\n\n  return MatPaginatedTabHeader;\n}();\n\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n  return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatPaginatedTabHeader,\n  inputs: {\n    disablePagination: \"disablePagination\"\n  }\n});\n/** @nocollapse */\n\nMatPaginatedTabHeader.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewportRuler\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatPaginatedTabHeader.propDecorators = {\n  disablePagination: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc6.ViewportRuler\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc7.Platform\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disablePagination: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._items;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._inkBar;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._tabListContainer;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._tabList;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._nextPaginator;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._previousPaginator;\n  /**\n   * The distance in pixels that the tab labels should be translated to the left.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._scrollDistance;\n  /**\n   * Whether the header should scroll to the selected index after the view has been checked.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._selectedIndexChanged;\n  /**\n   * Emits when the component is destroyed.\n   * @type {?}\n   * @protected\n   */\n\n  MatPaginatedTabHeader.prototype._destroyed;\n  /**\n   * Whether the controls for pagination should be displayed\n   * @type {?}\n   */\n\n  MatPaginatedTabHeader.prototype._showPaginationControls;\n  /**\n   * Whether the tab list can be scrolled more towards the end of the tab label list.\n   * @type {?}\n   */\n\n  MatPaginatedTabHeader.prototype._disableScrollAfter;\n  /**\n   * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n   * @type {?}\n   */\n\n  MatPaginatedTabHeader.prototype._disableScrollBefore;\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._tabLabelCount;\n  /**\n   * Whether the scroll distance has changed and should be applied after the view is checked.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n  /**\n   * Used to manage focus between the tabs.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._keyManager;\n  /**\n   * Cached text content of the header.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._currentTextContent;\n  /**\n   * Stream that will stop the automated scrolling.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._stopScrolling;\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   * @type {?}\n   */\n\n  MatPaginatedTabHeader.prototype.disablePagination;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._selectedIndex;\n  /**\n   * Event emitted when the option is selected.\n   * @type {?}\n   */\n\n  MatPaginatedTabHeader.prototype.selectFocusedIndex;\n  /**\n   * Event emitted when a label is focused.\n   * @type {?}\n   */\n\n  MatPaginatedTabHeader.prototype.indexFocused;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  MatPaginatedTabHeader.prototype._elementRef;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  MatPaginatedTabHeader.prototype._changeDetectorRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._viewportRuler;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._dir;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._ngZone;\n  /**\n   * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n   * parameters to become required.\n   * @type {?}\n   * @private\n   */\n\n  MatPaginatedTabHeader.prototype._platform;\n  /** @type {?} */\n\n  MatPaginatedTabHeader.prototype._animationMode;\n  /**\n   * Called when the user has selected an item via the keyboard.\n   * @abstract\n   * @protected\n   * @param {?} event\n   * @return {?}\n   */\n\n  MatPaginatedTabHeader.prototype._itemSelected = function (event) {};\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\n\n\nvar _MatTabHeaderBase = /*#__PURE__*/function (_MatPaginatedTabHeade) {\n  _inherits(_MatTabHeaderBase, _MatPaginatedTabHeade);\n\n  var _super8 = _createSuper(_MatTabHeaderBase);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} animationMode\n   */\n  function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  animationMode) {\n    var _this17;\n\n    _classCallCheck(this, _MatTabHeaderBase);\n\n    _this17 = _super8.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    _this17._disableRipple = false;\n    return _this17;\n  }\n  /**\n   * Whether the ripple effect is disabled or not.\n   * @return {?}\n   */\n\n\n  _createClass(_MatTabHeaderBase, [{\n    key: \"_itemSelected\",\n\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    value: function _itemSelected(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._disableRipple;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n  }]);\n\n  return _MatTabHeaderBase;\n}(MatPaginatedTabHeader);\n\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n  return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatTabHeaderBase,\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\n_MatTabHeaderBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewportRuler\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\n_MatTabHeaderBase.propDecorators = {\n  disableRipple: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc6.ViewportRuler\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc7.Platform\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\n\n\nvar MatTabHeader = /*#__PURE__*/function (_MatTabHeaderBase2) {\n  _inherits(MatTabHeader, _MatTabHeaderBase2);\n\n  var _super9 = _createSuper(MatTabHeader);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} animationMode\n   */\n  function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  animationMode) {\n    _classCallCheck(this, MatTabHeader);\n\n    return _super9.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  return MatTabHeader;\n}(_MatTabHeaderBase);\n\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n  return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatTabHeader,\n  selectors: [[\"mat-tab-header\"]],\n  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabHeader_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n      ɵngcc0.ɵɵviewQuery(_c7, true);\n      ɵngcc0.ɵɵviewQuery(_c8, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-header\"],\n  hostVars: 4,\n  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    }\n  },\n  inputs: {\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    selectFocusedIndex: \"selectFocusedIndex\",\n    indexFocused: \"indexFocused\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 8,\n  consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      ɵngcc0.ɵɵelement(2, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n      ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵprojection(8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n        return ctx._stopInterval();\n      });\n      ɵngcc0.ɵɵelement(12, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nMatTabHeader.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewportRuler\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatTabHeader.propDecorators = {\n  _items: [{\n    type: ContentChildren,\n    args: [MatTabLabelWrapper, {\n      descendants: false\n    }]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar, {\n      static: true\n    }]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer', {\n      static: true\n    }]\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList', {\n      static: true\n    }]\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator']\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      inputs: ['selectedIndex'],\n      outputs: ['selectFocusedIndex', 'indexFocused'],\n      encapsulation: ViewEncapsulation.None,\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc6.ViewportRuler\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc7.Platform\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTabHeader.ngAcceptInputType_disableRipple;\n  /** @type {?} */\n\n  MatTabHeader.prototype._items;\n  /** @type {?} */\n\n  MatTabHeader.prototype._inkBar;\n  /** @type {?} */\n\n  MatTabHeader.prototype._tabListContainer;\n  /** @type {?} */\n\n  MatTabHeader.prototype._tabList;\n  /** @type {?} */\n\n  MatTabHeader.prototype._nextPaginator;\n  /** @type {?} */\n\n  MatTabHeader.prototype._previousPaginator;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\n\n\nvar _MatTabNavBase = /*#__PURE__*/function (_MatPaginatedTabHeade2) {\n  _inherits(_MatTabNavBase, _MatPaginatedTabHeade2);\n\n  var _super10 = _createSuper(_MatTabNavBase);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?=} platform\n   * @param {?=} animationMode\n   */\n  function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler,\n  /**\n   * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n   */\n  platform, animationMode) {\n    var _this18;\n\n    _classCallCheck(this, _MatTabNavBase);\n\n    _this18 = _super10.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    _this18._disableRipple = false;\n    /**\n     * Theme color of the nav bar.\n     */\n\n    _this18.color = 'primary';\n    return _this18;\n  }\n  /**\n   * Background color of the tab nav.\n   * @return {?}\n   */\n\n\n  _createClass(_MatTabNavBase, [{\n    key: \"_itemSelected\",\n\n    /**\n     * @protected\n     * @return {?}\n     */\n    value: function _itemSelected() {} // noop\n\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this19 = this;\n\n      // We need this to run before the `changes` subscription in parent to ensure that the\n      // selectedIndex is up-to-date by the time the super class starts looking for it.\n      this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this19.updateActiveLink();\n      });\n\n      _get(_getPrototypeOf(_MatTabNavBase.prototype), \"ngAfterContentInit\", this).call(this);\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateActiveLink\",\n    value: function updateActiveLink(_element) {\n      if (!this._items) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var items = this._items.toArray();\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].active) {\n          this.selectedIndex = i;\n\n          this._changeDetectorRef.markForCheck();\n\n          return;\n        }\n      } // The ink bar should hide itself if no items are active.\n\n\n      this.selectedIndex = -1;\n\n      this._inkBar.hide();\n    }\n  }, {\n    key: \"backgroundColor\",\n    get: function get() {\n      return this._backgroundColor;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      /** @type {?} */\n      var classList = this._elementRef.nativeElement.classList;\n      classList.remove(\"mat-background-\".concat(this.backgroundColor));\n\n      if (value) {\n        classList.add(\"mat-background-\".concat(value));\n      }\n\n      this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._disableRipple;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n  }]);\n\n  return _MatTabNavBase;\n}(MatPaginatedTabHeader);\n\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n  return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatTabNavBase,\n  inputs: {\n    color: \"color\",\n    backgroundColor: \"backgroundColor\",\n    disableRipple: \"disableRipple\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\n_MatTabNavBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewportRuler\n  }, {\n    type: Platform,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\n_MatTabNavBase.propDecorators = {\n  backgroundColor: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc6.ViewportRuler\n    }, {\n      type: ɵngcc7.Platform,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Query list of all tab links of the tab navigation.\n   * @type {?}\n   */\n  _MatTabNavBase.prototype._items;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabNavBase.prototype._backgroundColor;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabNavBase.prototype._disableRipple;\n  /**\n   * Theme color of the nav bar.\n   * @type {?}\n   */\n\n  _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nvar MatTabNav = /*#__PURE__*/function (_MatTabNavBase2) {\n  _inherits(MatTabNav, _MatTabNavBase2);\n\n  var _super11 = _createSuper(MatTabNav);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} dir\n   * @param {?} ngZone\n   * @param {?} changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?=} platform\n   * @param {?=} animationMode\n   */\n  function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler,\n  /**\n   * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n   */\n  platform, animationMode) {\n    _classCallCheck(this, MatTabNav);\n\n    return _super11.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n  return MatTabNav;\n}(_MatTabNavBase);\n\nMatTabNav.ɵfac = function MatTabNav_Factory(t) {\n  return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatTabNav,\n  selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabNav_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n      ɵngcc0.ɵɵviewQuery(_c7, true);\n      ɵngcc0.ɵɵviewQuery(_c8, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n  hostVars: 10,\n  hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matTabNavBar\", \"matTabNav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c9,\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 8,\n  consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabNav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      ɵngcc0.ɵɵelement(2, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n      ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵprojection(8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n        return ctx._stopInterval();\n      });\n      ɵngcc0.ɵɵelement(12, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nMatTabNav.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ViewportRuler\n  }, {\n    type: Platform,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatTabNav.propDecorators = {\n  _items: [{\n    type: ContentChildren,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    function () {\n      return MatTabLink;\n    }), {\n      descendants: true\n    }]\n  }],\n  _inkBar: [{\n    type: ViewChild,\n    args: [MatInkBar, {\n      static: true\n    }]\n  }],\n  _tabListContainer: [{\n    type: ViewChild,\n    args: ['tabListContainer', {\n      static: true\n    }]\n  }],\n  _tabList: [{\n    type: ViewChild,\n    args: ['tabList', {\n      static: true\n    }]\n  }],\n  _nextPaginator: [{\n    type: ViewChild,\n    args: ['nextPaginator']\n  }],\n  _previousPaginator: [{\n    type: ViewChild,\n    args: ['previousPaginator']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      inputs: ['color'],\n      template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n      host: {\n        'class': 'mat-tab-nav-bar mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc6.ViewportRuler\n    }, {\n      type: ɵngcc7.Platform,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(\n      /**\n      * @return {?}\n      */\n      function () {\n        return MatTabLink;\n      }), {\n        descendants: true\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatTabNav.ngAcceptInputType_disableRipple;\n  /** @type {?} */\n\n  MatTabNav.prototype._items;\n  /** @type {?} */\n\n  MatTabNav.prototype._inkBar;\n  /** @type {?} */\n\n  MatTabNav.prototype._tabListContainer;\n  /** @type {?} */\n\n  MatTabNav.prototype._tabList;\n  /** @type {?} */\n\n  MatTabNav.prototype._nextPaginator;\n  /** @type {?} */\n\n  MatTabNav.prototype._previousPaginator;\n} // Boilerplate for applying mixins to MatTabLink.\n\n\nvar MatTabLinkMixinBase = function MatTabLinkMixinBase() {\n  _classCallCheck(this, MatTabLinkMixinBase);\n};\n/** @type {?} */\n\n\nvar _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\n\n\nvar _MatTabLinkBase = /*#__PURE__*/function (_MatTabLinkMixinBase2) {\n  _inherits(_MatTabLinkBase, _MatTabLinkMixinBase2);\n\n  var _super12 = _createSuper(_MatTabLinkBase);\n\n  /**\n   * @param {?} _tabNavBar\n   * @param {?} elementRef\n   * @param {?} globalRippleOptions\n   * @param {?} tabIndex\n   * @param {?} _focusMonitor\n   * @param {?=} animationMode\n   */\n  function _MatTabLinkBase(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    var _this20;\n\n    _classCallCheck(this, _MatTabLinkBase);\n\n    _this20 = _super12.call(this);\n    _this20._tabNavBar = _tabNavBar;\n    _this20.elementRef = elementRef;\n    _this20._focusMonitor = _focusMonitor;\n    /**\n     * Whether the tab link is active or not.\n     */\n\n    _this20._isActive = false;\n    _this20.rippleConfig = globalRippleOptions || {};\n    _this20.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      _this20.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n\n    _focusMonitor.monitor(elementRef);\n\n    return _this20;\n  }\n  /**\n   * Whether the link is active.\n   * @return {?}\n   */\n\n\n  _createClass(_MatTabLinkBase, [{\n    key: \"focus\",\n\n    /**\n     * @return {?}\n     */\n    value: function focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._isActive;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value !== this._isActive) {\n        this._isActive = value;\n\n        this._tabNavBar.updateActiveLink(this.elementRef);\n      }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n    }\n  }]);\n\n  return _MatTabLinkBase;\n}(_MatTabLinkMixinBase);\n\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n  return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatTabLinkBase,\n  inputs: {\n    active: \"active\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\n_MatTabLinkBase.ctorParameters = function () {\n  return [{\n    type: _MatTabNavBase\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: FocusMonitor\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\n_MatTabLinkBase.propDecorators = {\n  active: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: _MatTabNavBase\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc4.FocusMonitor\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    active: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  _MatTabLinkBase.ngAcceptInputType_disabled;\n  /** @type {?} */\n\n  _MatTabLinkBase.ngAcceptInputType_disableRipple;\n  /**\n   * Whether the tab link is active or not.\n   * @type {?}\n   * @protected\n   */\n\n  _MatTabLinkBase.prototype._isActive;\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * \\@docs-private\n   * @type {?}\n   */\n\n  _MatTabLinkBase.prototype.rippleConfig;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabLinkBase.prototype._tabNavBar;\n  /** @type {?} */\n\n  _MatTabLinkBase.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nvar MatTabLink = /*#__PURE__*/function (_MatTabLinkBase2) {\n  _inherits(MatTabLink, _MatTabLinkBase2);\n\n  var _super13 = _createSuper(MatTabLink);\n\n  /**\n   * @param {?} tabNavBar\n   * @param {?} elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?} globalRippleOptions\n   * @param {?} tabIndex\n   * @param {?} focusMonitor\n   * @param {?=} animationMode\n   */\n  function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    var _this21;\n\n    _classCallCheck(this, MatTabLink);\n\n    _this21 = _super13.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    _this21._tabLinkRipple = new RippleRenderer(_assertThisInitialized(_this21), ngZone, elementRef, platform);\n\n    _this21._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n\n    return _this21;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatTabLink, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatTabLink.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._tabLinkRipple._removeTriggerEvents();\n    }\n  }]);\n\n  return MatTabLink;\n}(_MatTabLinkBase);\n\nMatTabLink.ɵfac = function MatTabLink_Factory(t) {\n  return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatTabLink,\n  selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n  hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n  hostVars: 7,\n  hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matTabLink\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatTabLink.ctorParameters = function () {\n  return [{\n    type: MatTabNav\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: FocusMonitor\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      inputs: ['disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-tab-link mat-focus-indicator',\n        '[attr.aria-current]': 'active ? \"page\" : null',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mat-tab-disabled]': 'disabled',\n        '[class.mat-tab-label-active]': 'active'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatTabNav\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc7.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc4.FocusMonitor\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * Reference to the RippleRenderer for the tab-link.\n   * @type {?}\n   * @private\n   */\n  MatTabLink.prototype._tabLinkRipple;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatTabsModule = function MatTabsModule() {\n  _classCallCheck(this, MatTabsModule);\n};\n\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatTabsModule\n});\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatTabsModule_Factory(t) {\n    return new (t || MatTabsModule)();\n  },\n  imports: [[CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, {\n    declarations: function declarations() {\n      return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent];\n    },\n    imports: function imports() {\n      return [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule];\n    },\n    exports: function exports() {\n      return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n      // Don't export all components because some are only to be used internally.\n      exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent],\n      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };","map":{"version":3,"sources":["../../../../../material/tabs/ink-bar.ts","../../../../../material/tabs/tab-content.ts","../../../../../material/tabs/tab-label.ts","../../../../../material/tabs/tab.ts","../../../../../material/tabs/tabs-animations.ts","../../../../../material/tabs/tab-body.ts","../../../../../material/tabs/tab-config.ts","../../../../../material/tabs/tab-group.ts","../../../../../material/tabs/tab-label-wrapper.ts","../../../../../material/tabs/paginated-tab-header.ts","../../../../../material/tabs/tab-header.ts","../../../../../material/tabs/tab-nav-bar/tab-nav-bar.ts","../../../../../material/tabs/tabs-module.ts","../../../../../material/tabs/index.ts"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAAA,oBAAA,GAAA,CAEC;AACD;;;;;;AAEA,IAAa,uBAAuB,GAClC,IAAI,cAAJ,CAAyC,qBAAzC,EAAgE;AAC9D,EAAA,UAAU,EAAE,MADkD;AAE9D,EAAA,OAAO,EAAE;AAFqD,CAAhE,CADF;AAKA;;;;;;;AAKA,SAAgB,+BAAhB,GAA+C;AAAK;AAAqB,MACjE,MAAM;AAAA;;;;AAAG,WAAT,MAAS,CAAC,OAAD;AAAA,WAA2B;AACxC,MAAA,IAAI,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,UAAR,IAAsB,CAAvB,IAA4B,IAA/B,GAAsC,GADX;AAExC,MAAA,KAAK,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,WAAR,IAAuB,CAAxB,IAA6B,IAAhC,GAAuC;AAFb,KAA3B;AAAA,GADwD;;AAMvE,SAAO,MAAP;AACD;AACD;;;;;;IAYa,S;AACb;;;;;;AAAE,qBACU,WADV,EAEU,OAFV,EAG2C,iBAH3C,EAIoD,cAJpD,EAI2E;AAAA;;AAHjE,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACiC,SAAA,iBAAA,GAAA,iBAAA;AACS,SAAA,cAAA,GAAA,cAAA;AAA4B;AAClF;;;;;;;;;;mCAMiB,O,EAAoB;AAAA;;AACjC,WAAK,IAAL;;AAEA,UAAI,OAAO,qBAAP,KAAiC,WAArC,EAAkD;AAChD,aAAK,OAAL,CAAa,iBAAb;AAA8B;;;AAAC,oBAAA;AAC7B,UAAA,qBAAqB;AAAA;;;AAAC;AAAA,mBAAM,KAAI,CAAC,UAAL,CAAgB,OAAhB,CAAN;AAAA,WAAD,CAArB;AACD,SAFD;AAGD,OAJD,MAIO;AACL,aAAK,UAAL,CAAgB,OAAhB;AACD;AACF;AACH;;;;;;;2BAEM;AACF,WAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B,CAAqC,UAArC,GAAkD,SAAlD;AACD;AACH;;;;;;;2BAEM;AACF,WAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B,CAAqC,UAArC,GAAkD,QAAlD;AACD;AACH;;;;;;;;;+BAKqB,O,EAAoB;AACzC;AAAyB,UAAf,SAAS,GAAG,KAAK,iBAAL,CAAuB,OAAvB,CAAG;AACzB;;;AAAyB,UAAf,MAAM,GAAgB,KAAK,WAAL,CAAiB,aAAxB;AAErB,MAAA,MAAM,CAAC,KAAP,CAAa,IAAb,GAAoB,SAAS,CAAC,IAA9B;AACA,MAAA,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,SAAS,CAAC,KAA/B;AACD;;;;;;0BAnDF,iB,CAAA,C,EAAS;AAAA,SAAC,KAAA,CAAA,IAAA,SAAA,EACT,MAAU,CAAA,iBAAV,CAAuB,MAAA,CAAA,UAAvB,CADS,EAEH,MAAA,CAAA,iBAAA,CACJ,MAAS,CAAA,MADL,CAFG,EAGE,MAAa,CAAA,iBAAb,CACT,uBADS,CAHF,EAIP,MAAiC,CAAE,iBAAnC,CAAmC,qBAAnC,EAAwE,CAAxE,CAJO,CAAD;AAIkE,C;;AACzE,SAAA,CAAA,IAAA,GAAA,MACF,CAAA,iBADE,CACF;AAAA,EAAA,IAAA,EAAA,SAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,aAAA,CAAA,CAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,aAAA,CAAA;AAAA,EAAA,QAAA,EAAA,CAAA;AAAA,EAAA,YAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;AACI;AADJ,CADE,CAAA;AAEG;;AACN,SAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACoB;AAAA,IAAA,IAAA,EA9CD;AA8CC,GADpB,EA7CiC;AAAA,IAAA,IAAA,EAAsB;AAAtB,GA6CjC,EA7CiE;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAgD5D,MAhD4D;AAgDtD,MAAA,IAAA,EAAA,CAAC,uBAAD;AAhDsD,KAAA;AAAA,GA6CjE,EAG4C;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACvC;AADuC,KAAA,EAC/B;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KAD+B;AAAA,GAH5C,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIuD,C;;AAAC,IAAA,KAAA,EAAA;AAAa;;;;AAHjE,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA;AAA6C;;;;;AAC7C,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA;AAAwB;;;;;AACxB,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA;AAAiF;;AACjF,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA;AAA0E;AAAG;;;;;;AAQjF;;;;;ICrDa,a;AACb;;;AAAE,uBAAmB,QAAnB,EAA6C;AAAA;;AAA1B,OAAA,QAAA,GAAA,QAAA;AAA+B,C;;8BAFnD,qB,CAAS,C,EAAA;AAAA,SAAE,KAAQ,CAAA,IAAE,aAAV,EAA2B,MAAC,CAAA,iBAAD,CAAC,MAAA,CAAA,WAAD,CAA3B,CAAF;AAA8B,C;;;;oCACnC,E;;AAAC;;AAAmB,aAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACU;AAAA,IAAA,IAAA,EALhB;AAKgB,GADV,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;AAJU,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAKnC,EAAA,aAAA,CAAA,SAAA,CAAA,QAAA;AAAkC;AAAG;;;;;;AAE2K;;;;;ICAjN,W;;;;;;;;;;;;EAAoB,S;;4BAHhC,mB,CAAS,C,EAAA;AAAA,SAAC,wBACD,CAAE,CAAA,IAAA,WAAF,CADA;AACE,C;;AAAgC,WAAA,CAAA,IAAA,GAAA,MAC3C,CAAA,iBAD2C,CAC3C;AAAA,EAAA,IAAA,EAAA,WAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,aAAA,EAAA,EAAA,CAAA,CAAA;AAAA,EAAA,QAAA,EAAA,CAAA,MAAA,CAAA,0BAAA;AAAA,CAD2C,CAAA;;;;;;;;;;;AAEvC,C;AAAE;;;;;AAC8K;;AAA8C;;;;;ICmB7N,U;;;AACN;;;AAAiB,IAAX,gBAAgB,GAClB,aAAa,CAAC,UAAD,CADA;AAEjB;;;;;;;AAKA,IAAa,aAAa,GAAG,IAAI,cAAJ,CAAwB,eAAxB,CAA7B;;IAWa,M;;;;;AAAkC;;;;AAgE7C,kBACU,iBADV,EAM4C,gBAN5C,EAMkE;AAAA;;AAAA;;AAChE;AANQ,WAAA,iBAAA,GAAA,iBAAA;AAKkC,WAAA,gBAAA,GAAA,gBAAA;AAAuB;;;;AA7CnD,WAAA,SAAA,GAAoB,EAApB;AAClB;;;;AAWU,WAAA,cAAA,GAAwC,IAAxC;AACV;;;;AAOW,WAAA,aAAA,GAAgB,IAAI,OAAJ,EAAhB;AACX;;;;;AAKE,WAAA,QAAA,GAA0B,IAA1B;AACF;;;;;AAKE,WAAA,MAAA,GAAwB,IAAxB;AACF;;;;AAIE,WAAA,QAAA,GAAW,KAAX;AAQkE;AAEjE;AACH;;;;;;;;;AA9BA;;;;gCA+Bc,O,EAAsB;AAChC,UAAI,OAAO,CAAC,cAAR,CAAuB,WAAvB,KAAuC,OAAO,CAAC,cAAR,CAAuB,UAAvB,CAA3C,EAA+E;AAC7E,aAAK,aAAL,CAAmB,IAAnB;AACD;AACF;AACH;;;;;;kCACa;AACT,WAAK,aAAL,CAAmB,QAAnB;AACD;AACH;;;;;;+BACU;AACN,WAAK,cAAL,GAAsB,IAAI,cAAJ,CAClB,KAAK,gBAAL,IAAyB,KAAK,gBADZ,EAC8B,KAAK,iBADnC,CAAtB;AAED;;;wBApFgB;AAAkB,aAAO,KAAK,cAAZ;AAA6B;AAClE;;;;;sBAAoB,K,EAAkB;AACtC;AACI;AACI;AACI;AACR,UAAI,KAAJ,EAAW;AACT,aAAK,cAAL,GAAsB,KAAtB;AACD;AACF;AACH;;;;;;;wBA2Ba;AACT,aAAO,KAAK,cAAZ;AACD;;;;EA1CyB,gB;;uBAT3B,c,CAAA,C,EAAA;AAAS,SAAA,KAAC,CAAA,IAAA,MAAD,EAAC,MACT,CAAA,iBADS,CACU,MAAA,CAAA,gBADV,CAAD,EAER,MAAA,CAAA,iBAAA,CAAA,aAAA,EAAA,CAAA,CAFQ,CAAA;AAER,C;;;;;;;mDAAuB,I;aACvB,oB,CAAoB,Q,EAAA,a,EAAA,I,EAAA,W;;;;;;AAEpB,MAAA,MAAA,CAAA,cAAA,CAAiB,EAAA,GAAA,MAAuB,CAAC,WAAxB,EAAjB,MAAgD,GAAA,CAAA,aAAA,GACnC,EAAE,CAAA,KADf;AACiC,MAAA,MAAI,CAAA,cAAJ,CACjC,EAAA,GAAA,MAAU,CAAA,WAAV,EADiC,MACf,GACnB,CAAA,gBADmB,GACnB,EAAA,CAAA,KAFkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAG/B;;AAAC;;AAAmB,MAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAgC;AAAA,IAAA,IAAA,EAjCtD;AAiCsD,GAAhC,EAhCtB;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAsGG;AAtGH,KAAA,EAsGW;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,aAAD;AAAV,KAtGX;AAAA,GAgCsB,CAAA;AAAA,CAAA;;AAsEwB,MAAA,CAAA,cAAA,GAAA;AAC9C,EAAA,aAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EArEC,YAqED;AArEa,IAAA,IAAA,EAAA,CAAC,WAAD;AAqEb,GAAA,CAD8C;AAnE3C,EAAA,gBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAeF,YAfE;AAeU,IAAA,IAAA,EAAA,CAAC,aAAD,EAAgB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,MAAM,EAAE;AAA5B,KAAhB;AAfV,GAAA,CAmE2C;AAnD3C,EAAA,gBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGF,SAHE;AAGO,IAAA,IAAA,EAAA,CAAC,WAAD,EAAc;AAAC,MAAA,MAAM,EAAE;AAAT,KAAd;AAHP,GAAA,CAmD2C;AAhDD,EAAA,SAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAG5C,KAH4C;AAGvC,IAAA,IAAA,EAAA,CAAC,OAAD;AAHuC,GAAA,CAgDC;AA7CzB,EAAA,SAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGpB,KAHoB;AAGf,IAAA,IAAA,EAAA,CAAC,YAAD;AAHe,GAAA,CA6CyB;AA1CpB,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAMzB,KANyB;AAMpB,IAAA,IAAA,EAAA,CAAC,iBAAD;AANoB,GAAA;AA0CoB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApCd,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAuD9C,EAAA,MAAA,CAAA,0BAAA;AACF;;;;;AA7EE,EAAA,MAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAIE,EAAA,MAAA,CAAA,SAAA,CAAA,gBAAA;AAEF;;;;;AAEE,EAAA,MAAA,CAAA,SAAA,CAAA,gBAAA;AACF;;;;;AAEE,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA;AACF;;;;;AAEE,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA;AACF;;;;;;AAKE,EAAA,MAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;;AAEE,EAAA,MAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAOE,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA;AACF;;;;;;AAKE,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA;AACF;;;;;;AAKE,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA;AACF;;;;;AAIE,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA;AACF;;;;;AAEI,EAAA,MAAA,CAAA,SAAA,CAAA,iBAAA;AAA4C;;;;;;AAK5C,EAAA,MAAA,CAAA,SAAA,CAAA,gBAAA;AAAiE;AACrE;;;;;;AAUe;;;;;;;ACnHf,IAAa,iBAAiB,GAE1B;AACJ;;;AACE,EAAA,YAAY,EAAE,OAAO,CAAC,cAAD,EAAiB,CACxC;AACI,EAAA,KAAK,CAAC,uDAAD,EAA0D,KAAK,CAAC;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAD,CAA/D,CAF+B,EAGxC;AAEG;AACI;AACI;AACP,EAAA,KAAK,CAAC,MAAD,EAAS,KAAK,CAAC;AAAC,IAAA,SAAS,EAAE,0BAAZ;AAAwC,IAAA,SAAS,EAAE;AAAnD,GAAD,CAAd,CAR+B,EASpC,KAAK,CAAC,OAAD,EAAU,KAAK,CAAC;AAAC,IAAA,SAAS,EAAE,yBAAZ;AAAuC,IAAA,SAAS,EAAE;AAAlD,GAAD,CAAf,CAT+B,EAWpC,UAAU,CAAC,wDAAD,EACN,OAAO,CAAC,sDAAD,CADD,CAX0B,EAapC,UAAU,CAAC,4BAAD,EAA+B,CACvC,KAAK,CAAC;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAD,CADkC,EAEvC,OAAO,CAAC,sDAAD,CAFgC,CAA/B,CAb0B,EAiBpC,UAAU,CAAC,6BAAD,EAAgC,CACxC,KAAK,CAAC;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAD,CADmC,EAExC,OAAO,CAAC,sDAAD,CAFiC,CAAhC,CAjB0B,CAAjB;AAFnB,CAFJ;AA2BC;;;;;;AAAiO;;;;;ICgBrN,gB;;;;;AAA2C;;;;;;AAMtD,4BACE,wBADF,EAEE,gBAFF,EAGgD,KAHhD;AAID;;;;AAIqB,EAAA,SARpB,EAQmC;AAAA;;AAAA;;AACjC,gCAAM,wBAAN,EAAgC,gBAAhC,EAAkD,SAAlD;AAN8C,WAAA,KAAA,GAAA,KAAA;AAAkB;;;;AAP1D,WAAA,aAAA,GAAgB,YAAY,CAAC,KAA7B;AACV;;;;AACU,WAAA,WAAA,GAAc,YAAY,CAAC,KAA3B;AAU2B;AAElC;AACH;;;;;;;;+BAEU;AAAA;;AACN;;AAEA,WAAK,aAAL,GAAqB,KAAK,KAAL,CAAW,gBAAX,CAClB,IADkB,CACb,SAAS,CAAC,KAAK,KAAL,CAAW,iBAAX,CAA6B,KAAK,KAAL,CAAW,SAAxC,CAAD,CADI,EAElB,SAFkB;AAET;;;;AAAC,gBAAC,WAAD,EAAqB;AAC9B,YAAI,WAAW,IAAI,CAAC,MAAI,CAAC,WAAL,EAApB,EAAwC;AACtC,UAAA,MAAI,CAAC,MAAL,CAAY,MAAI,CAAC,KAAL,CAAW,QAAvB;AACD;AACF,OANkB,CAArB;AAQA,WAAK,WAAL,GAAmB,KAAK,KAAL,CAAW,mBAAX,CAA+B,SAA/B;AAAwC;;;AAAC,kBAAA;AAC1D,QAAA,MAAI,CAAC,MAAL;AACD,OAFkB,CAAnB;AAGD;AACH;;;;;;;kCAEa;AACT;;AACA,WAAK,aAAL,CAAmB,WAAnB;;AACA,WAAK,WAAL,CAAiB,WAAjB;AACD;;;;EAxCmC,e;;iCAHrC,wB,CAAS,C,EAAA;AAAC,SAAA,KAAA,CAAA,IACT,gBADS,EACC,MAAA,CAAA,iBAAA,CACX,MAAA,CAAA,wBADW,CADD,EAEV,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,gBAAA,CAFU,EAEV,MAAA,CAAA,iBAAA,CAAA,UAAA;AAAA;;;;;GAAA,CAAA,CAFU,E,kCAAA,CAAA;;;;;;oBAGN,0B;;AAAC;;AAAmB,gBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAA0C;AAAA,IAAA,IAAA,EAzCjE;AAyCiE,GAA1C,EAxCvB;AAAA,IAAA,IAAA,EAAA;AAAA,GAwCuB,EAvCvB;AAAA,IAAA,IAAA,EAgDuD,UAhDvD;AAgDiE,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAA9D,MAA8D;AAAxD,MAAA,IAAA,EAAA,CAAC,UAAU;AAAA;;;AAAC;AAAA,eAAM,UAAN;AAAA,OAAD,CAAX;AAAwD,KAAA;AAhDjE,GAuCuB,EASwB;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAK5C,MAL4C;AAKtC,MAAA,IAAA,EAAA,CAAC,QAAD;AALsC,KAAA;AAAA,GATxB,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcK,C;;AAAC,IAAA,KAAA,EAAA;AAC5B;;;;;AAbD,EAAA,gBAAA,CAAA,SAAA,CAAA,aAAA;AACF;;;;;;AACE,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA;AACF;;;;;AAII,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA;AAAgE;AACnE;;;;;AAE2B;;;IAqCN,e;AAAkB;;;;;AA8CtC,2BAAoB,WAApB,EACgC,IADhC,EAEY,iBAFZ,EAEgD;AAAA;;AAAA;;AAF5B,SAAA,WAAA,GAAA,WAAA;AACY,SAAA,IAAA,GAAA,IAAA;AAAqB;;;;AA1C7C,SAAA,sBAAA,GAAyB,YAAY,CAAC,KAAtC;AACV;;;;AAKE,SAAA,qBAAA,GAAwB,IAAI,OAAJ,EAAxB;AACF;;;;AAEqB,SAAA,YAAA,GAAqC,IAAI,YAAJ,EAArC;AACrB;;;;AAEqB,SAAA,gBAAA,GAA0C,IAAI,YAAJ,EAA1C;AACrB;;;;AAEqB,SAAA,mBAAA,GAA0C,IAAI,YAAJ,EAA1C;AACrB;;;;AAEqB,SAAA,WAAA,GAAkC,IAAI,YAAJ,CAAuB,IAAvB,CAAlC,CAyB6B,CAxBlD;AACkG;;AAIjF;;;;AAQN,SAAA,iBAAA,GAA4B,OAA5B;;AAaP,QAAI,IAAJ,EAAU;AACR,WAAK,sBAAL,GAA8B,IAAI,CAAC,MAAL,CAAY,SAAZ;AAAqB;;;;AAAC,gBAAC,GAAD,EAAe;AACjE,QAAA,MAAI,CAAC,8BAAL,CAAoC,GAApC;;AACA,QAAA,iBAAiB,CAAC,YAAlB;AACD,OAH6B,CAA9B;AAID,KAP6C,CAQlD;AAEG;;;AACC,SAAK,qBAAL,CAA2B,IAA3B,CAAgC,oBAAoB;AAAA;;;;;AAAC,cAAC,CAAD,EAAI,CAAJ,EAAK;AACxD,aAAO,CAAC,CAAC,SAAF,KAAgB,CAAC,CAAC,SAAlB,IAA+B,CAAC,CAAC,OAAF,KAAc,CAAC,CAAC,OAAtD;AACD,KAFmD,CAApD,EAEI,SAFJ;AAEa;;;;AAAC,cAAA,KAAK,EAAA;AACvB;AACM,UAAI,MAAI,CAAC,iBAAL,CAAuB,KAAK,CAAC,OAA7B,KAAyC,MAAI,CAAC,iBAAL,CAAuB,MAAI,CAAC,SAA5B,CAA7C,EAAqF;AACnF,QAAA,MAAI,CAAC,WAAL,CAAiB,IAAjB;AACD;;AAED,UAAI,MAAI,CAAC,iBAAL,CAAuB,KAAK,CAAC,SAA7B,KAA2C,CAAC,MAAI,CAAC,iBAAL,CAAuB,MAAI,CAAC,SAA5B,CAAhD,EAAwF;AACtF,QAAA,MAAI,CAAC,mBAAL,CAAyB,IAAzB;AACD;AACF,KAXD;AAYD;AACH;;;;;;;;;;AA3BA;;;;;+BAgCU;AACN,UAAI,KAAK,SAAL,IAAkB,QAAlB,IAA8B,KAAK,MAAL,IAAe,IAAjD,EAAuD;AACrD,aAAK,SAAL,GAAiB,KAAK,0BAAL,CAAgC,KAAK,MAArC,CAAjB;AACD;AACF;AACH;;;;;;kCACa;AACT,WAAK,sBAAL,CAA4B,WAA5B;;AACA,WAAK,qBAAL,CAA2B,QAA3B;AACD;AACH;;;;;;;2CACyB,K,EAAqB;AAAI;AAC/B,UAAT,WAAW,GAAG,KAAK,iBAAL,CAAuB,KAAK,CAAC,OAA7B,CAAL;;AACf,WAAK,gBAAL,CAAsB,IAAtB,CAA2B,WAA3B;;AACA,UAAI,WAAJ,EAAiB;AACf,aAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,WAAL,CAAiB,aAAjB,CAA+B,YAAtD;AACD;AACF;AACH;;;;;;;0CAEqB;AACjB,aAAO,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACD;AACH;;;;;;;;sCAEoB,Q,EAAwC;AACxD,aAAO,QAAQ,IAAI,QAAZ,IACH,QAAQ,IAAI,oBADT,IAEH,QAAQ,IAAI,qBAFhB;AAGD;AACH;;;;;;;;;qDAEoF;AAAA,UAA3C,GAA2C,uEAA1B,KAAK,mBAAL,EAA0B;;AAChF,UAAI,KAAK,cAAL,GAAsB,CAA1B,EAA6B;AAC3B,aAAK,SAAL,GAAiB,GAAG,IAAI,KAAP,GAAe,MAAf,GAAwB,OAAzC;AACD,OAFD,MAEO,IAAI,KAAK,cAAL,GAAsB,CAA1B,EAA6B;AAClC,aAAK,SAAL,GAAiB,GAAG,IAAI,KAAP,GAAe,OAAf,GAAyB,MAA1C;AACD,OAFM,MAEA;AACL,aAAK,SAAL,GAAiB,QAAjB;AACD;AACF;AACH;;;;;;;;;;+CAKqC,M,EAAc;AAAI;AACvD,UAAU,GAAG,GAAG,KAAK,mBAAL,EAAhB;;AAEI,UAAK,GAAG,IAAI,KAAP,IAAgB,MAAM,IAAI,CAA3B,IAAkC,GAAG,IAAI,KAAP,IAAgB,MAAM,GAAG,CAA/D,EAAmE;AACjE,eAAO,oBAAP;AACD;;AAED,aAAO,qBAAP;AACD;;;sBA1FY,Q,EAAgB;AAC3B,WAAK,cAAL,GAAsB,QAAtB;;AACA,WAAK,8BAAL;AACD;;;;;;gCA9CF,uB,CAAS,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,eAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,CAAA;AAAA,C;;;;;;;;;;;;;;iBACR;;;AAAC;;AAAmB,eAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACE;AAAA,IAAA,IAAA,EA/FtB;AA+FsB,GADF,EA7FpB;AAAA,IAAA,IAAA,EAWM,cAXN;AAWoB,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAkIP;AAlIO,KAAA;AAXpB,GA6FoB,EAgDQ;AAAA,IAAA,IAAA,EArJ5B;AAqJ4B,GAhDR,CAAA;AAAA,CAAA;;AApGlB,eAAA,CAAA,cAAA,GAAA;AAGM,EAAA,YAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAgHP;AAhHO,GAAA,CAHN;AAmHU,EAAA,gBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGX;AAHW,GAAA,CAnHV;AAsHU,EAAA,mBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGX;AAHW,GAAA,CAtHV;AAyHU,EAAA,WAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGX;AAHW,GAAA,CAzHV;AA4HU,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAMX,KANW;AAMN,IAAA,IAAA,EAAA,CAAC,SAAD;AANM,GAAA,CA5HV;AAkIqB,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGtB;AAHsB,GAAA,CAlIrB;AAqIS,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAKV;AALU,GAAA,CArIT;AA0IS,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGV;AAHU,GAAA;AA1IT,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8ID,C;;AAAC,IAAA,KAAA,EAAA;AAAa;;;;;AAvCf,EAAA,eAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,sBAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,SAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,qBAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,gBAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,mBAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,QAAA;AACF;;;;;AAEE,EAAA,eAAA,CAAA,SAAA,CAAA,MAAA;AACF;;;;;AAIE,EAAA,eAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;;;;AAQc,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA;AAA6C;;;;;AAC7C,EAAA,eAAA,CAAA,SAAA,CAAA,IAAA;AAAyC;AACtD;;;;;;IAsGY,U;;;;;AACb;;;;;AAEE,sBAAY,UAAZ,EACwB,GADxB,EAEY,iBAFZ,EAEgD;AAAA;;AAAA,8BACxC,UADwC,EAC5B,GAD4B,EACvB,iBADuB;AAE/C;;;EAP6B,e;;2BAZ/B,kB,CAAA,C,EAAS;AAAA,SAAC,KAAA,CAAA,IAAA,UAAA,EACT,MAAU,CAAA,iBAAV,CAAwB,MAAA,CAAA,UAAxB,CADS,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAFS,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAFS,CAAD;AAER,C;;;;;;;;;;;UAA4B,E;;aAE5B,c,CAAe,EAAA,GAAA,MAAA,CAAA,WAAA,E,MAAsB,GAAA,CAAA,WAAA,GAAA,EAAA,CAAA,K;;;;AAErC,EAAA,QAAA,EAAA,CAAA,MAAA,CAAe,0BAAf,C;AAAyC,EAAA,KAAO,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAChD,EAAA,CAAA,CAAA,CAAA,EAAU,sBAAV,CAAA,EAA+B,CAAA,SAAA,EAAa,EAAb,CAA/B,EAA4C,CAAA,gBAAA,EACtC,EADsC,CAA5C,C;AACM,EAAA,QAAA,EAAA,SACJ,mBADI,CACmB,EADnB,EACmB,GADnB,EACmB;AAAA,QAAA,EACxB,GAAA,CADwB,EACxB;;wDACF,+D,CAAA,M,EAAA;AAAA,eAAA,GAAA,CAAA,sBAAA,CAAA,MAAA,CAAA;AAAA,O,EAAA,oB,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AAAA,O;;;;;;;;;;;;;kCACG,Y;;;AAAC;;AAAmB,UAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACd;AAAA,IAAA,IAAA,EAtPR;AAsPQ,GADc,EApPtB;AAAA,IAAA,IAAA,EAWM,cAXN;AAWoB,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA6OP;AA7OO,KAAA;AAXpB,GAoPsB,EAIM;AAAA,IAAA,IAAA,EAhQ5B;AAgQ4B,GAJN,CAAA;AAAA,CAAA;;AA3PpB,UAAA,CAAA,cAAA,GAAA;AAGC,EAAA,WAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAyPF,SAzPE;AAyPO,IAAA,IAAA,EAAA,CAAC,mBAAD;AAzPP,GAAA;AAHD,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4PoC,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAApD,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA;AACF;AACE;;;;;;AAMsB;;;;;;ACrQxB,SAAA,aAAA,GAAA,CAeC;;AACD,IAAA,KAAA,EAAA;AACY;;;;AAfV,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;;;;;AAKE,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;;;;;AAKE,EAAA,aAAA,CAAA,SAAA,CAAA,kBAAA;AACF;AACA;;;;;;AAEA,IAAa,eAAe,GAAG,IAAI,cAAJ,CAAkC,iBAAlC,CAA/B;AACC;;;;;;AAAkO;;;;;AAA4E,ICqB3S,MAAM,GAAG,CDrBkS;ACsB/S;;;;IAEa,iB;;;;AAMb,IAAA,KAAA,EAAA;AACY;;;;AALV,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA;AACF;;;;;AACE,EAAA,iBAAA,CAAA,SAAA,CAAA,GAAA;AACF,C,CACA;;AAEI;;;;;IAIE,oB;AACN;;;AAAE,8BAAmB,WAAnB,EAA0C;AAAA;;AAAvB,OAAA,WAAA,GAAA,WAAA;AAA2B,C;;AAEhD,IAAA,KAAA,EAAA;AAAa;AAFC,EAAA,oBAAA,CAAA,SAAA,CAAA,WAAA;AAA+B;AAAE;;;AAElC,IAAP,qBAAqB,GACvB,UAAU,CAAC,kBAAkB,CAAC,oBAAD,CAAnB,EAA2C,SAA3C,CADD;AAEb;;;;;AACA,SAAA,qBAAA,GAAA,CAGC;;AACD,IAAA,KAAA,EAAA;AAEQ;AALN,EAAA,qBAAA,CAAA,SAAA,CAAA,yBAAA;AACF;;AAAE,EAAA,qBAAA,CAAA,SAAA,CAAA,UAAA;AACF;AACA;;;;;AAMA;;;IACsB,gB;;;;;AAAiD;;;;;;AA0FrE,4BAAY,UAAZ,EACsB,kBADtB,EAEiD,aAFjD,EAG8D,cAH9D,EAGqF;AAAA;;AAAA;;AACnF,gCAAM,UAAN;AAHoB,WAAA,kBAAA,GAAA,kBAAA;AAEwC,WAAA,cAAA,GAAA,cAAA;AAAwB;;;;AAjFtF,WAAA,KAAA,GAA2B,IAAI,SAAJ,EAA3B;AACF;;;;AAEU,WAAA,cAAA,GAAgC,CAAhC;AACV;;;;AAEU,WAAA,qBAAA,GAAgC,CAAhC;AACV;;;;AAEU,WAAA,iBAAA,GAAoB,YAAY,CAAC,KAAjC;AACV;;;;AAEU,WAAA,qBAAA,GAAwB,YAAY,CAAC,KAArC;AAMA,WAAA,cAAA,GAA0B,KAA1B;AAQA,WAAA,cAAA,GAAgC,IAAhC;AACV;;;;AAEW,WAAA,cAAA,GAAuC,OAAvC;AACX;;;;AAiCqB,WAAA,mBAAA,GAA4C,IAAI,YAAJ,EAA5C;AACrB;;;;AAEqB,WAAA,WAAA,GACf,IAAI,YAAJ,EADe;AAErB;;;;AAEqB,WAAA,aAAA,GAAoC,IAAI,YAAJ,EAApC;AACrB;;;;AAEqB,WAAA,iBAAA,GACf,IAAI,YAAJ,CAAoC,IAApC,CADe;AAUjB,WAAK,QAAL,GAAgB,MAAM,EAAtB;AACA,WAAK,iBAAL,GAAyB,aAAa,IAAI,aAAa,CAAC,iBAA/B,GACrB,aAAa,CAAC,iBADO,GACa,OADtC;AAEA,WAAK,iBAAL,GAAyB,aAAa,IAAI,aAAa,CAAC,iBAAd,IAAmC,IAApD,GACrB,aAAa,CAAC,iBADO,GACa,KADtC;AALmF;AAOpF;AACH;;;;;;;;;AA7BA;;;;;;;4CAoCuB;AAAA;;AACvB;AACI;;AACI;AAAyB,UAAvB,aAAa,GAAG,KAAK,cAAL,GAAsB,KAAK,cAAL,CAAoB,KAAK,cAAzB,CAAf,CAHV,CAIvB;AAEG;;;AACC,UAAI,KAAK,cAAL,IAAuB,aAA3B,EAA0C;AAC9C;AAA6B,YAAjB,UAAU,GAAG,KAAK,cAAL,IAAuB,IAAnB;;AAEvB,YAAI,CAAC,UAAL,EAAiB;AACf,eAAK,iBAAL,CAAuB,IAAvB,CAA4B,KAAK,kBAAL,CAAwB,aAAxB,CAA5B;AACD,SALuC,CAM9C;AAEK;;;AACC,QAAA,OAAO,CAAC,OAAR,GAAkB,IAAlB;AAAsB;;;AAAC,oBAAA;AACrB,UAAA,MAAI,CAAC,KAAL,CAAW,OAAX;AAAkB;;;;;AAAC,oBAAC,GAAD,EAAM,KAAN;AAAA,mBAAgB,GAAG,CAAC,QAAJ,GAAe,KAAK,KAAK,aAAzC;AAAA,WAAnB;;AAEA,cAAI,CAAC,UAAL,EAAiB;AACf,YAAA,MAAI,CAAC,mBAAL,CAAyB,IAAzB,CAA8B,aAA9B;AACD;AACF,SAND;AAOD,OAvBkB,CAwBvB;;;AAEI,WAAK,KAAL,CAAW,OAAX;AAAkB;;;;;AAAC,gBAAC,GAAD,EAAc,KAAd,EAA2B;AAC5C,QAAA,GAAG,CAAC,QAAJ,GAAe,KAAK,GAAG,aAAvB,CAD4C,CAElD;AAEK;;AACC,YAAI,MAAI,CAAC,cAAL,IAAuB,IAAvB,IAA+B,GAAG,CAAC,QAAJ,IAAgB,CAA/C,IAAoD,CAAC,GAAG,CAAC,MAA7D,EAAqE;AACnE,UAAA,GAAG,CAAC,MAAJ,GAAa,aAAa,GAAG,MAAI,CAAC,cAAlC;AACD;AACF,OARD;;AAUA,UAAI,KAAK,cAAL,KAAwB,aAA5B,EAA2C;AACzC,aAAK,cAAL,GAAsB,aAAtB;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACD;AACF;AACH;;;;;;yCACoB;AAAA;;AAChB,WAAK,yBAAL;;AACA,WAAK,qBAAL,GAFgB,CAGpB;AAEG;;;AACC,WAAK,iBAAL,GAAyB,KAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB;AAA4B;;;AAAC,kBAAA;AAC1D;AAA6B,YAAjB,aAAa,GAAG,MAAI,CAAC,cAAL,CAAoB,MAAI,CAAC,cAAzB,CAAC,CAD6B,CAE1D;AAEK;;;AACC,YAAI,aAAa,KAAK,MAAI,CAAC,cAA3B,EAA2C;AACjD;AAAiC,cAAnB,IAAI,GAAG,MAAI,CAAC,KAAL,CAAW,OAAX,EAAY;;AAEzB,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,gBAAI,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAZ,EAAsB;AAChC;AACY;AACY;AACZ,cAAA,MAAI,CAAC,cAAL,GAAsB,MAAI,CAAC,cAAL,GAAsB,CAA5C;AACA;AACD;AACF;AACF;;AAED,QAAA,MAAI,CAAC,kBAAL,CAAwB,YAAxB;AACD,OApBwB,CAAzB;AAqBD;AACH;;;;;;;;gDAEmC;AAAA;;AACnC;AACI;AACI;AACJ,WAAK,QAAL,CAAc,OAAd,CACG,IADH,CACQ,SAAS,CAAC,KAAK,QAAN,CADjB,EAEG,SAFH;AAEY;;;;AAAC,gBAAC,IAAD,EAAwB;AACjC,QAAA,MAAI,CAAC,KAAL,CAAW,KAAX,CAAiB,IAAI,CAAC,MAAL;AAAW;;;;AAAC,kBAAA,GAAG,EAAA;AACxC;AACM;AACI,iBAAO,CAAC,GAAG,CAAC,gBAAL,IAAyB,GAAG,CAAC,gBAAJ,KAAyB,MAAzD;AACD,SAJgB,CAAjB;;AAKA,QAAA,MAAI,CAAC,KAAL,CAAW,eAAX;AACD,OATH;AAUD;AACH;;;;;;kCACa;AACT,WAAK,KAAL,CAAW,OAAX;;AACA,WAAK,iBAAL,CAAuB,WAAvB;;AACA,WAAK,qBAAL,CAA2B,WAA3B;AACD;AACH;;;;;;;oCAEe;AACX,UAAI,KAAK,UAAT,EAAqB;AACnB,aAAK,UAAL,CAAgB,yBAAhB;AACD;AACF;AACH;;;;;;;kCACgB,K,EAAa;AACzB,WAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,kBAAL,CAAwB,KAAxB,CAAtB;AACD;AACH;;;;;;;;uCAC6B,K,EAAa;AAAI;AACxC,UAAI,KAAK,GAAG,IAAI,iBAAJ,EAAZ;AACF,MAAA,KAAK,CAAC,KAAN,GAAc,KAAd;;AACA,UAAI,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,MAA7B,EAAqC;AACnC,QAAA,KAAK,CAAC,GAAN,GAAY,KAAK,KAAL,CAAW,OAAX,GAAqB,KAArB,CAAZ;AACD;;AACD,aAAO,KAAP;AACD;AACH;;;;;;;;;;;4CAO+B;AAAA;;AAC3B,UAAI,KAAK,qBAAT,EAAgC;AAC9B,aAAK,qBAAL,CAA2B,WAA3B;AACD;;AAED,WAAK,qBAAL,GAA6B,KAAK,MAAL,4BAAS,KAAK,KAAL,CAAW,GAAX;AAAc;;;;AAAC,gBAAA,GAAG;AAAA,eAAI,GAAG,CAAC,aAAR;AAAA,OAAlB,CAAT,GAC1B,SAD0B;AACjB;;;AAAC;AAAA,eAAM,OAAI,CAAC,kBAAL,CAAwB,YAAxB,EAAN;AAAA,OADgB,CAA7B;AAED;AACH;;;;;;;;;mCAEyB,K,EAAoB;AAAI;AACwB;AAEzE;AACI,aAAO,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA7B,EAAgC,IAAI,CAAC,GAAL,CAAS,KAAK,IAAI,CAAlB,EAAqB,CAArB,CAAhC,CAAP;AACD;AACH;;;;;;;;mCAEiB,C,EAAS;AACtB,qCAAwB,KAAK,QAA7B,cAAyC,CAAzC;AACD;AACH;;;;;;;;qCAEmB,C,EAAS;AACxB,uCAA0B,KAAK,QAA/B,cAA2C,CAA3C;AACD;AACH;;;;;;;;;6CAK2B,S,EAAiB;AACxC,UAAI,CAAC,KAAK,cAAN,IAAwB,CAAC,KAAK,qBAAlC,EAAyD;AAAE;AAAS;AACxE;;;AACwB,UAAd,OAAO,GAAgB,KAAK,eAAL,CAAqB,aAA9B;AAEpB,MAAA,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,KAAK,qBAAL,GAA6B,IAApD,CALwC,CAM5C;AAEG;;AACC,UAAI,KAAK,eAAL,CAAqB,aAArB,CAAmC,YAAvC,EAAqD;AACnD,QAAA,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,SAAS,GAAG,IAAnC;AACD;AACF;AACH;;;;;;;kDAE6B;AAAK;AACf,UAAT,OAAO,GAAG,KAAK,eAAL,CAAqB,aAAtB;AACf,WAAK,qBAAL,GAA6B,OAAO,CAAC,YAArC;AACA,MAAA,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,EAAvB;AACA,WAAK,aAAL,CAAmB,IAAnB;AACD;AACH;;;;;;;;;;iCAEe,G,EAAa,S,EAAkC,K,EAAa;AACvE,UAAI,CAAC,GAAG,CAAC,QAAT,EAAmB;AACjB,aAAK,aAAL,GAAqB,SAAS,CAAC,UAAV,GAAuB,KAA5C;AACD;AACF;AACH;;;;;;;;;iCAEe,G,EAAa,G,EAAW;AACnC,UAAI,GAAG,CAAC,QAAR,EAAkB;AAChB,eAAO,IAAP;AACD;;AACD,aAAO,KAAK,aAAL,KAAuB,GAAvB,GAA6B,CAA7B,GAAiC,CAAC,CAAzC;AACD;;;wBA1QgB;AAAc,aAAO,KAAK,cAAZ;AAA6B;AAC9D;;;;;sBAAoB,K,EAAc;AAAI,WAAK,cAAL,GAAsB,qBAAqB,CAAC,KAAD,CAA3C;AAAqD;AAC3F;;;;;;;wBAImB;AAAoB,aAAO,KAAK,cAAZ;AAA6B;AACpE;;;;;sBAAoB,K,EAAoB;AACpC,WAAK,cAAL,GAAsB,oBAAoB,CAAC,KAAD,EAAQ,IAAR,CAA1C;AACD;AACH;;;;;;;wBAOuB;AAAa,aAAO,KAAK,kBAAZ;AAAiC;AACrE;;;;;sBAAwB,K,EAAa;AACjC,WAAK,kBAAL,GAA0B,QAAQ,IAAR,CAAa,KAAb,IAAsB,KAAK,GAAG,IAA9B,GAAqC,KAA/D;AACD;AACH;;;;;;;wBAWqB;AAAmB,aAAO,KAAK,gBAAZ;AAA+B;AACvE;;;;;sBAAsB,K,EAAmB;AACzC;AAAyB,UAAf,aAAa,GAAgB,KAAK,WAAL,CAAiB,aAA/B;AAErB,MAAA,aAAa,CAAC,SAAd,CAAwB,MAAxB,0BAAiD,KAAK,eAAtD;;AAEA,UAAI,KAAJ,EAAW;AACT,QAAA,aAAa,CAAC,SAAd,CAAwB,GAAxB,0BAA8C,KAA9C;AACD;;AAED,WAAK,gBAAL,GAAwB,KAAxB;AACD;;;;EAvE4C,qB;;iCAF9C,wB,CAAS,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,gBAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,eAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAAA,C;;;;;;;;;;;;;;;;;;oBACR,0B;;AAAC;;AAAmB,gBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACG;AAAA,IAAA,IAAA,EA5DvB;AA4DuB,GADH,EA1DpB;AAAA,IAAA,IAAA,EALA;AAKA,GA0DoB,EA9DpB;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA2Ja,MA3Jb;AA2JmB,MAAA,IAAA,EAAA,CAAC,eAAD;AA3JnB,KAAA,EA2JmC;AAAA,MAAA,IAAA,EAAG;AAAH,KA3JnC;AAAA,GA8DoB,EA6FiC;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACxC;AADwC,KAAA,EAChC;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KADgC;AAAA,GA7FjC,CAAA;AAAA,CAAA;;AA8F4C,gBAAA,CAAA,cAAA,GAAA;AACvD,EAAA,aAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAnER;AAmEQ,GAAA,CADuD;AAjEhE,EAAA,aAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAKC;AALD,GAAA,CAiEgE;AA3DhE,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAOC;AAPD,GAAA,CA2DgE;AApDrD,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGV;AAHU,GAAA,CAoDqD;AAhDhE,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAUC;AAVD,GAAA,CAgDgE;AArChE,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGC;AAHD,GAAA,CAqCgE;AAjChE,EAAA,mBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAeC;AAfD,GAAA,CAiCgE;AAlBpD,EAAA,WAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGX;AAHW,GAAA,CAkBoD;AAfpD,EAAA,aAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAIX;AAJW,GAAA,CAeoD;AAXpD,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAGX;AAHW,GAAA;AAWoD,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARnD,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAmN3B,EAAA,gBAAA,CAAA,+BAAA;AACF;;AAAE,EAAA,gBAAA,CAAA,mCAAA;AACF;;AAAE,EAAA,gBAAA,CAAA,+BAAA;AACF;;AAAE,EAAA,gBAAA,CAAA,+BAAA;AACF;;;;;;AArSE,EAAA,gBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,gBAAA,CAAA,SAAA,CAAA,eAAA;AACF;;AAAE,EAAA,gBAAA,CAAA,SAAA,CAAA,UAAA;AACF;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA;AACF;;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,qBAAA;AACF;;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,qBAAA;AACF;;;;;AAKE,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAOE,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAOE,EAAA,gBAAA,CAAA,SAAA,CAAA,kBAAA;AACF;;;;;;AAKE,EAAA,gBAAA,CAAA,SAAA,CAAA,iBAAA;AAEF;;;;;AAeE,EAAA,gBAAA,CAAA,SAAA,CAAA,gBAAA;AACF;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,mBAAA;AACF;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA;AAEF;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,aAAA;AACF;;;;;AAEE,EAAA,gBAAA,CAAA,SAAA,CAAA,iBAAA;AAEF;;;;;AACE,EAAA,gBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;;;;AAEc,EAAA,gBAAA,CAAA,SAAA,CAAA,kBAAA;AAAgD;;AAEhD,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA;AAA0E;AAAE;;;;;;;IAyO7E,W;;;;;AACb;;;;;;AAIE,uBAAY,UAAZ,EACY,iBADZ,EAEiD,aAFjD,EAGuD,aAHvD,EAG6E;AAAA;;AAAA,8BACrE,UADqE,EACzD,iBADyD,EACtC,aADsC,EACvB,aADuB;AAE5E;;;EAV8B,gB;;4BAnBhC,mB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,WAAA,EACD,MAAE,CAAA,iBAAF,CAAiB,MAAA,CAAA,UAAjB,CADC,EAEC,MAAA,CAAA,iBAAA,CAAa,MACvB,CAAA,iBADU,CAFD,EAGT,MAAA,CAAA,iBAAA,CAAA,eAAA,EAAA,CAAA,CAHS,EAGT,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAHS,CAAD;AAGR,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;i6BAA6B,c;AAE7B,EAAA,QAAA,EAAA,SAAe,oBAAf,CAAqC,EAArC,EAAqC,GAArC,EAAqC;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;oDAErC,C;AAAe,MAAA,MAAE,CAAA,UAAF,CAAE,cAAF,EAA0B,SAAO,2DAAP,CACP,MADO,EAEzC;AAAA,eAAY,GAAA,CAAA,aAAA,CAAA,MAAA,CAAZ;AACE,OAHa,EAGb,oBAHa,EAGS,SAAA,iEAAA,CAEtB,MAFsB,EAEtB;AACF,eAAM,GAAA,CAAA,aAAA,GAAA,MAAN;AACS,OAPM;AAOW,MAAA,MAAA,CAAA,UAAA,CAAA,CAAA,EAAA,0BAAA,EACxB,CADwB,EACxB,EADwB,EACxB,KADwB,EACxB,CADwB;AACgB,MAAA,MAAA,CAAe,YAAf;AACxC,MAAA,MAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA;AAAyC,MAAA,MAAA,CAAA,UAAA,CAAA,CAAA,EAA4B,mCAA5B,EAC1C,CAD0C,EAC1C,CAD0C,EAC1C,cAD0C,EAC1C,CAD0C;;;;;;;;;;;;;;;;;WAE5C,s/C;AAAA,EAAA,aAAA,EAAA;;AACI;;AAAmB,WAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACf;AAAA,IAAA,IAAA,EAnYP;AAmYO,GADe,EAjYtB;AAAA,IAAA,IAAA,EALA;AAKA,GAiYsB,EArYtB;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA4Ya,MA5Yb;AA4YmB,MAAA,IAAA,EAAA,CAAC,eAAD;AA5YnB,KAAA,EA4YmC;AAAA,MAAA,IAAA,EAAG;AAAH,KA5YnC;AAAA,GAqYsB,EAO+B;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACxC;AADwC,KAAA,EAChC;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KADgC;AAAA,GAP/B,CAAA;AAAA,CAAA;;AAQ0C,WAAA,CAAA,cAAA,GAAA;AACpD,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EARX,eAQW;AARI,IAAA,IAAA,EAAA,CAAC,MAAD,EAAS;AAAC,MAAA,WAAW,EAAE;AAAd,KAAT;AAQJ,GAAA,CADoD;AAPb,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAClD,SADkD;AACzC,IAAA,IAAA,EAAA,CAAC,gBAAD;AADyC,GAAA,CAOa;AAN9B,EAAA,UAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACjC,SADiC;AACxB,IAAA,IAAA,EAAA,CAAC,WAAD;AADwB,GAAA;AAM8B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALlC,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAF5C,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,WAAA,CAAA,SAAA,CAAA,eAAA;AACF;;AAAE,EAAA,WAAA,CAAA,SAAA,CAAA,UAAA;AACF;AACE;;;;;AAG8D;;AACzB;;;;;IClZjC,sB;;;AACN;;;AAAiB,IAAX,4BAA4B,GAC9B,aAAa,CAAC,sBAAD,CADA;AAEjB;;;;;;IAaa,kB;;;;;AAA0D;;;AACrE,8BAAmB,UAAnB,EAAyC;AAAA;;AAAA;;AACvC;AADiB,YAAA,UAAA,GAAA,UAAA;AAAsB;AAExC;AACH;;;;;;;;4BAEO;AACH,WAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;AACD;AACH;;;;;;oCACe;AACX,aAAO,KAAK,UAAL,CAAgB,aAAhB,CAA8B,UAArC;AACD;AACH;;;;;;qCACgB;AACZ,aAAO,KAAK,UAAL,CAAgB,aAAhB,CAA8B,WAArC;AACD;;;;EAhBqC,4B;;mCARvC,0B,CAAS,C,EAAC;AAAA,SAAA,KAAA,CAAA,IACT,kBADS,EACC,MAAA,CAAA,iBAAA,CAAsB,MAChC,CAAA,UADU,CADD,CAAA;AAEU,C;;AACnB,kBAAA,CAAA,IAAA,GAAM,MAAA,CAAA,iBAAA,CACJ;AAAA,EAAA,IAAA,EAAA,kBAAA;AAA4B,EAAA,SAAU,EAAA,CAAA,CAAA,EAAA,EAAA,oBAAA,EACtC,EADsC,CAAA,CAAtC;AACA,EAAA,QAAwB,EAAA,CADxB;AACwB,EAAA,YAAY,EAAA,SACrC,+BADqC,CAEvC,EAFuC,EAEvC,GAFuC,EAEvC;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;GAHG;;;GAAA;oBAIC,0B;AAJD,CADI,CAAN;AAKI;;AAAmB,kBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAA4C;AAAA,IAAA,IAAA,EAtBlD;AAsBkD,GAA5C,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;AAtBS,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAwC9C,EAAA,kBAAA,CAAA,0BAAA;AACF;;AAlBc,EAAA,kBAAA,CAAA,SAAA,CAAA,UAAA;AAA8B;AAC5C;;;;;;AAYwB;;;;;;AAIpB,ICdE,2BAA2B;AAAA;AAC7B,+BAA+B,CAAC;AAAC,EAAA,OAAO,EAAE;AAAV,CAAD,CDa/B;ACZJ;;;;;;AAGqE,IAS/D,sBAAsB,GAAG,EATsC;AAUrE;;;;;;AAKY,IAAN,mBAAmB,GAAG,GAAhB;AACZ;;;;;;AAKY,IAAN,sBAAsB,GAAG,GAAnB;AACZ;;;;;;IASsB,qB;AAAwB;;;;;;;;;AA0E5C,iCAAsB,WAAtB,EACsB,kBADtB,EAEoB,cAFpB,EAGgC,IAHhC,EAIoB,OAJpB,EASoB,SATpB,EAU8D,cAV9D,EAUqF;AAAA;;AAAA;;AAV/D,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,kBAAA,GAAA,kBAAA;AACF,SAAA,cAAA,GAAA,cAAA;AACY,SAAA,IAAA,GAAA,IAAA;AACZ,SAAA,OAAA,GAAA,OAAA;AAKA,SAAA,SAAA,GAAA,SAAA;AAC0C,SAAA,cAAA,GAAA,cAAA;AAAwB;;;;AA1E9E,SAAA,eAAA,GAAkB,CAAlB;AACV;;;;AAEU,SAAA,qBAAA,GAAwB,KAAxB;AACV;;;;AAEqB,SAAA,UAAA,GAAa,IAAI,OAAJ,EAAb;AACrB;;;;AAEE,SAAA,uBAAA,GAA0B,KAA1B;AACF;;;;AAEE,SAAA,mBAAA,GAAsB,IAAtB;AACF;;;;AAEE,SAAA,oBAAA,GAAuB,IAAvB;AACF;;;;AAiBU,SAAA,cAAA,GAAiB,IAAI,OAAJ,EAAjB;AACV;;;;;AAME,SAAA,iBAAA,GAA6B,KAA7B;AAgBQ,SAAA,cAAA,GAAyB,CAAzB;AACV;;;;AAEW,SAAA,kBAAA,GAA2C,IAAI,YAAJ,EAA3C;AACX;;;;AAEW,SAAA,YAAA,GAAqC,IAAI,YAAJ,EAArC,CAY4E,CAXvF;;AAcI,IAAA,OAAO,CAAC,iBAAR;AAAyB;;;AAAC,gBAAA;AACxB,MAAA,SAAS,CAAC,WAAW,CAAC,aAAb,EAA4B,YAA5B,CAAT,CACG,IADH,CACQ,SAAS,CAAC,OAAI,CAAC,UAAN,CADjB,EAEG,SAFH;AAEY;;;AAAC,kBAAA;AACT,QAAA,OAAI,CAAC,aAAL;AACD,OAJH;AAKD,KAND;AAOD;AACH;;;;;;;;;AA7BA;;;sCAiCiB;AAAA;;AACjB;AACI,MAAA,SAAS,CAAC,KAAK,kBAAL,CAAwB,aAAzB,EAAwC,YAAxC,EAAsD,2BAAtD,CAAT,CACG,IADH,CACQ,SAAS,CAAC,KAAK,UAAN,CADjB,EAEG,SAFH;AAEY;;;AAAC,kBAAA;AACT,QAAA,OAAI,CAAC,qBAAL,CAA2B,QAA3B;AACD,OAJH;AAMA,MAAA,SAAS,CAAC,KAAK,cAAL,CAAoB,aAArB,EAAoC,YAApC,EAAkD,2BAAlD,CAAT,CACG,IADH,CACQ,SAAS,CAAC,KAAK,UAAN,CADjB,EAEG,SAFH;AAEY;;;AAAC,kBAAA;AACT,QAAA,OAAI,CAAC,qBAAL,CAA2B,OAA3B;AACD,OAJH;AAKD;AACH;;;;;;yCACoB;AAAA;;AACpB;AAAyB,UAAf,SAAS,GAAG,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,MAAtB,GAA+BA,EAAY,CAAC,IAAD,CAAxC;AACzB;;AAAyB,UAAf,MAAM,GAAG,KAAK,cAAL,CAAoB,MAApB,CAA2B,GAA3B,CAAM;AACzB;;;AAAyB,UAAf,OAAO;AAAA;;;AAAG,eAAV,OAAU,GAAA;AACd,QAAA,OAAI,CAAC,gBAAL;;AACA,QAAA,OAAI,CAAC,yBAAL;AACD,OAHoB;;AAKrB,WAAK,WAAL,GAAmB,IAAI,eAAJ,CAA+C,KAAK,MAApD,EAChB,yBADgB,CACU,KAAK,mBAAL,EADV,EAEhB,QAFgB,EAAnB;;AAIA,WAAK,WAAL,CAAiB,gBAAjB,CAAkC,CAAlC,EAZgB,CAapB;AAEG;;;AACC,aAAO,qBAAP,KAAiC,WAAjC,GAA+C,qBAAqB,CAAC,OAAD,CAApE,GAAgF,OAAO,EAAvF,CAhBgB,CAiBpB;AAEG;;AACC,MAAA,KAAK,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAAK,MAAL,CAAY,OAAhC,CAAL,CAA8C,IAA9C,CAAmD,SAAS,CAAC,KAAK,UAAN,CAA5D,EAA+E,SAA/E;AAAwF;;;AAAC,kBAAA;AAC7F;AACM,QAAA,OAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,OAAvB;;AACA,QAAA,OAAI,CAAC,WAAL,CAAiB,yBAAjB,CAA2C,OAAI,CAAC,mBAAL,EAA3C;AACD,OAJD,EApBgB,CAyBpB;AAEG;AACI;;AACH,WAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B,SAAS,CAAC,KAAK,UAAN,CAAtC,EAAyD,SAAzD;AAAkE;;;;AAAC,gBAAA,aAAa,EAAA;AAC9E,QAAA,OAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB,aAAvB;;AACA,QAAA,OAAI,CAAC,YAAL,CAAkB,aAAlB;AACD,OAHD;AAID;AACH;;;;;;4CACuB;AAAK;AAExB,UAAI,KAAK,cAAL,IAAuB,KAAK,MAAL,CAAY,MAAvC,EAA+C;AAC7C,aAAK,gBAAL;AACA,aAAK,cAAL,GAAsB,KAAK,MAAL,CAAY,MAAlC;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACD,OANkB,CAOvB;AAEG;;;AACC,UAAI,KAAK,qBAAT,EAAgC;AAC9B,aAAK,cAAL,CAAoB,KAAK,cAAzB;;AACA,aAAK,uBAAL;;AACA,aAAK,yBAAL;;AACA,aAAK,qBAAL,GAA6B,KAA7B;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACD,OAhBkB,CAiBvB;AAEG;;;AACC,UAAI,KAAK,sBAAT,EAAiC;AAC/B,aAAK,wBAAL;;AACA,aAAK,sBAAL,GAA8B,KAA9B;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACD;AACF;AACH;;;;;;kCACa;AACT,WAAK,UAAL,CAAgB,IAAhB;;AACA,WAAK,UAAL,CAAgB,QAAhB;;AACA,WAAK,cAAL,CAAoB,QAApB;AACD;AACH;;;;;;;;mCAEiB,K,EAAoB;AACrC;AACI,UAAI,cAAc,CAAC,KAAD,CAAlB,EAA2B;AACzB;AACD;;AAED,cAAQ,KAAK,CAAC,OAAd;AACE,aAAK,IAAL;AACE,eAAK,WAAL,CAAiB,kBAAjB;;AACA,UAAA,KAAK,CAAC,cAAN;AACA;;AACF,aAAK,GAAL;AACE,eAAK,WAAL,CAAiB,iBAAjB;;AACA,UAAA,KAAK,CAAC,cAAN;AACA;;AACF,aAAK,KAAL;AACA,aAAK,KAAL;AACE,cAAI,KAAK,UAAL,KAAoB,KAAK,aAA7B,EAA4C;AAC1C,iBAAK,kBAAL,CAAwB,IAAxB,CAA6B,KAAK,UAAlC;;AACA,iBAAK,aAAL,CAAmB,KAAnB;AACD;;AACD;;AACF;AACE,eAAK,WAAL,CAAiB,SAAjB,CAA2B,KAA3B;;AAjBJ;AAmBD;AACH;;;;;;;wCAImB;AAAA;;AACnB;AAAyB,UAAf,WAAW,GAAG,KAAK,WAAL,CAAiB,aAAjB,CAA+B,WAA9B,CADN,CAEnB;AAEG;AACI;;AACH,UAAI,WAAW,KAAK,KAAK,mBAAzB,EAA8C;AAC5C,aAAK,mBAAL,GAA2B,WAAW,IAAI,EAA1C,CAD4C,CAElD;AAEK;;AACC,aAAK,OAAL,CAAa,GAAb;AAAgB;;;AAAC,oBAAA;AACf,UAAA,OAAI,CAAC,gBAAL;;AACA,UAAA,OAAI,CAAC,yBAAL;;AACA,UAAA,OAAI,CAAC,kBAAL,CAAwB,YAAxB;AACD,SAJD;AAKD;AACF;AACH;;;;;;;;;;;uCAQkB;AACd,WAAK,uBAAL;;AACA,WAAK,uBAAL;;AACA,WAAK,wBAAL;AACD;AACH;;;;;;;;AAcA;;;;;;kCAKgB,K,EAAa;AACzB,UAAI,CAAC,KAAK,MAAV,EAAkB;AAAE,eAAO,IAAP;AAAc;AACtC;;;AACwB,UAAd,GAAG,GAAG,KAAK,MAAL,GAAc,KAAK,MAAL,CAAY,OAAZ,GAAsB,KAAtB,CAAd,GAA6C,IAArC;AACpB,aAAO,CAAC,CAAC,GAAF,IAAS,CAAC,GAAG,CAAC,QAArB;AACD;AACH;;;;;;;;;iCAKe,Q,EAAgB;AAC3B,UAAI,KAAK,uBAAT,EAAkC;AAChC,aAAK,cAAL,CAAoB,QAApB;AACD;;AAED,UAAI,KAAK,MAAL,IAAe,KAAK,MAAL,CAAY,MAA/B,EAAuC;AACrC,aAAK,MAAL,CAAY,OAAZ,GAAsB,QAAtB,EAAgC,KAAhC,GADqC,CAE3C;AAEK;AACM;;AACM;;;AAA6B,YAAlC,WAAW,GAAG,KAAK,iBAAL,CAAuB,aAAH;AAC9C;;AAA6B,YAAjB,GAAG,GAAG,KAAK,mBAAL,EAAW;;AAEvB,YAAI,GAAG,IAAI,KAAX,EAAkB;AAChB,UAAA,WAAW,CAAC,UAAZ,GAAyB,CAAzB;AACD,SAFD,MAEO;AACL,UAAA,WAAW,CAAC,UAAZ,GAAyB,WAAW,CAAC,WAAZ,GAA0B,WAAW,CAAC,WAA/D;AACD;AACF;AACF;AACH;;;;;;;0CAEqB;AACjB,aAAO,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACD;AACH;;;;;;;+CAE0B;AACtB,UAAI,KAAK,iBAAT,EAA4B;AAC1B;AACD;AACL;;;AACwB,UAAd,cAAc,GAAG,KAAK,cAAR;AACxB;;AAAyB,UAAf,QAAQ,GAAG,KAAK,SAAD;AACzB;;AAAyB,UAAf,UAAU,GAAG,KAAK,mBAAL,OAA+B,KAA/B,GAAuC,CAAC,cAAxC,GAAyD,cAAvD,CAPC,CAQ1B;AAEG;AACI;AACI;AACI;AACI;;AACf,WAAK,QAAL,CAAc,aAAd,CAA4B,KAA5B,CAAkC,SAAlC,wBAA4D,IAAI,CAAC,KAAL,CAAW,UAAX,CAA5D,SAfsB,CAgB1B;AAEG;AACI;AACI;AACI;;AACX,UAAI,QAAQ,KAAK,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,IAAlC,CAAZ,EAAqD;AACnD,aAAK,iBAAL,CAAuB,aAAvB,CAAqC,UAArC,GAAkD,CAAlD;AACD;AACF;AACH;;;;;;;;AAMA;;;;;;;;;;kCASgB,S,EAA0B;AAC1C;AAAyB,UAAf,UAAU,GAAG,KAAK,iBAAL,CAAuB,aAAvB,CAAqC,WAAnC,CADiB,CAE1C;;AAEG;;AAAyB,UAAlB,YAAY,GAAG,CAAC,SAAS,IAAI,QAAb,GAAwB,CAAC,CAAzB,GAA6B,CAA9B,IAAmC,UAAnC,GAAgD,CAA7C;AAExB,aAAO,KAAK,SAAL,CAAe,KAAK,eAAL,GAAuB,YAAtC,CAAP;AACD;AACH;;;;;;;;0CAEwB,S,EAA0B;AAC9C,WAAK,aAAL;;AACA,WAAK,aAAL,CAAmB,SAAnB;AACD;AACH;;;;;;;;;;;mCAOiB,U,EAAkB;AAC/B,UAAI,KAAK,iBAAT,EAA4B;AAC1B;AACD;AACL;;;AACwB,UAAd,aAAa,GAAG,KAAK,MAAL,GAAc,KAAK,MAAL,CAAY,OAAZ,GAAsB,UAAtB,CAAd,GAAkD,IAApD;;AAEpB,UAAI,CAAC,aAAL,EAAoB;AAClB;AACD,OAT8B,CAUnC;;AAEG;;;AAAyB,UAAlB,UAAU,GAAG,KAAK,iBAAL,CAAuB,aAAvB,CAAqC,WAAhC;AAZO,kCAaG,aAAa,CAAC,UAAd,CAAyB,aAb5B;AAAA,UAaxB,UAbwB,yBAaxB,UAbwB;AAAA,UAaZ,WAbY,yBAaZ,WAbY;AAcnC;;AACwB,UAAhB,cAAgB;AAAQ;;AAC9B,UAD8B,aAC9B;;AAAE,UAAI,KAAK,mBAAL,MAA8B,KAAlC,EAAyC;AACvC,QAAA,cAAc,GAAG,UAAjB;AACA,QAAA,aAAa,GAAG,cAAc,GAAG,WAAjC;AACD,OAHD,MAGO;AACL,QAAA,aAAa,GAAG,KAAK,QAAL,CAAc,aAAd,CAA4B,WAA5B,GAA0C,UAA1D;AACA,QAAA,cAAc,GAAG,aAAa,GAAG,WAAjC;AACD;AACL;;;AACwB,UAAd,gBAAgB,GAAG,KAAK,cAAV;AACxB;;AAAyB,UAAf,eAAe,GAAG,KAAK,cAAL,GAAsB,UAAzB;;AAErB,UAAI,cAAc,GAAG,gBAArB,EAAuC;AAC3C;AACM,aAAK,cAAL,IAAuB,gBAAgB,GAAG,cAAnB,GAAoC,sBAA3D;AACD,OAHD,MAGO,IAAI,aAAa,GAAG,eAApB,EAAqC;AAChD;AACM,aAAK,cAAL,IAAuB,aAAa,GAAG,eAAhB,GAAkC,sBAAzD;AACD;AACF;AACH;;;;;;;;;;;;8CASyB;AACrB,UAAI,KAAK,iBAAT,EAA4B;AAC1B,aAAK,uBAAL,GAA+B,KAA/B;AACD,OAFD,MAEO;AACX;AACK,YADO,SAAS,GACX,KAAK,QAAL,CAAc,aAAd,CAA4B,WAA5B,GAA0C,KAAK,WAAL,CAAiB,aAAjB,CAA+B,WAA9E;;AAEC,YAAI,CAAC,SAAL,EAAgB;AACd,eAAK,cAAL,GAAsB,CAAtB;AACD;;AAED,YAAI,SAAS,KAAK,KAAK,uBAAvB,EAAgD;AAC9C,eAAK,kBAAL,CAAwB,YAAxB;AACD;;AAED,aAAK,uBAAL,GAA+B,SAA/B;AACD;AACF;AACH;;;;;;;;;;;;;8CAUyB;AACrB,UAAI,KAAK,iBAAT,EAA4B;AAC1B,aAAK,mBAAL,GAA2B,KAAK,oBAAL,GAA4B,IAAvD;AACD,OAFD,MAEO;AACX;AACM,aAAK,oBAAL,GAA4B,KAAK,cAAL,IAAuB,CAAnD;AACA,aAAK,mBAAL,GAA2B,KAAK,cAAL,IAAuB,KAAK,qBAAL,EAAlD;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACD;AACF;AACH;;;;;;;;;;;4CAQuB;AAAK;AACX,UAAP,eAAe,GAAG,KAAK,QAAL,CAAc,aAAd,CAA4B,WAAvC;AACjB;;AAAyB,UAAf,UAAU,GAAG,KAAK,iBAAL,CAAuB,aAAvB,CAAqC,WAAnC;AACrB,aAAQ,eAAe,GAAG,UAAnB,IAAkC,CAAzC;AACD;AACH;;;;;;;gDAE2B;AAAK;AACb,UAAT,YAAY,GAAG,KAAK,MAAL,IAAe,KAAK,MAAL,CAAY,MAA3B,GACjB,KAAK,MAAL,CAAY,OAAZ,GAAsB,KAAK,aAA3B,CADiB,GAC2B,IADjC;AAEnB;;AAAyB,UAAf,oBAAoB,GAAG,YAAY,GAAG,YAAY,CAAC,UAAb,CAAwB,aAA3B,GAA2C,IAA/D;;AAErB,UAAI,oBAAJ,EAA0B;AACxB,aAAK,OAAL,CAAa,cAAb,CAA4B,oBAA5B;AACD,OAFD,MAEO;AACL,aAAK,OAAL,CAAa,IAAb;AACD;AACF;AACH;;;;;;;oCAEe;AACX,WAAK,cAAL,CAAoB,IAApB;AACD;AACH;;;;;;;;;;0CAMwB,S,EAA4B,U,EAAuB;AAAA;;AAC3E;AACI;AACA,UAAI,UAAU,IAAI,UAAU,CAAC,MAAX,IAAqB,IAAnC,IAA2C,UAAU,CAAC,MAAX,KAAsB,CAArE,EAAwE;AACtE;AACD,OALsE,CAM3E;;;AAEI,WAAK,aAAL,GARuE,CAS3E;;;AAEI,MAAA,KAAK,CAAC,mBAAD,EAAsB,sBAAtB,CAAL,CACJ;AADI,OAEG,IAFH,CAEQ,SAAS,CAAC,KAAK,CAAC,KAAK,cAAN,EAAsB,KAAK,UAA3B,CAAN,CAFjB,EAGG,SAHH;AAGY;;;AAAC,kBAAA;AAAA,oCAC6B,OAAI,CAAC,aAAL,CAAmB,SAAnB,CAD7B;AAAA,YACF,iBADE,yBACF,iBADE;AAAA,YACiB,QADjB,yBACiB,QADjB,EAEjB;;;AAEQ,YAAI,QAAQ,KAAK,CAAb,IAAkB,QAAQ,IAAI,iBAAlC,EAAqD;AACnD,UAAA,OAAI,CAAC,aAAL;AACD;AACF,OAVH;AAWD;AACH;;;;;;;;;8BAMoB,Q,EAAgB;AAChC,UAAI,KAAK,iBAAT,EAA4B;AAC1B,eAAO;AAAC,UAAA,iBAAiB,EAAE,CAApB;AAAuB,UAAA,QAAQ,EAAE;AAAjC,SAAP;AACD;AACL;;;AACwB,UAAd,iBAAiB,GAAG,KAAK,qBAAL,EAAN;;AACpB,WAAK,eAAL,GAAuB,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,GAAL,CAAS,iBAAT,EAA4B,QAA5B,CAAZ,CAAvB,CANgC,CAOpC;AAEG;;AACC,WAAK,sBAAL,GAA8B,IAA9B;;AACA,WAAK,uBAAL;;AAEA,aAAO;AAAC,QAAA,iBAAiB,EAAjB,iBAAD;AAAoB,QAAA,QAAQ,EAAE,KAAK;AAAnC,OAAP;AACD;;;wBAzdgB;AAAa,aAAO,KAAK,cAAZ;AAA6B;AAC7D;;;;;sBAAoB,K,EAAa;AAC7B,MAAA,KAAK,GAAG,oBAAoB,CAAC,KAAD,CAA5B;;AAEA,UAAI,KAAK,cAAL,IAAuB,KAA3B,EAAkC;AAChC,aAAK,qBAAL,GAA6B,IAA7B;AACA,aAAK,cAAL,GAAsB,KAAtB;;AAEA,YAAI,KAAK,WAAT,EAAsB;AACpB,eAAK,WAAL,CAAiB,gBAAjB,CAAkC,KAAlC;AACD;AACF;AACF;;;wBAqLa;AACZ,aAAO,KAAK,WAAL;AAAgB;AAAG,WAAK,WAAL,CAAiB,eAApC,GAAuD,CAA9D;AACD;AACH;;;;;;sBAEiB,K,EAAa;AAC1B,UAAI,CAAC,KAAK,aAAL,CAAmB,KAAnB,CAAD,IAA8B,KAAK,UAAL,KAAoB,KAAlD,IAA2D,CAAC,KAAK,WAArE,EAAkF;AAChF;AACD;;AAED,WAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B;AACD;;;wBAyEiB;AAAa,aAAO,KAAK,eAAZ;AAA8B;AAC/D;;;;;sBAAqB,K,EAAa;AAC9B,WAAK,SAAL,CAAe,KAAf;AACD;;;;;;sCA9UF,6B,CAAS,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,qBAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAAA,C;;;;;uBACR;;;AAAC;;AAAmB,qBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAA+C;AAAA,IAAA,IAAA,EA7DnE;AA6DmE,GAA/C,EA5DpB;AAAA,IAAA,IAAA,EAFA;AAEA,GA4DoB,EA7DpB;AAAA,IAAA,IAAA,EAeM;AAfN,GA6DoB,EA9CG;AAAA,IAAA,IAAA,EAFN,cAEM;AAFQ,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA6HlB;AA7HkB,KAAA;AAER,GA8CH,EA6EQ;AAAA,IAAA,IAAA,EAzI5B;AAyI4B,GA7ER,EA3DpB;AAAA,IAAA,IAAA,EAkBM;AAlBN,GA2DoB,EAzCF;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA6HL;AA7HK,KAAA,EA6HG;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KA7HH;AAAA,GAyCE,CAAA;AAAA,CAAA;;AAoF4C,qBAAA,CAAA,cAAA,GAAA;AAEnD,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EArCZ;AAqCY,GAAA;AAFmD,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlC/D,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AA8df,EAAA,qBAAA,CAAA,+BAAA;AACF;;AA/gBE,EAAA,qBAAA,CAAA,SAAA,CAAA,MAAA;AACF;;AAAE,EAAA,qBAAA,CAAA,SAAA,CAAA,OAAA;AACF;;AAAE,EAAA,qBAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;AAAE,EAAA,qBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;AAAE,EAAA,qBAAA,CAAA,SAAA,CAAA,kBAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,eAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,qBAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,UAAA;AACF;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,uBAAA;AACF;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,mBAAA;AACF;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,oBAAA;AACF;;;;;;;AAKE,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,sBAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,WAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,mBAAA;AACF;;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;;AAKE,EAAA,qBAAA,CAAA,SAAA,CAAA,iBAAA;AAEF;;;;;AAeE,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,kBAAA;AACF;;;;;AAEE,EAAA,qBAAA,CAAA,SAAA,CAAA,YAAA;AACF;;;;;AACc,EAAA,qBAAA,CAAA,SAAA,CAAA,WAAA;AAA+C;;;;;AAC/C,EAAA,qBAAA,CAAA,SAAA,CAAA,kBAAA;AAAgD;;;;;AAChD,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA;AAAsC;;;;;AACtC,EAAA,qBAAA,CAAA,SAAA,CAAA,IAAA;AAAyC;;;;;AACzC,EAAA,qBAAA,CAAA,SAAA,CAAA,OAAA;AAAwB;;;;;;;AAKxB,EAAA,qBAAA,CAAA,SAAA,CAAA,SAAA;AAA6B;;AAC7B,EAAA,qBAAA,CAAA,SAAA,CAAA,cAAA;AAA0E;;;;;;;;AAatF,EAAA,qBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAA,KAAA,EAAA,CAAA,CAAA;AACF;AACE;;;;;;AAGY;;;;;AAGZ;;;ICtIoB,iB;;;;;AAAkD;;;;;;;;;AAStE,6BAAY,UAAZ,EACY,iBADZ,EAEY,aAFZ,EAGwB,GAHxB,EAIY,MAJZ,EAKY,QALZ,EAMD;AACwD,EAAA,aAPvD,EAO6E;AAAA;;AAAA;;AAC3E,iCAAM,UAAN,EAAkB,iBAAlB,EAAqC,aAArC,EAAoD,GAApD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,aAA3E;AAVM,YAAA,cAAA,GAA0B,KAA1B;AASqE;AAE5E;AACH;;;;;;;;;AAZA;;;;;kCAa0B,K,EAAoB;AAC1C,MAAA,KAAK,CAAC,cAAN;AACD;;;wBAjBgB;AAAK,aAAO,KAAK,cAAZ;AAA6B;AACrD;;;;;sBAAoB,K,EAAU;AAAI,WAAK,cAAL,GAAsB,qBAAqB,CAAC,KAAD,CAA3C;AAAqD;;;;EANvC,qB;;kCAF/C,yB,CAAS,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,iBAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAAA,C;;;;;;;oBACR,0B;;AAAC;;AAAmB,iBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACI;AAAA,IAAA,IAAA,EAzBxB;AAyBwB,GADJ,EAvBpB;AAAA,IAAA,IAAA,EAJA;AAIA,GAuBoB,EA1BpB;AAAA,IAAA,IAAA,EANM;AAMN,GA0BoB,EAhCG;AAAA,IAAA,IAAA,EADjB,cACiB;AADH,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA8CP;AA9CO,KAAA;AACG,GAgCH,EAaQ;AAAA,IAAA,IAAA,EApC5B;AAoC4B,GAbR,EAtBpB;AAAA,IAAA,IAAA,EAcM;AAdN,GAsBoB,EARF;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAyBL;AAzBK,KAAA,EAyBG;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KAzBH;AAAA,GAQE,CAAA;AAAA,CAAA;;AAiB4C,iBAAA,CAAA,cAAA,GAAA;AAC9C,EAAA,aAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAbjB;AAaiB,GAAA;AAD8C,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAX/D,C;;AAAC,IAAA,KAAA,EAAA;AAAa;;;;AAEf,EAAA,iBAAA,CAAA,SAAA,CAAA,cAAA;AACF;AACC;;;;;;;;;IAsCY,Y;;;;;AACb;;;;;;;;;AAOE,wBAAY,UAAZ,EACY,iBADZ,EAEY,aAFZ,EAGwB,GAHxB,EAIY,MAJZ,EAKY,QALZ,EAMD;AACwD,EAAA,aAPvD,EAO6E;AAAA;;AAAA,8BACrE,UADqE,EACzD,iBADyD,EACtC,aADsC,EACvB,GADuB,EAClB,MADkB,EACV,QADU,EACA,aADA;AAE5E;;;EAjB+B,iB;;6BAfjC,oB,CAAS,C,EAAA;AAAA,SAAC,KAAA,CAAA,IAAA,YAAA,EACC,MAAA,CAAA,iBAAA,CAAgB,MAAA,CAAA,UAAhB,CADD,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAFS,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAFS,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAFS,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,MAAA,CAFS,EAET,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,QAAA,CAFS,EAET,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAFS,CAAD;AAER,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8B;AAAA,G;AAAA,EAAA,SAAA,EAE9B,CAAA,CAAA,EAAA,gBAAA,C;AAAwB,EAAA,QAAC,EAAA,C;AAAA,EAAA,YACzB,EAAO,SAAG,yBAAH,CAAyB,EAAzB,EAAwC,GAAxC,EAAwC;AAAA,QAAA,EAAA,GAAA,CAAA,EAC/C;AAAa,MAAA,MAAE,CAAA,WAAF,CAAE,4CAAF,EAAwB,GAAA,CAAA,uBAAxB,EAAwB,oBAAxB,EAEb,GAAA,CAAA,mBAAA,MAAiB,KAFJ;AAEmC;AAAA,G;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,aAC1C,EAAA;AAD0C,G;AAE9C,EAAA,OAAS,EAAA;AAAA,IAAA,kBAAgB,EAAA,oBAAhB;AACT,IAAA,YAAA,EAAA;AADS,G;AACT,EAAA,QAAA,EAAoD,CAAA,MAAE,CAAA,0BAAF,C;AAA2B,EAAA,kBAC/E,EAAA,G;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAA4B,EAAE,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,aAAA,EAAA,MAAA,EAAgC,YAAhC,EAAgC,EAAhC,EAC/B,CAD+B,EAC/B,2BAD+B,EAC/B,kCAD+B,EAC/B,kBAD+B,EAC/B,CAD+B,EAC/B,mBAD+B,EAC/B,OAD+B,EAC/B,WAD+B,EAC/B,UAD+B,CAAA,EAC/B,CAAA,mBAAA,EAAA,EAAA,CAD+B,EAC/B,CAAA,CAAA,EAAA,mCAAA,CAD+B,EAC/B,CAAA,CAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,SAAA,CAD+B,EAC/B,CAAA,kBAAA,EAAA,EAAA,CAD+B,EAC/B,CAAA,MAAA,EAAA,SAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,mBAAA,CAD+B,EAC/B,CAAA,SAAA,EAAA,EAAA,CAD+B,EAC/B,CAAA,CAAA,EAAA,gBAAA,CAD+B,EAC/B,CAAA,aAAA,EAAA,MAAA,EAAA,YAAA,EAAA,EAAA,EAAA,CAAA,EAAA,2BAAA,EAAA,iCAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,CAD+B,EAC/B,CAAA,eAAA,EAAA,EAAA,CAD+B,C;AAC/B,EAAA,QAAA,EAAA,SAAA,qBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBACF,oC,EAAA,GAAA,CAAA,mB;;;;;;iBACG;;AAAC;;AAAmB,YAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAChB;AAAA,IAAA,IAAA,EAzEN;AAyEM,GADgB,EAvEtB;AAAA,IAAA,IAAA,EAJA;AAIA,GAuEsB,EA1EtB;AAAA,IAAA,IAAA,EANM;AAMN,GA0EsB,EAhFC;AAAA,IAAA,IAAA,EADjB,cACiB;AADH,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA4FP;AA5FO,KAAA;AACG,GAgFD,EAWM;AAAA,IAAA,IAAA,EAlF5B;AAkF4B,GAXN,EAtEtB;AAAA,IAAA,IAAA,EAcM;AAdN,GAsEsB,EAxDJ;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAuEL;AAvEK,KAAA,EAuEG;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KAvEH;AAAA,GAwDI,CAAA;AAAA,CAAA;;AAe0C,YAAA,CAAA,cAAA,GAAA;AACnD,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAfZ,eAeY;AAfG,IAAA,IAAA,EAAA,CAAC,kBAAD,EAAqB;AAAC,MAAA,WAAW,EAAE;AAAd,KAArB;AAeH,GAAA,CADmD;AAdA,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC/D,SAD+D;AACtD,IAAA,IAAA,EAAA,CAAC,SAAD,EAAY;AAAC,MAAA,MAAM,EAAE;AAAT,KAAZ;AADsD,GAAA,CAcA;AAbrB,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC1C,SAD0C;AACjC,IAAA,IAAA,EAAA,CAAC,kBAAD,EAAqB;AAAC,MAAA,MAAM,EAAE;AAAT,KAArB;AADiC,GAAA,CAaqB;AAZZ,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACnD,SADmD;AAC1C,IAAA,IAAA,EAAA,CAAC,SAAD,EAAY;AAAC,MAAA,MAAM,EAAE;AAAT,KAAZ;AAD0C,GAAA,CAYY;AAXrB,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC1C,SAD0C;AACjC,IAAA,IAAA,EAAA,CAAC,eAAD;AADiC,GAAA,CAWqB;AAV/B,EAAA,kBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAChC,SADgC;AACvB,IAAA,IAAA,EAAA,CAAC,mBAAD;AADuB,GAAA;AAU+B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAT1B,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAapD,EAAA,YAAA,CAAA,+BAAA;AACF;;AAnBE,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA;AACF;;AAAE,EAAA,YAAA,CAAA,SAAA,CAAA,OAAA;AACF;;AAAE,EAAA,YAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;AAAE,EAAA,YAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,YAAA,CAAA,SAAA,CAAA,cAAA;AACF;;AAAE,EAAA,YAAA,CAAA,SAAA,CAAA,kBAAA;AACF;AACE;;;;;;AAK6B;;;;;AAE1B;;;IChDiB,c;;;;;AAA+C;;;;;;;;;AA8BnE,0BAAY,UAAZ,EACwB,GADxB,EAEY,MAFZ,EAGY,iBAHZ,EAIY,aAJZ;AAKD;;;AAGyB,EAAA,QARxB,EASuD,aATvD,EAS6E;AAAA;;AAAA;;AAC3E,kCAAM,UAAN,EAAkB,iBAAlB,EAAqC,aAArC,EAAoD,GAApD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,aAA3E;AAfM,YAAA,cAAA,GAA0B,KAA1B;AACV;;;;AAEW,YAAA,KAAA,GAAsB,SAAtB;AAWoE;AAE5E;AACH;;;;;;;;;AAjBA;;;;oCAkByB,CAEtB,C,CADH;;AAEA;;;;;;yCACoB;AAAA;;AACpB;AACI;AACA,WAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB,CAAyB,SAAS,CAAC,IAAD,CAAlC,EAA0C,SAAS,CAAC,KAAK,UAAN,CAAnD,EAAsE,SAAtE;AAA+E;;;AAAC,kBAAA;AAC9E,QAAA,OAAI,CAAC,gBAAL;AACD,OAFD;;AAIA;AACD;AACH;;;;;;;;;qCAKmB,Q,EAAqB;AACpC,UAAI,CAAC,KAAK,MAAV,EAAkB;AAChB;AACD;AACL;;;AACwB,UAAd,KAAK,GAAG,KAAK,MAAL,CAAY,OAAZ,EAAM;;AAEpB,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,YAAI,KAAK,CAAC,CAAD,CAAL,CAAS,MAAb,EAAqB;AACnB,eAAK,aAAL,GAAqB,CAArB;;AACA,eAAK,kBAAL,CAAwB,YAAxB;;AACA;AACD;AACF,OAbmC,CAcxC;;;AAEI,WAAK,aAAL,GAAqB,CAAC,CAAtB;;AACA,WAAK,OAAL,CAAa,IAAb;AACD;;;wBAvEkB;AAAmB,aAAO,KAAK,gBAAZ;AAA+B;AACvE;;;;;sBAAsB,K,EAAmB;AACzC;AAAyB,UAAf,SAAS,GAAG,KAAK,WAAL,CAAiB,aAAjB,CAA+B,SAA5B;AACrB,MAAA,SAAS,CAAC,MAAV,0BAAmC,KAAK,eAAxC;;AAEA,UAAI,KAAJ,EAAW;AACT,QAAA,SAAS,CAAC,GAAV,0BAAgC,KAAhC;AACD;;AAED,WAAK,gBAAL,GAAwB,KAAxB;AACD;AACH;;;;;;;wBAImB;AAAK,aAAO,KAAK,cAAZ;AAA6B;AACrD;;;;;sBAAoB,K,EAAU;AAAI,WAAK,cAAL,GAAsB,qBAAqB,CAAC,KAAD,CAA3C;AAAqD;;;;EAxB1C,qB;;+BAF5C,sB,CAAS,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,cAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAAA,C;;;;;;;;;oBACR,0B;;AAAC;;AAAmB,cAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACC;AAAA,IAAA,IAAA,EArCrB;AAqCqB,GADD,EAnCpB;AAAA,IAAA,IAAA,EAbM,cAaN;AAboB,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAgFP;AAhFO,KAAA;AAapB,GAmCoB,EAgCQ;AAAA,IAAA,IAAA,EAhE5B;AAgE4B,GAhCR,EA/BpB;AAAA,IAAA,IAAA,EATA;AASA,GA+BoB,EAvCpB;AAAA,IAAA,IAAA,EAPM;AAON,GAuCoB,EA9CG;AAAA,IAAA,IAAA,EADjB,QACiB;AADT,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAsFD;AAtFC,KAAA;AACS,GA8CH,EAuCQ;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACf;AADe,KAAA,EACP;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KADO;AAAA,GAvCR,CAAA;AAAA,CAAA;;AAwC4C,cAAA,CAAA,cAAA,GAAA;AACjD,EAAA,eAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAjCd;AAiCc,GAAA,CADiD;AA/BhE,EAAA,aAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAcC;AAdD,GAAA,CA+BgE;AAhBhE,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAKC;AALD,GAAA;AAgBgE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXpD,C;;AAAC,IAAA,KAAA,EAAA;AAAa;;;;AAxB1B,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA;AACF;;;;;AAcE,EAAA,cAAA,CAAA,SAAA,CAAA,gBAAA;AACF;;;;;AAKE,EAAA,cAAA,CAAA,SAAA,CAAA,cAAA;AACF;;;;;AAEE,EAAA,cAAA,CAAA,SAAA,CAAA,KAAA;AACF;AACC;;;;;;IA2EY,S;;;;;AACb;;;;;;;;;AAOE,qBAAY,UAAZ,EACc,GADd,EAEE,MAFF,EAGE,iBAHF,EAIE,aAJF;AAKD;;;AAGe,EAAA,QARd,EAS6C,aAT7C,EASmE;AAAA;;AAAA,+BAC3D,UAD2D,EAC/C,GAD+C,EAC1C,MAD0C,EAClC,iBADkC,EACf,aADe,EACA,QADA,EACU,aADV;AAElE;;;EAnB4B,c;;0BAlB9B,iB,CAAA,C,EAAS;AAAA,SAAC,KAAA,CAAA,IAAA,SAAA,EACT,MAAU,CAAA,iBAAV,CAA6B,MAAA,CAAA,UAA7B,CADS,EAET,MAAQ,CAAA,iBAAR,CAAU,MAAA,CAAA,cAAV,EAAmC,CAAnC,CAFS,EAGT,MAAM,CAAE,iBAAR,CAAiB,MAAA,CAAA,MAAjB,CAHS,EAIT,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,iBAAA,CAJS,EAIT,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAJS,EAIT,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,QAAA,EAAA,CAAA,CAJS,EAIT,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAJS,CAAD;AAIR,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+B,EAAA,YAAA,EAAA,SAAA,sBAAA,CAEzB,EAFyB,EAEzB,GAFyB,EAG7B;AAAA,QAAO,EAAE,GAAA,CAAT,EAAS;aAAgC,W,CAAA,4C,EACzC,GAAA,CAAA,uB,EAAsD,oB,EAAyB,GAAA,CAAA,mBAAA,MAC/E,K,EAAA,a,EAA4B,GAAE,CAAA,KAAF,KAAE,MAAF,IAAE,GAAA,CAAA,KAAA,KAAgC,Q,EAAA,Y,EAC9D,GAAA,CAAA,KAAA,KAAqB,Q,EAAE,U,EAAA,GAAA,CAAA,KAAA,KAAA,M;;;;AACvB,IAAA,KAAA,EAAA;;AAAA,EAAA,QAAsB,EAAA,CAAA,cAAA,EAAoB,WAApB,C;AAAoB,EAAA,QAC1C,EAAA,CAAA,MAAA,CAAA,0BAAA,C;AAAsC,EAAA,KAAA,EAAA,G;AAAA,EAAA,kBACvC,EAAA,G;AACD,EAAA,KAAA,EAAA,E;AAAe,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAiB,CAAC,CAAA,aAAA,EAAI,MAAJ,EAAI,YAAJ,EAAI,EAAJ,EAAI,CAAJ,EAAI,2BAAJ,EAAI,kCAAJ,EAEhB,kBAFgB,EAEQ,CAFR,EAEQ,mBAFR,EAEe,OAFf,EAEe,WAFf,EAEe,UAFf,CAAD,EAEgB,CAAA,mBAAA,EAAA,EAAA,CAFhB,EAEgB,CAAA,CAAA,EAAA,mCAAA,CAFhB,EAEgB,CAAA,CAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,SAAA,CAFhB,EAEgB,CAAA,kBAAA,EAAA,EAAA,CAFhB,EAEgB,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,mBAAA,CAFhB,EAEgB,CAAA,SAAA,EAAA,EAAA,CAFhB,EAEgB,CAAA,CAAA,EAAA,eAAA,CAFhB,EAEgB,CAAA,aAAA,EAAA,MAAA,EAAA,YAAA,EAAA,EAAA,EAAA,CAAA,EAAA,2BAAA,EAAA,iCAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,CAFhB,EAEgB,CAAA,eAAA,EAAA,EAAA,CAFhB,C;AAEgB,EAAA,QAAA,EAAA,SAAA,kBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WACjD,uvF;AAAA,EAAA,aAAA,EAAA;;AACI;;AAAmB,SAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACb;AAAA,IAAA,IAAA,EA/IT;AA+IS,GADa,EA7ItB;AAAA,IAAA,IAAA,EAbM,cAaN;AAboB,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAmKjB;AAnKiB,KAAA;AAapB,GA6IsB,EASJ;AAAA,IAAA,IAAA,EAnJlB;AAmJkB,GATI,EAzItB;AAAA,IAAA,IAAA,EATA;AASA,GAyIsB,EAjJtB;AAAA,IAAA,IAAA,EAPM;AAON,GAiJsB,EAxJC;AAAA,IAAA,IAAA,EADjB,QACiB;AADT,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAyKX;AAzKW,KAAA;AACS,GAwJD,EAgBJ;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACf;AADe,KAAA,EACP;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KADO;AAAA,GAhBI,CAAA;AAAA,CAAA;;AAiBgC,SAAA,CAAA,cAAA,GAAA;AAC5C,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAjBT,eAiBS;AAjBM,IAAA,IAAA,EAAA,CAAC,UAAU;AAAA;;;AAAC;AAAA,aAAM,UAAN;AAAA,KAAD,CAAX,EAA+B;AAAC,MAAA,WAAW,EAAE;AAAd,KAA/B;AAiBN,GAAA,CAD4C;AAhBmB,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACxE,SADwE;AAC/D,IAAA,IAAA,EAAA,CAAC,SAAD,EAAY;AAAC,MAAA,MAAM,EAAE;AAAT,KAAZ;AAD+D,GAAA,CAgBnB;AAfX,EAAA,iBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC1C,SAD0C;AACjC,IAAA,IAAA,EAAA,CAAC,kBAAD,EAAqB;AAAC,MAAA,MAAM,EAAE;AAAT,KAArB;AADiC,GAAA,CAeW;AAdF,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACnD,SADmD;AAC1C,IAAA,IAAA,EAAA,CAAC,SAAD,EAAY;AAAC,MAAA,MAAM,EAAE;AAAT,KAAZ;AAD0C,GAAA,CAcE;AAbX,EAAA,cAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAC1C,SAD0C;AACjC,IAAA,IAAA,EAAA,CAAC,eAAD;AADiC,GAAA,CAaW;AAZrB,EAAA,kBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAChC,SADgC;AACvB,IAAA,IAAA,EAAA,CAAC,mBAAD;AADuB,GAAA;AAYqB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXhB,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAepD,EAAA,SAAA,CAAA,+BAAA;AACF;;AArBE,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA;AACF;;AAAE,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA;AACF;;AAAE,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA;AACF;;AAAE,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA;AACF;;AAAE,EAAA,SAAA,CAAA,SAAA,CAAA,kBAAA;AACF,C,CACC;;;IAiBK,mB;;;AACN;;;AAAiB,IAAX,oBAAoB,GAElB,aAAa,CAAC,kBAAkB,CAAC,aAAa,CAAC,mBAAD,CAAd,CAAnB,CAFJ;AAGjB;;;AAEG;;;IAEU,e;;;;;AAA+C;;;;;;;;AAiC1D,2BACY,UADZ,EAC+C,UAD/C,EAEmD,mBAFnD,EAG2B,QAH3B,EAGqD,aAHrD,EAI+C,aAJ/C,EAIqE;AAAA;;AAAA;;AACnE;AAJU,YAAA,UAAA,GAAA,UAAA;AAAmC,YAAA,UAAA,GAAA,UAAA;AAEM,YAAA,aAAA,GAAA,aAAA;AAA4B;;;;AAhCvE,YAAA,SAAA,GAAqB,KAArB;AAoCR,YAAK,YAAL,GAAoB,mBAAmB,IAAI,EAA3C;AACA,YAAK,QAAL,GAAgB,QAAQ,CAAC,QAAD,CAAR,IAAsB,CAAtC;;AAEA,QAAI,aAAa,KAAK,gBAAtB,EAAwC;AACtC,cAAK,YAAL,CAAkB,SAAlB,GAA8B;AAAC,QAAA,aAAa,EAAE,CAAhB;AAAmB,QAAA,YAAY,EAAE;AAAjC,OAA9B;AACD;;AAED,IAAA,aAAa,CAAC,OAAd,CAAsB,UAAtB;;AAVmE;AAWpE;AACH;;;;;;;;;AAjBA;;;4BAkBO;AACH,WAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;AACD;AACH;;;;;;kCACa;AACT,WAAK,aAAL,CAAmB,cAAnB,CAAkC,KAAK,UAAvC;AACD;;;wBAhDS;AAAc,aAAO,KAAK,SAAZ;AAAwB;AAClD;;;;;sBAAa,K,EAAc;AACvB,UAAI,KAAK,KAAK,KAAK,SAAnB,EAA8B;AAC5B,aAAK,SAAL,GAAiB,KAAjB;;AACA,aAAK,UAAL,CAAgB,gBAAhB,CAAiC,KAAK,UAAtC;AACD;AACF;AACH;;;;;;;;wBAaoB;AAChB,aAAO,KAAK,QAAL,IAAiB,KAAK,aAAtB,IAAuC,KAAK,UAAL,CAAgB,aAAvD,IACL,CAAC,CAAC,KAAK,YAAL,CAAkB,QADtB;AAED;;;;EA/BkC,oB;;gCAFpC,uB,CAAS,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,eAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,cAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,yBAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,YAAA,CAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAAA,C;;;;;;;oBACR,0B;;AAAC;;AAAmB,eAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CACE;AAAA,IAAA,IAAA,EAkCE;AAlCF,GADF,EAmCsB;AAAA,IAAA,IAAA,EAjN1C;AAiN0C,GAnCtB,EA7KpB;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAiNK;AAjNL,KAAA,EAiNa;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,yBAAD;AAAV,KAjNb;AAAA,GA6KoB,EAoCsC;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACrD,SADqD;AAC5C,MAAA,IAAA,EAAA,CAAC,UAAD;AAD4C,KAAA;AAAA,GApCtC,EAqCc;AAAA,IAAA,IAAA,EA1L5B;AA0L4B,GArCd,EArJE;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA2LjB;AA3LiB,KAAA,EA2LT;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KA3LS;AAAA,GAqJF,CAAA;AAAA,CAAA;;AAsCoC,eAAA,CAAA,cAAA,GAAA;AAGtD,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAjCD;AAiCC,GAAA;AAHsD,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7BvD,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAkDf,EAAA,eAAA,CAAA,0BAAA;AACF;;AAAE,EAAA,eAAA,CAAA,+BAAA;AACF;;;;;;AAxDE,EAAA,eAAA,CAAA,SAAA,CAAA,SAAA;AACF;;;;;;;;AAiBE,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA;AACF;;;;;AAWM,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA;AAAmC;;AAAC,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA;AAA8B;;;;;AAEzB,EAAA,eAAA,CAAA,SAAA,CAAA,aAAA;AAAoC;AAClF;;;;;IA0CY,U;;;;;AAAqC;;;;;;;;;;AAIhD,sBACE,SADF,EACwB,UADxB,EACgD,MADhD,EAEE,QAFF,EAGiD,mBAHjD,EAIyB,QAJzB,EAI2C,YAJ3C,EAK6C,aAL7C,EAKmE;AAAA;;AAAA;;AACjE,kCAAM,SAAN,EAAiB,UAAjB,EAA6B,mBAA7B,EAAkD,QAAlD,EAA4D,YAA5D,EAA0E,aAA1E;AACA,YAAK,cAAL,GAAsB,IAAI,cAAJ,kCAAyB,MAAzB,EAAiC,UAAjC,EAA6C,QAA7C,CAAtB;;AACA,YAAK,cAAL,CAAoB,kBAApB,CAAuC,UAAU,CAAC,aAAlD;;AAHiE;AAIlE;AACH;;;;;;;kCACa;AACT;;AACA,WAAK,cAAL,CAAoB,oBAApB;AACD;;;;EAlB6B,e;;2BAb/B,kB,CAAA,C,EAAS;AAAA,SAAC,KAAA,CAAA,IAAA,UAAA,EACT,MAAU,CAAA,iBAAV,CAAU,SAAV,CADS,EAC+B,MAAA,CAAA,iBAAA,CAC9B,MAAA,CAAA,UAD8B,CAD/B,EAEa,MAAA,CAAA,iBAAA,CACb,MAAY,CAAA,MADC,CAFb,EAGY,MAAe,CAAE,iBAAjB,CAA4B,MAAA,CAAA,QAA5B,CAHZ,EAIH,MAAA,CAAA,iBAAA,CACJ,yBADI,EACK,CADL,CAJG,EAKE,MAAA,CAAA,iBAAA,CAAkC,UAAlC,CALF,EAMP,MAAA,CAAA,iBAAA,CAAuB,MAAA,CAAA,YAAvB,CANO,EAMwC,MAAA,CAAA,iBAAA,CAC/C,qBAD+C,EACb,CADa,CANxC,CAAD;AAO4B,C;;WAClC,I,GAAA,MAAA,CAAA,iBAAA,CAA6B;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,SAC7B,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAA4B,EAA5B,CAAA,EAA4B,CAAA,EAAA,EAAU,YAAV,EAAU,EAAV,CAA5B,CAD6B;AAE7B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,cAAA,EAAgC,qBAAhC,CAF6B;AAEW,EAAA,QACzC,EAAA,CAH8B;AAG9B,EAAA,YACF,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;GAJgC;;;;;GAAA;0BAAA;oBAK5B,0B;AAL4B,CAA7B,C;AAKE;;AAAmB,UAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAoC;AAAA,IAAA,IAAA,EAK9C;AAL8C,GAApC,EAKG;AAAA,IAAA,IAAA,EAnQ1B;AAmQ0B,GALH,EA7PvB;AAAA,IAAA,IAAA,EAGA;AAHA,GA6PuB,EAzPvB;AAAA,IAAA,IAAA,EAhBM;AAgBN,GAyPuB,EAzQL;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAgRf;AAhRe,KAAA,EAgRP;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,yBAAD;AAAV,KAhRO;AAAA,GAyQK,EAOiC;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACrD,SADqD;AAC5C,MAAA,IAAA,EAAA,CAAC,UAAD;AAD4C,KAAA;AAAA,GAPjC,EAQS;AAAA,IAAA,IAAA,EA7O1B;AA6O0B,GART,EArOD;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EA8OnB;AA9OmB,KAAA,EA8OX;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,qBAAD;AAAV,KA9OW;AAAA,GAqOC,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS8B,C;;AAAC,IAAA,KAAA,EAAA;AAAa;;;;;AAPnE,EAAA,UAAA,CAAA,SAAA,CAAA,cAAA;AACF;AACE;;;;;;;IC3NW,a;;;;4BAjCZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,aAAO,CAAE,IAAT,GAAS,MAAA,CAAA,gBAAA,CACP;AAAA,EAAA,OAAY,EAAA,SAAA,qBAAA,CACG,CADH,EACG;AAAA,WAAA,KAAA,CAAA,IACf,aADe,GAAA;AACH,GAFZ;AAEY,EAAA,OAAA,EAAA,CAAA,CACG,YADH,EAEZ,eAFY,EAGZ,YAHY,EAGF,eAHE,E,eAAA,E,UAAA,CAAA,E,eAAA;AAFZ,CADO,CAAT;;CASA,YAAA;AAAA,GAAO,OAAE,SAAF,KAAE,WAAF,IACL,SADF,KACiB,MAAA,CAAA,kBAAA,CACJ,aADI,EACJ;AAAA,IAAA,YACA,EAAA,wBAAA;AAAA,aACX,CAAA,WAAA,EACA,WADA,EACS,MADT,EAEA,SAFA,EAGA,kBAHA,EAGa,SAHb,EAID,UAJC,EAKF,UALE,EAMA,gBANA,EAMW,YANX,EAOA,aAPA,CADW;AAQA,KATA;AASA,IAAA,OAAA,EAAA,mBACL;AAAA,aAAA,CAAA,YAAA,EACG,eADH,EAEY,YAFZ,EAGN,eAHM,EAGG,eAHH,EAII,UAJJ,CAAA;AAII,KAdC;AAcD,IAAA,OACV,EAAA,mBAAU;AAAA,aAAA,CAAA,eAAA,EACM,WADN,EAEV,WAFU,E,MAAA,EAGV,SAHU,EAIX,UAJW,EAKb,aALa,CAAA;AAKb;AApBc,GADI,CADjB;AAsBD,C;;;;;;;;;;;;;;AACI,C;AAAE;;;;;;AAC6M;;;;;;AC3DpN;;;;;AAIA,SAAA,eAAA,EAAA,aAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,WAAA,EAAA,YAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,aAAA,EAAA,uBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,+BAAA,IAAA,0CAAA,EAAA,qBAAA,IAAA,0CAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nexport const MAT_TAB_GROUP = new InjectionToken<any>('MAT_TAB_GROUP');\n\n@Component({\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel)\n  get templateLabel(): MatTabLabel { return this._templateLabel; }\n  set templateLabel(value: MatTabLabel) {\n    // Only update the templateLabel via query if there is actually\n    // a MatTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n  private _templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    @Optional() @Inject(MAT_TAB_GROUP) public _closestTabGroup?: any) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody,\n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    @Inject(DOCUMENT) _document?: any) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number | null;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(origin: number): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  disablePagination?: boolean;\n\n  /**\n   * Whether the ink bar should fit its width to the size of the tab label content.\n   * This only applies to the MDC-based tabs.\n   */\n  fitInkBarToContent?: boolean;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {merge, Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MAT_TAB_GROUP, MatTab} from './tab';\nimport {MAT_TABS_CONFIG, MatTabsConfig} from './tab-config';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  /**\n   * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n   * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n   */\n  abstract _allTabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** All of the tabs that belong to the group. */\n  _tabs: QueryList<MatTab> = new QueryList<MatTab>();\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n        defaultConfig.disablePagination : false;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Listens to changes in all of the tabs. */\n  private _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes\n      .pipe(startWith(this._allTabs))\n      .subscribe((tabs: QueryList<MatTab>) => {\n        this._tabs.reset(tabs.filter(tab => {\n          // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n          // once it becomes a required parameter in MatTab.\n          return !tab._closestTabGroup || tab._closestTabGroup === this;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  static ngAcceptInputType_dynamicHeight: BooleanInput;\n  static ngAcceptInputType_animationDuration: NumberInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  inputs: ['color', 'disableRipple'],\n  providers: [{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab, {descendants: true}) _allTabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader') _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n  Input,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive()\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean = false;\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate the element dimensions.\n      Promise.resolve().then(realign);\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n          this._itemSelected(event);\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled =\n          this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection, mouseEvent?: MouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    if (this.disablePagination) {\n      return {maxScrollDistance: 0, distance: 0};\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper, {descendants: false}) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive()\n// tslint:disable-next-line:class-name\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements OnDestroy, CanDisable,\n  CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n\n    _focusMonitor.monitor(elementRef);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link mat-focus-indicator',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {_MAT_INK_BAR_POSITIONER_FACTORY as Éµangular_material_src_material_tabs_tabs_a} from './ink-bar';\nexport {MatPaginatedTabHeader as Éµangular_material_src_material_tabs_tabs_b} from './paginated-tab-header';"]},"metadata":{},"sourceType":"module"}