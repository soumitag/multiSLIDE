{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nvar _c0 = [\"mat-button\", \"\"];\nvar _c1 = [\"*\"];\nvar DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\n\nvar BUTTON_HOST_ATTRIBUTES = ['mat-button', 'mat-flat-button', 'mat-icon-button', 'mat-raised-button', 'mat-stroked-button', 'mat-mini-fab', 'mat-fab']; // Boilerplate for applying mixins to MatButton.\n\n/**\n * \\@docs-private\n */\n\nvar MatButtonBase =\n/**\n * @param {?} _elementRef\n */\nfunction MatButtonBase(_elementRef) {\n  _classCallCheck(this, MatButtonBase);\n\n  this._elementRef = _elementRef;\n};\n\nif (false) {\n  /** @type {?} */\n  MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\n\n\nvar _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\n\n\nvar MatButton = /*#__PURE__*/function (_MatButtonMixinBase2) {\n  _inherits(MatButton, _MatButtonMixinBase2);\n\n  var _super = _createSuper(MatButton);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} _focusMonitor\n   * @param {?} _animationMode\n   */\n  function MatButton(elementRef, _focusMonitor, _animationMode) {\n    var _this;\n\n    _classCallCheck(this, MatButton);\n\n    _this = _super.call(this, elementRef);\n    _this._focusMonitor = _focusMonitor;\n    _this._animationMode = _animationMode;\n    /**\n     * Whether the button is round.\n     */\n\n    _this.isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n    /**\n     * Whether the button is icon button.\n     */\n\n    _this.isIconButton = _this._hasHostAttributes('mat-icon-button'); // For each of the variant selectors that is present in the button's host\n    // attributes, add the correct corresponding class.\n\n    var _iterator = _createForOfIteratorHelper(BUTTON_HOST_ATTRIBUTES),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var attr = _step.value;\n\n        if (_this._hasHostAttributes(attr)) {\n          /** @type {?} */\n          _this._getHostElement().classList.add(attr);\n        }\n      } // Add a class that applies to all buttons. This makes it easier to target if somebody\n      // wants to target all Material buttons. We do it here rather than `host` to ensure that\n      // the class is applied to derived classes.\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    elementRef.nativeElement.classList.add('mat-button-base');\n\n    _this._focusMonitor.monitor(_this._elementRef, true);\n\n    if (_this.isRoundButton) {\n      _this.color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n\n    return _this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MatButton, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'program';\n      var options = arguments.length > 1 ? arguments[1] : undefined;\n\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isRippleDisabled\",\n    value: function _isRippleDisabled() {\n      return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hasHostAttributes\",\n    value: function _hasHostAttributes() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, attributes = new Array(_len), _key = 0; _key < _len; _key++) {\n        attributes[_key] = arguments[_key];\n      }\n\n      return attributes.some(\n      /**\n      * @param {?} attribute\n      * @return {?}\n      */\n      function (attribute) {\n        return _this2._getHostElement().hasAttribute(attribute);\n      });\n    }\n  }]);\n\n  return MatButton;\n}(_MatButtonMixinBase);\n\nMatButton.ɵfac = function MatButton_Factory(t) {\n  return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatButton,\n  selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]],\n  viewQuery: function MatButton_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-focus-indicator\"],\n  hostVars: 3,\n  hostBindings: function MatButton_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    color: \"color\"\n  },\n  exportAs: [\"matButton\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]],\n  template: function MatButton_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(2, \"div\", 1);\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    }\n  },\n  directives: [ɵngcc2.MatRipple],\n  styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatButton.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FocusMonitor\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatButton.propDecorators = {\n  ripple: [{\n    type: ViewChild,\n    args: [MatRipple]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatButton, [{\n    type: Component,\n    args: [{\n      selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\",\n      exportAs: 'matButton',\n      host: {\n        '[attr.disabled]': 'disabled || null',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        'class': 'mat-focus-indicator'\n      },\n      template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n      inputs: ['disabled', 'disableRipple', 'color'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  MatButton.ngAcceptInputType_disabled;\n  /** @type {?} */\n\n  MatButton.ngAcceptInputType_disableRipple;\n  /**\n   * Whether the button is round.\n   * @type {?}\n   */\n\n  MatButton.prototype.isRoundButton;\n  /**\n   * Whether the button is icon button.\n   * @type {?}\n   */\n\n  MatButton.prototype.isIconButton;\n  /**\n   * Reference to the MatRipple instance of the button.\n   * @type {?}\n   */\n\n  MatButton.prototype.ripple;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MatButton.prototype._focusMonitor;\n  /** @type {?} */\n\n  MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\n\n\nvar MatAnchor = /*#__PURE__*/function (_MatButton) {\n  _inherits(MatAnchor, _MatButton);\n\n  var _super2 = _createSuper(MatAnchor);\n\n  /**\n   * @param {?} focusMonitor\n   * @param {?} elementRef\n   * @param {?} animationMode\n   */\n  function MatAnchor(focusMonitor, elementRef, animationMode) {\n    _classCallCheck(this, MatAnchor);\n\n    return _super2.call(this, elementRef, focusMonitor, animationMode);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _createClass(MatAnchor, [{\n    key: \"_haltDisabledEvents\",\n    value: function _haltDisabledEvents(event) {\n      // A disabled button shouldn't apply any actions\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    }\n  }]);\n\n  return MatAnchor;\n}(MatButton);\n\nMatAnchor.ɵfac = function MatAnchor_Factory(t) {\n  return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatAnchor,\n  selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]],\n  hostAttrs: [1, \"mat-focus-indicator\"],\n  hostVars: 5,\n  hostBindings: function MatAnchor_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) {\n        return ctx._haltDisabledEvents($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    color: \"color\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matButton\", \"matAnchor\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]],\n  template: function MatAnchor_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(2, \"div\", 1);\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    }\n  },\n  directives: [ɵngcc2.MatRipple],\n  styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatAnchor.ctorParameters = function () {\n  return [{\n    type: FocusMonitor\n  }, {\n    type: ElementRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatAnchor.propDecorators = {\n  tabIndex: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n    type: Component,\n    args: [{\n      selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\",\n      exportAs: 'matButton, matAnchor',\n      host: {\n        // Note that we ignore the user-specified tabindex when it's disabled for\n        // consistency with the `mat-button` applied on native buttons where even\n        // though they have an index, they're not tabbable.\n        '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_haltDisabledEvents($event)',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        'class': 'mat-focus-indicator'\n      },\n      inputs: ['disabled', 'disableRipple', 'color'],\n      template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    tabIndex: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Tabindex of the button.\n   * @type {?}\n   */\n  MatAnchor.prototype.tabIndex;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatButtonModule = function MatButtonModule() {\n  _classCallCheck(this, MatButtonModule);\n};\n\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatButtonModule\n});\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatButtonModule_Factory(t) {\n    return new (t || MatButtonModule)();\n  },\n  imports: [[MatRippleModule, MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, {\n    declarations: function declarations() {\n      return [MatButton, MatAnchor];\n    },\n    imports: function imports() {\n      return [MatRippleModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatButton, MatAnchor, MatCommonModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, MatCommonModule],\n      exports: [MatButton, MatAnchor, MatCommonModule],\n      declarations: [MatButton, MatAnchor]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatAnchor, MatButton, MatButtonModule };","map":{"version":3,"sources":["../../../../../material/button/button.ts","../../../../../material/button/button-module.ts","../../../../../material/button/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  Input,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  CanColorCtor,\n  CanDisableCtor,\n  CanDisableRippleCtor,\n  MatRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n  'mat-button',\n  'mat-flat-button',\n  'mat-icon-button',\n  'mat-raised-button',\n  'mat-stroked-button',\n  'mat-mini-fab',\n  'mat-fab',\n];\n\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatButtonMixinBase: CanDisableRippleCtor & CanDisableCtor & CanColorCtor &\n    typeof MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n\n/**\n * Material design button.\n */\n@Component({\n  selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n  exportAs: 'matButton',\n  host: {\n    '[attr.disabled]': 'disabled || null',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    'class': 'mat-focus-indicator',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends _MatButtonMixinBase\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple, FocusableOption {\n\n  /** Whether the button is round. */\n  readonly isRoundButton: boolean = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n\n  /** Whether the button is icon button. */\n  readonly isIconButton: boolean = this._hasHostAttributes('mat-icon-button');\n\n  /** Reference to the MatRipple instance of the button. */\n  @ViewChild(MatRipple) ripple: MatRipple;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode: string) {\n    super(elementRef);\n\n    // For each of the variant selectors that is present in the button's host\n    // attributes, add the correct corresponding class.\n    for (const attr of BUTTON_HOST_ATTRIBUTES) {\n      if (this._hasHostAttributes(attr)) {\n        (this._getHostElement() as HTMLElement).classList.add(attr);\n      }\n    }\n\n    // Add a class that applies to all buttons. This makes it easier to target if somebody\n    // wants to target all Material buttons. We do it here rather than `host` to ensure that\n    // the class is applied to derived classes.\n    elementRef.nativeElement.classList.add('mat-button-base');\n\n    this._focusMonitor.monitor(this._elementRef, true);\n\n    if (this.isRoundButton) {\n      this.color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the button. */\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n  }\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Gets whether the button has one of the given attributes. */\n  _hasHostAttributes(...attributes: string[]) {\n    return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n/**\n * Material design anchor button.\n */\n@Component({\n  selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n  exportAs: 'matButton, matAnchor',\n  host: {\n    // Note that we ignore the user-specified tabindex when it's disabled for\n    // consistency with the `mat-button` applied on native buttons where even\n    // though they have an index, they're not tabbable.\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    'class': 'mat-focus-indicator',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatButton {\n  /** Tabindex of the button. */\n  @Input() tabIndex: number;\n\n  constructor(\n    focusMonitor: FocusMonitor,\n    elementRef: ElementRef,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode: string) {\n    super(elementRef, focusMonitor, animationMode);\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatAnchor, MatButton} from './button';\n\n\n@NgModule({\n  imports: [\n    MatRippleModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatButton,\n    MatAnchor,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatButton,\n    MatAnchor,\n  ],\n})\nexport class MatButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}