{"ast":null,"code":"import _classCallCheck from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/soumitaghosh/Documents/GitHub/multi-slide/src/ms-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar CdkStepHeader = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   */\n  function CdkStepHeader(_elementRef) {\n    _classCallCheck(this, CdkStepHeader);\n\n    this._elementRef = _elementRef;\n  }\n  /**\n   * Focuses the step header.\n   * @return {?}\n   */\n\n\n  _createClass(CdkStepHeader, [{\n    key: \"focus\",\n    value: function focus() {\n      this._elementRef.nativeElement.focus();\n    }\n  }]);\n\n  return CdkStepHeader;\n}();\n\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) {\n  return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepHeader,\n  selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n  hostAttrs: [\"role\", \"tab\"]\n});\n/** @nocollapse */\n\nCdkStepHeader.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepHeader]',\n      host: {\n        'role': 'tab'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @protected\n   */\n  CdkStepHeader.prototype._elementRef;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar CdkStepLabel =\n/**\n * @param {?} template\n */\nfunction CdkStepLabel(\n/** @docs-private */\ntemplate) {\n  _classCallCheck(this, CdkStepLabel);\n\n  this.template = template;\n};\n\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) {\n  return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepLabel,\n  selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n});\n/** @nocollapse */\n\nCdkStepLabel.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepLabel]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * \\@docs-private\n   * @type {?}\n   */\n  CdkStepLabel.prototype.template;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\n\n\nvar nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\n\nvar StepperSelectionEvent = function StepperSelectionEvent() {\n  _classCallCheck(this, StepperSelectionEvent);\n};\n\nif (false) {\n  /**\n   * Index of the step now selected.\n   * @type {?}\n   */\n  StepperSelectionEvent.prototype.selectedIndex;\n  /**\n   * Index of the step previously selected.\n   * @type {?}\n   */\n\n  StepperSelectionEvent.prototype.previouslySelectedIndex;\n  /**\n   * The step instance now selected.\n   * @type {?}\n   */\n\n  StepperSelectionEvent.prototype.selectedStep;\n  /**\n   * The step instance previously selected.\n   * @type {?}\n   */\n\n  StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\n\n\nvar STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\n\nvar STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\n\nvar MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\n\nfunction StepperOptions() {}\n\nif (false) {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   * @type {?|undefined}\n   */\n  StepperOptions.prototype.showError;\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   * @type {?|undefined}\n   */\n\n  StepperOptions.prototype.displayDefaultIndicatorType;\n}\n\nvar CdkStep = /*#__PURE__*/function () {\n  /**\n   * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n   * @param {?} _stepper\n   * @param {?=} stepperOptions\n   */\n  function CdkStep(_stepper, stepperOptions) {\n    _classCallCheck(this, CdkStep);\n\n    this._stepper = _stepper;\n    /**\n     * Whether user has seen the expanded step content or not.\n     */\n\n    this.interacted = false;\n    this._editable = true;\n    this._optional = false;\n    this._completedOverride = null;\n    this._customError = null;\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n  /**\n   * Whether the user can return to this step once it has been marked as completed.\n   * @return {?}\n   */\n\n\n  _createClass(CdkStep, [{\n    key: \"_getDefaultCompleted\",\n\n    /**\n     * @private\n     * @return {?}\n     */\n    value: function _getDefaultCompleted() {\n      return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getDefaultError\",\n\n    /**\n     * @private\n     * @return {?}\n     */\n    value: function _getDefaultError() {\n      return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.interacted = false;\n\n      if (this._completedOverride != null) {\n        this._completedOverride = false;\n      }\n\n      if (this._customError != null) {\n        this._customError = false;\n      }\n\n      if (this.stepControl) {\n        this.stepControl.reset();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      // Since basically all inputs of the MatStep get proxied through the view down to the\n      // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n      this._stepper._stateChanged();\n    }\n  }, {\n    key: \"editable\",\n    get: function get() {\n      return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n\n  }, {\n    key: \"optional\",\n    get: function get() {\n      return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n\n  }, {\n    key: \"completed\",\n    get: function get() {\n      return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._completedOverride = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"hasError\",\n    get: function get() {\n      return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._customError = coerceBooleanProperty(value);\n    }\n  }]);\n\n  return CdkStep;\n}();\n\nCdkStep.ɵfac = function CdkStep_Factory(t) {\n  return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(\n  /**\n  * @return {?}\n  */\n  function () {\n    return CdkStepper;\n  })), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8));\n};\n\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CdkStep,\n  selectors: [[\"cdk-step\"]],\n  contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    }\n  },\n  viewQuery: function CdkStep_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  inputs: {\n    editable: \"editable\",\n    optional: \"optional\",\n    completed: \"completed\",\n    hasError: \"hasError\",\n    stepControl: \"stepControl\",\n    label: \"label\",\n    errorMessage: \"errorMessage\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    state: \"state\"\n  },\n  exportAs: [\"cdkStep\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function CdkStep_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nCdkStep.ctorParameters = function () {\n  return [{\n    type: CdkStepper,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(\n      /**\n      * @return {?}\n      */\n      function () {\n        return CdkStepper;\n      })]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [STEPPER_GLOBAL_OPTIONS]\n    }]\n  }];\n};\n\nCdkStep.propDecorators = {\n  stepLabel: [{\n    type: ContentChild,\n    args: [CdkStepLabel]\n  }],\n  content: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }],\n  stepControl: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  errorMessage: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }],\n  state: [{\n    type: Input\n  }],\n  editable: [{\n    type: Input\n  }],\n  optional: [{\n    type: Input\n  }],\n  completed: [{\n    type: Input\n  }],\n  hasError: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-step',\n      exportAs: 'cdkStep',\n      template: '<ng-template><ng-content></ng-content></ng-template>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(\n        /**\n         * @return {?}\n         */\n        function () {\n          return CdkStepper;\n        })]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [STEPPER_GLOBAL_OPTIONS]\n      }]\n    }];\n  }, {\n    editable: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    completed: [{\n      type: Input\n    }],\n    hasError: [{\n      type: Input\n    }],\n    stepLabel: [{\n      type: ContentChild,\n      args: [CdkStepLabel]\n    }],\n    content: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    stepControl: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  CdkStep.ngAcceptInputType_editable;\n  /** @type {?} */\n\n  CdkStep.ngAcceptInputType_hasError;\n  /** @type {?} */\n\n  CdkStep.ngAcceptInputType_optional;\n  /** @type {?} */\n\n  CdkStep.ngAcceptInputType_completed;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStep.prototype._stepperOptions;\n  /** @type {?} */\n\n  CdkStep.prototype._showError;\n  /** @type {?} */\n\n  CdkStep.prototype._displayDefaultIndicatorType;\n  /**\n   * Template for step label if it exists.\n   * @type {?}\n   */\n\n  CdkStep.prototype.stepLabel;\n  /**\n   * Template for step content.\n   * @type {?}\n   */\n\n  CdkStep.prototype.content;\n  /**\n   * The top level abstract control of the step.\n   * @type {?}\n   */\n\n  CdkStep.prototype.stepControl;\n  /**\n   * Whether user has seen the expanded step content or not.\n   * @type {?}\n   */\n\n  CdkStep.prototype.interacted;\n  /**\n   * Plain text label of the step.\n   * @type {?}\n   */\n\n  CdkStep.prototype.label;\n  /**\n   * Error message to display when there's an error.\n   * @type {?}\n   */\n\n  CdkStep.prototype.errorMessage;\n  /**\n   * Aria label for the tab.\n   * @type {?}\n   */\n\n  CdkStep.prototype.ariaLabel;\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   * @type {?}\n   */\n\n  CdkStep.prototype.ariaLabelledby;\n  /**\n   * State of the step.\n   * @type {?}\n   */\n\n  CdkStep.prototype.state;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStep.prototype._editable;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStep.prototype._optional;\n  /** @type {?} */\n\n  CdkStep.prototype._completedOverride;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStep.prototype._customError;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStep.prototype._stepper;\n}\n\nvar CdkStepper = /*#__PURE__*/function () {\n  /**\n   * @param {?} _dir\n   * @param {?} _changeDetectorRef\n   * @param {?=} _elementRef\n   * @param {?=} _document\n   */\n  function CdkStepper(_dir, _changeDetectorRef, _elementRef, _document) {\n    _classCallCheck(this, CdkStepper);\n\n    this._dir = _dir;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    /**\n     * Emits when the component is destroyed.\n     */\n\n    this._destroyed = new Subject();\n    this._linear = false;\n    this._selectedIndex = 0;\n    /**\n     * Event emitted when the selected step has changed.\n     */\n\n    this.selectionChange = new EventEmitter();\n    this._orientation = 'horizontal';\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n  /**\n   * The list of step components that the stepper is holding.\n   * @return {?}\n   */\n\n\n  _createClass(CdkStepper, [{\n    key: \"ngAfterViewInit\",\n\n    /**\n     * @return {?}\n     */\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      // Note that while the step headers are content children by default, any components that\n      // extend this one might have them as view children. We initialize the keyboard handling in\n      // AfterViewInit so we're guaranteed for both view and content children to be defined.\n      this._keyManager = new FocusKeyManager(this._stepHeader).withWrap().withVerticalOrientation(this._orientation === 'vertical');\n      (this._dir ?\n      /** @type {?} */\n      this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(\n      /**\n      * @param {?} direction\n      * @return {?}\n      */\n      function (direction) {\n        return _this._keyManager.withHorizontalOrientation(direction);\n      });\n\n      this._keyManager.updateActiveItem(this._selectedIndex);\n\n      this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (!_this.selected) {\n          _this._selectedIndex = Math.max(_this._selectedIndex - 1, 0);\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._updateSelectedItemIndex(0);\n\n      this.steps.forEach(\n      /**\n      * @param {?} step\n      * @return {?}\n      */\n      function (step) {\n        return step.reset();\n      });\n\n      this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getStepLabelId\",\n    value: function _getStepLabelId(i) {\n      return \"cdk-step-label-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getStepContentId\",\n    value: function _getStepContentId(i) {\n      return \"cdk-step-content-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_stateChanged\",\n    value: function _stateChanged() {\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getAnimationDirection\",\n    value: function _getAnimationDirection(index) {\n      /** @type {?} */\n      var position = index - this._selectedIndex;\n\n      if (position < 0) {\n        return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n      } else if (position > 0) {\n        return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n      }\n\n      return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getIndicatorType\",\n    value: function _getIndicatorType(index) {\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : STEP_STATE.NUMBER;\n\n      /** @type {?} */\n      var step = this.steps.toArray()[index];\n      /** @type {?} */\n\n      var isCurrentStep = this._isCurrentStep(index);\n\n      return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getDefaultIndicatorLogic\",\n    value: function _getDefaultIndicatorLogic(step, isCurrentStep) {\n      if (step._showError && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (!step.completed || isCurrentStep) {\n        return STEP_STATE.NUMBER;\n      } else {\n        return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n      }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getGuidelineLogic\",\n    value: function _getGuidelineLogic(step, isCurrentStep) {\n      var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : STEP_STATE.NUMBER;\n\n      if (step._showError && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (step.completed && !isCurrentStep) {\n        return STEP_STATE.DONE;\n      } else if (step.completed && isCurrentStep) {\n        return state;\n      } else if (step.editable && isCurrentStep) {\n        return STEP_STATE.EDIT;\n      } else {\n        return state;\n      }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isCurrentStep\",\n    value: function _isCurrentStep(index) {\n      return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getFocusIndex\",\n    value: function _getFocusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"_updateSelectedItemIndex\",\n    value: function _updateSelectedItemIndex(newIndex) {\n      /** @type {?} */\n      var stepsArray = this.steps.toArray();\n      this.selectionChange.emit({\n        selectedIndex: newIndex,\n        previouslySelectedIndex: this._selectedIndex,\n        selectedStep: stepsArray[newIndex],\n        previouslySelectedStep: stepsArray[this._selectedIndex]\n      }); // If focus is inside the stepper, move it to the next header, otherwise it may become\n      // lost when the active step content is hidden. We can't be more granular with the check\n      // (e.g. checking whether focus is inside the active step), because we don't have a\n      // reference to the elements that are rendering out the content.\n\n      this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n      this._selectedIndex = newIndex;\n\n      this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      /** @type {?} */\n      var hasModifier = hasModifierKey(event);\n      /** @type {?} */\n\n      var keyCode = event.keyCode;\n      /** @type {?} */\n\n      var manager = this._keyManager;\n\n      if (manager.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n        this.selectedIndex = manager.activeItemIndex;\n        event.preventDefault();\n      } else if (keyCode === HOME) {\n        manager.setFirstItemActive();\n        event.preventDefault();\n      } else if (keyCode === END) {\n        manager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"_anyControlsInvalidOrPending\",\n    value: function _anyControlsInvalidOrPending(index) {\n      /** @type {?} */\n      var steps = this.steps.toArray();\n      steps[this._selectedIndex].interacted = true;\n\n      if (this._linear && index >= 0) {\n        return steps.slice(0, index).some(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          /** @type {?} */\n          var control = step.stepControl;\n          /** @type {?} */\n\n          var isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n          return isIncomplete && !step.optional && !step._completedOverride;\n        });\n      }\n\n      return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_layoutDirection\",\n    value: function _layoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_containsFocus\",\n    value: function _containsFocus() {\n      if (!this._document || !this._elementRef) {\n        return false;\n      }\n      /** @type {?} */\n\n\n      var stepperElement = this._elementRef.nativeElement;\n      /** @type {?} */\n\n      var focusedElement = this._document.activeElement;\n      return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n  }, {\n    key: \"steps\",\n    get: function get() {\n      return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n\n  }, {\n    key: \"linear\",\n    get: function get() {\n      return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selectedIndex\",\n    get: function get() {\n      return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ,\n    set: function set(index) {\n      /** @type {?} */\n      var newIndex = coerceNumberProperty(index);\n\n      if (this.steps) {\n        // Ensure that the index can't be out of bounds.\n        if (newIndex < 0 || newIndex > this.steps.length - 1) {\n          throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n        }\n\n        if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) && (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n          this._updateSelectedItemIndex(index);\n        }\n      } else {\n        this._selectedIndex = newIndex;\n      }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n      return this.steps ? this.steps.toArray()[this.selectedIndex] :\n      /** @type {?} */\n      undefined;\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    ,\n    set: function set(step) {\n      this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n  }]);\n\n  return CdkStepper;\n}();\n\nCdkStepper.ɵfac = function CdkStepper_Factory(t) {\n  return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepper,\n  selectors: [[\"\", \"cdkStepper\", \"\"]],\n  contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    }\n  },\n  inputs: {\n    linear: \"linear\",\n    selectedIndex: \"selectedIndex\",\n    selected: \"selected\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"cdkStepper\"]\n});\n/** @nocollapse */\n\nCdkStepper.ctorParameters = function () {\n  return [{\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nCdkStepper.propDecorators = {\n  _steps: [{\n    type: ContentChildren,\n    args: [CdkStep, {\n      descendants: true\n    }]\n  }],\n  _stepHeader: [{\n    type: ContentChildren,\n    args: [CdkStepHeader, {\n      descendants: true\n    }]\n  }],\n  linear: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  selectionChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepper]',\n      exportAs: 'cdkStepper'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    selectionChange: [{\n      type: Output\n    }],\n    linear: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    _steps: [{\n      type: ContentChildren,\n      args: [CdkStep, {\n        descendants: true\n      }]\n    }],\n    _stepHeader: [{\n      type: ContentChildren,\n      args: [CdkStepHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  CdkStepper.ngAcceptInputType_editable;\n  /** @type {?} */\n\n  CdkStepper.ngAcceptInputType_optional;\n  /** @type {?} */\n\n  CdkStepper.ngAcceptInputType_completed;\n  /** @type {?} */\n\n  CdkStepper.ngAcceptInputType_hasError;\n  /** @type {?} */\n\n  CdkStepper.ngAcceptInputType_linear;\n  /** @type {?} */\n\n  CdkStepper.ngAcceptInputType_selectedIndex;\n  /**\n   * Emits when the component is destroyed.\n   * @type {?}\n   * @protected\n   */\n\n  CdkStepper.prototype._destroyed;\n  /**\n   * Used for managing keyboard focus.\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._keyManager;\n  /**\n   * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._document;\n  /**\n   * The list of step components that the stepper is holding.\n   * @deprecated use `steps` instead\n   * \\@breaking-change 9.0.0 remove this property\n   * @type {?}\n   */\n\n  CdkStepper.prototype._steps;\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * \\@breaking-change 8.0.0\n   * @type {?}\n   */\n\n  CdkStepper.prototype._stepHeader;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._linear;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._selectedIndex;\n  /**\n   * Event emitted when the selected step has changed.\n   * @type {?}\n   */\n\n  CdkStepper.prototype.selectionChange;\n  /**\n   * Used to track unique ID for each stepper component.\n   * @type {?}\n   */\n\n  CdkStepper.prototype._groupId;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  CdkStepper.prototype._orientation;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._dir;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._changeDetectorRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\n\n\nfunction AbstractControlLike() {}\n\nif (false) {\n  /** @type {?} */\n  AbstractControlLike.prototype.asyncValidator;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.dirty;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.disabled;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.enabled;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.errors;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.invalid;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.parent;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.pending;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.pristine;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.root;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.status;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.statusChanges;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.touched;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.untouched;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.updateOn;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.valid;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.validator;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.value;\n  /** @type {?} */\n\n  AbstractControlLike.prototype.valueChanges;\n  /**\n   * @return {?}\n   */\n\n  AbstractControlLike.prototype.clearAsyncValidators = function () {};\n  /**\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.clearValidators = function () {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.disable = function (opts) {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.enable = function (opts) {};\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.get = function (path) {};\n  /**\n   * @param {?} errorCode\n   * @param {?=} path\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.getError = function (errorCode, path) {};\n  /**\n   * @param {?} errorCode\n   * @param {?=} path\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.hasError = function (errorCode, path) {};\n  /**\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.markAllAsTouched = function () {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.markAsDirty = function (opts) {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.markAsPending = function (opts) {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.markAsPristine = function (opts) {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.markAsTouched = function (opts) {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.markAsUntouched = function (opts) {};\n  /**\n   * @param {?} value\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.patchValue = function (value, options) {};\n  /**\n   * @param {?=} value\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.reset = function (value, options) {};\n  /**\n   * @param {?} newValidator\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.setAsyncValidators = function (newValidator) {};\n  /**\n   * @param {?} errors\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.setErrors = function (errors, opts) {};\n  /**\n   * @param {?} parent\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.setParent = function (parent) {};\n  /**\n   * @param {?} newValidator\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.setValidators = function (newValidator) {};\n  /**\n   * @param {?} value\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.setValue = function (value, options) {};\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.updateValueAndValidity = function (opts) {};\n  /**\n   * @param {?} value\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.patchValue = function (value, options) {};\n  /**\n   * @param {?=} formState\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.reset = function (formState, options) {};\n  /**\n   * @param {?} value\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  AbstractControlLike.prototype.setValue = function (value, options) {};\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Button that moves to the next step in a stepper workflow.\n */\n\n\nvar CdkStepperNext = /*#__PURE__*/function () {\n  /**\n   * @param {?} _stepper\n   */\n  function CdkStepperNext(_stepper) {\n    _classCallCheck(this, CdkStepperNext);\n\n    this._stepper = _stepper;\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     */\n\n    this.type = 'submit';\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(CdkStepperNext, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      this._stepper.next();\n    }\n  }]);\n\n  return CdkStepperNext;\n}();\n\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) {\n  return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepperNext,\n  selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n/** @nocollapse */\n\nCdkStepperNext.ctorParameters = function () {\n  return [{\n    type: CdkStepper\n  }];\n};\n\nCdkStepperNext.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  _handleClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperNext]',\n      host: {\n        '[type]': 'type'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    _handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Type of the next button. Defaults to \"submit\" if not specified.\n   * @type {?}\n   */\n  CdkStepperNext.prototype.type;\n  /** @type {?} */\n\n  CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\n\n\nvar CdkStepperPrevious = /*#__PURE__*/function () {\n  /**\n   * @param {?} _stepper\n   */\n  function CdkStepperPrevious(_stepper) {\n    _classCallCheck(this, CdkStepperPrevious);\n\n    this._stepper = _stepper;\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     */\n\n    this.type = 'button';\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(CdkStepperPrevious, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      this._stepper.previous();\n    }\n  }]);\n\n  return CdkStepperPrevious;\n}();\n\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) {\n  return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepperPrevious,\n  selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n/** @nocollapse */\n\nCdkStepperPrevious.ctorParameters = function () {\n  return [{\n    type: CdkStepper\n  }];\n};\n\nCdkStepperPrevious.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  _handleClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperPrevious]',\n      host: {\n        '[type]': 'type'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    _handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Type of the previous button. Defaults to \"button\" if not specified.\n   * @type {?}\n   */\n  CdkStepperPrevious.prototype.type;\n  /** @type {?} */\n\n  CdkStepperPrevious.prototype._stepper;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar CdkStepperModule = function CdkStepperModule() {\n  _classCallCheck(this, CdkStepperModule);\n};\n\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CdkStepperModule\n});\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CdkStepperModule_Factory(t) {\n    return new (t || CdkStepperModule)();\n  },\n  imports: [[BidiModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, {\n    declarations: function declarations() {\n      return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious];\n    },\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n      declarations: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };","map":{"version":3,"sources":["../../../../../cdk/stepper/step-header.ts","../../../../../cdk/stepper/step-label.ts","../../../../../cdk/stepper/stepper.ts","../../../../../cdk/stepper/stepper-button.ts","../../../../../cdk/stepper/stepper-module.ts","../../../../../cdk/stepper/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(protected _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {END, ENTER, hasModifierKey, HOME, SPACE} from '@angular/cdk/keycodes';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\nimport {CdkStepHeader} from './step-header';\nimport {CdkStepLabel} from './step-label';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous'|'current'|'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal'|'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number'|'edit'|'done'|'error'|string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS = new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef, {static: true}) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControlLike;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as completed. */\n  @Input()\n  get editable(): boolean {\n    return this._editable;\n  }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean {\n    return this._optional;\n  }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value: boolean) {\n    this._completedOverride = coerceBooleanProperty(value);\n  }\n  _completedOverride: boolean|null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean|null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n      @Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper,\n      @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document|undefined;\n\n  /**\n   * The list of step components that the stepper is holding.\n   * @deprecated use `steps` instead\n   * @breaking-change 9.0.0 remove this property\n   */\n  @ContentChildren(CdkStep, {descendants: true}) _steps: QueryList<CdkStep>;\n\n  /** The list of step components that the stepper is holding. */\n  get steps(): QueryList<CdkStep> {\n    return this._steps;\n  }\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader, {descendants: true}) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean {\n    return this._linear;\n  }\n  set linear(value: boolean) {\n    this._linear = coerceBooleanProperty(value);\n  }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index: number) {\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps) {\n      // Ensure that the index can't be out of bounds.\n      if (newIndex < 0 || newIndex > this.steps.length - 1) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n          (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output()\n  selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n      @Optional() private _dir: Directionality, private _changeDetectorRef: ChangeDetectorRef,\n      // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n      private _elementRef?: ElementRef<HTMLElement>, @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n                           .withWrap()\n                           .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? (this._dir.change as Observable<Direction>) : observableOf<Direction>())\n        .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n        .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItem(this._selectedIndex);\n\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                                               this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n      step: CdkStep, isCurrentStep: boolean, state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItem(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete =\n            control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_linear: BooleanInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n\n\n/**\n * Simplified representation of an \"AbstractControl\" from @angular/forms.\n * Used to avoid having to bring in @angular/forms for a single optional interface.\n * @docs-private\n */\ninterface AbstractControlLike {\n  asyncValidator: ((control: any) => any) | null;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  errors: {[key: string]: any} | null;\n  invalid: boolean;\n  parent: any;\n  pending: boolean;\n  pristine: boolean;\n  root: AbstractControlLike;\n  status: string;\n  statusChanges: Observable<any>;\n  touched: boolean;\n  untouched: boolean;\n  updateOn: any;\n  valid: boolean;\n  validator: ((control: any) => any) | null;\n  value: any;\n  valueChanges: Observable<any>;\n  clearAsyncValidators(): void;\n  clearValidators(): void;\n  disable(opts?: any): void;\n  enable(opts?: any): void;\n  get(path: (string | number)[] | string): AbstractControlLike | null;\n  getError(errorCode: string, path?: (string | number)[] | string): any;\n  hasError(errorCode: string, path?: (string | number)[] | string): boolean;\n  markAllAsTouched(): void;\n  markAsDirty(opts?: any): void;\n  markAsPending(opts?: any): void;\n  markAsPristine(opts?: any): void;\n  markAsTouched(opts?: any): void;\n  markAsUntouched(opts?: any): void;\n  patchValue(value: any, options?: Object): void;\n  reset(value?: any, options?: Object): void;\n  setAsyncValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setErrors(errors: {[key: string]: any} | null, opts?: any): void;\n  setParent(parent: any): void;\n  setValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setValue(value: any, options?: Object): void;\n  updateValueAndValidity(opts?: any): void;\n  patchValue(value: any, options?: any): void;\n  reset(formState?: any, options?: any): void;\n  setValue(value: any, options?: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.next();\n  }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.previous();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}